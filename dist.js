

var lowerCase = window.navigator.userAgent.toLowerCase();
var mobile = (((((((lowerCase.indexOf("mobile") !== -1) || (lowerCase.indexOf("android") !== -1)) || (lowerCase.indexOf("ipad") !== -1)) || (lowerCase.indexOf("iphone") !== -1)) || (lowerCase.indexOf("ipod") !== -1)) || (lowerCase.indexOf("kindle") !== -1)) || (lowerCase.indexOf("silk/") !== -1)) ? 1 : 0;
if (mobile === 1) {
    var meta = window.document.createElement("meta");
    meta.name = "viewport";
    meta.content = "initial-scale=1.0 maximum-scale=1.0";
    window.document.getElementsByTagName("head")[0].appendChild(meta);
}
localStorage = null;
try {
    localStorage = window.localStorage;
    localStorage.setItem("LapaMauve", "1");
    localStorage.getItem("LapaMauve");
} catch (error) {
    storage = {};
    localStorage = {};
    localStorage.setItem = function(storageCell, cellValue) {
        storage[storageCell] = cellValue;
    };
    localStorage.getItem = function(storageCell) {
        return (storage[storageCell] === window.undefined) ? null : storage[storageCell];
    };
}
var setx;
var sety;
var rowx;
var rowy;
var canvas;
var screenWidth, screenHeight, screencenterX, screencenterY, mWmwm, nVnwN, wvwNM, wwWnm, nvm, MMwnm, VNwMw, nwVmW;
var ctx;
var delta = 0;
var VmN = 0;
var scaleby = 1;
var mNVwV = 100;
var WMWmn = 1;
var __RESIZE_METHOD_SCALE__ = 1;
var nWWnW = 0;
var CanvasUtils = (function() {
    var wmWnm = 5;
    var nnW = 0;
    var vision = 0;
    var WVNmV = 0;
    var wMmNw = 0;
    var VVWwv = new window.Array(wmWnm);
    var winsetting = {
        vMMnv: __RESIZE_METHOD_SCALE__,
        size: window.innerWidth,
        wmNnN: true,
        MNWmW: window.devicePixelRatio || 1,
        NmwvV: window.devicePixelRatio || 1,
        nmWmN: 1,
        wWMMM: 0,
        ratio: 0,
        MMw: 1,
        WWvvm: 1,
        can: "can",
        bod: "bod"
    };

    function initAnimatedCanvas(wMN, vMMnv, can, bod, wMv, mnV, wmNnN) {
        MNwmM(wMN);
        if (vMMnv !== window.undefined) winsetting.vMMnv = vMMnv;
        if (can !== window.undefined) winsetting.can = can;
        if (bod !== window.undefined) winsetting.bod = bod;
        if (wMv !== window.undefined) winsetting.size = wMv;
        if (mnV !== window.undefined) winsetting.ratio = mnV;
        if (wmNnN !== window.undefined) winsetting.wmNnN = wmNnN;
        canvas = window.document.getElementById(winsetting.can);
        ctx = canvas.getContext('2d');
        winsetting.nmWmN = ((((ctx.VVnwv || ctx.VVMNN) || ctx.MNVww) || ctx.MmNMW) || ctx.NwmMW) || 1;
        nWVwM();
        canvas.oncontextmenu = function() {
            return false;
        };
        var win = window.document.getElementById(winsetting.bod);
        win.ondragstart = function() {
            return false;
        };
        win.ondrop = function() {
            return false;
        };
        win.onresize = bodOnResize;
        bodOnResize();
        vNwwn();
    };

    function bodOnResize() {
        var mnV, SY, SX;
        if (winsetting.vMMnv === nWWnW) {
            if (window.innerWidth > window.innerHeight) {
                mnV = window.innerHeight / window.innerWidth;
                SY = winsetting.size;
                SX = window.Math.floor(SY * mnV);
            } else {
                mnV = window.innerWidth / window.innerHeight;
                SX = winsetting.size;
                SY = window.Math.floor(SX * mnV);
            }
        } else {
            SY = window.innerWidth;
            SX = window.innerHeight;
        }
        screenWidth = SY;
        screenHeight = SX;
        screencenterX = window.Math.floor(screenWidth / 2);
        screencenterY = window.Math.floor(screenHeight / 2);
        mWmwm = window.Math.floor(screenWidth / 4);
        nVnwN = window.Math.floor(screenHeight / 4);
        winsetting.MMw = screenWidth / window.innerWidth;
        winsetting.WWvvm = screenHeight / window.innerHeight;
        mnV = winsetting.NmwvV / winsetting.nmWmN;
        if (winsetting.ratio !== 0) mnV *= winsetting.ratio;
        canvas.width = screenWidth * mnV;
        canvas.height = screenHeight * mnV;
        if (winsetting.vMMnv === __RESIZE_METHOD_SCALE__) {
            scaleby = window.Math.max(SX / ((winsetting.size * 11) / 16), SY / winsetting.size);
            canvas.style.width = SY + "px";
            canvas.style.height = SX + "px";
        }
        wvwNM = screenWidth / scaleby;
        wwWnm = screenHeight / scaleby;
        nvm = screencenterX / scaleby;
        MMwnm = screencenterY / scaleby;
        VNwMw = mWmwm / scaleby;
        nwVmW = nVnwN / scaleby;
        ctx.scale(mnV, mnV);
        NMwvN(ctx, winsetting.wmNnN);
        nWMmW.update();
    };

    function nWVwM() {
        var vWvVM = 0;
        var vandorprefix = ['ms', 'moz', 'webkit', 'o'];
        for (var WX = 0;
            (WX < vandorprefix.length) && !window.requestAnimationFrame; ++WX) {
            window.requestAnimationFrame = window[vandorprefix[WX] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vandorprefix[WX] + 'CancelAnimationFrame'] || window[vandorprefix[WX] + 'CancelRequestAnimationFrame'];
        }
        if (!window.requestAnimationFrame) window.requestAnimationFrame = function(callback, mMWvw) {
            var NVWVM = (new window.Date).getTime();
            var VvmvV = window.Math.max(0, 16 - (NVWVM - vWvVM));
            var Wn = window.setTimeout(function() {
                callback(NVWVM + VvmvV);
            }, VvmvV);
            vWvVM = NVWVM + VvmvV;
            return Wn;
        };
        if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(Wn) {
            window.clearTimeout(Wn);
        };
    };

    function NmmvM(mvWMM) {
        if (((mvWMM === 1) || (mvWMM === 2)) || (mvWMM === 3)) {
            if (mvWMM === winsetting.wWMMM) {
                mvWMM = 0;
                winsetting.NmwvV = winsetting.MNWmW / WMWmn;
            } else
                winsetting.NmwvV = winsetting.MNWmW / mvWMM;
            winsetting.wWMMM = mvWMM;
            bodOnResize();
        }
    };

    function nwMNV() {
        vision++;
        nnW += delta;
        if (nnW >= 1000) {
            WVNmV = (1000 * vision) / nnW;
            VVWwv[wMmNw] = WVNmV;
            wMmNw++;
            if (wMmNw === wmWnm) {
                var mmmWv = 0;
                for (var i = 0; i < wmWnm; i++)
                    mmmWv += VVWwv[i];
                mmmWv = mmmWv / wmWnm;
                var mnV = winsetting.MNWmW / winsetting.nmWmN;
                if (((winsetting.wWMMM === 0) && (mnV === 2)) && (window.Math.abs(mNVwV - mmmWv) < 5)) {
                    if ((mmmWv < 22) && (mNVwV < 22)) {
                        if (WMWmn === 1) {
                            WMWmn = 2;
                            winsetting.NmwvV = winsetting.MNWmW / 2;
                            bodOnResize();
                        } else if (WMWmn === 2) {
                            WMWmn = 3;
                            winsetting.NmwvV = winsetting.MNWmW / 3;
                            bodOnResize();
                        }
                    } else if ((winsetting.MNWmW > winsetting.NmwvV) && ((mmmWv + mNVwV) > 119)) {
                        if (WMWmn === 2) {
                            WMWmn = 1;
                            winsetting.NmwvV = winsetting.MNWmW;
                            bodOnResize();
                        } else if (WMWmn === 3) {
                            WMWmn = 2;
                            winsetting.NmwvV = winsetting.MNWmW / 2;
                            bodOnResize();
                        }
                    }
                }
                mNVwV = mmmWv;
                wMmNw = 0;
            }
            nnW = 0;
            vision = 0;
        }
    };

    function vNwwn(vWVVW) {
        window.requestAnimationFrame(vNwwn);
        if (vWVVW !== window.undefined) {
            delta = vWVVW - VmN;
            VmN = vWVVW;
        }
        nwMNV();
        nWMmW.draw();
    };

    function MvMWN(ctx, vW) {
        ctx.imageSmoothingEnabled = vW;
        ctx.VMvwwvW = vW;
        ctx.mvNWwmv = vW;
        ctx.MMVvnwv = vW;
        ctx.VVMNNnm = vW;
    };

    function NMwvN(ctx, vW) {
        if (vW === false) window.document.getElementById(winsetting.can).style.mNMmw = "pixelated";
        else window.document.getElementById(winsetting.can).style.mNMmw = "auto";
        MvMWN(ctx, vW);
    };

    function getimage(Mwwwm) {
        var W = new window.Image;
        W.src = Mwwwm.toDataURL("image/png");
        W.width = Mwwwm.width;
        W.height = Mwwwm.height;
        return W;
    };

    function reactfill(ctx, WNvmm, MMNwm, wNnMn, Vvwwm) {
        ctx.beginPath();
        ctx.moveTo(WNvmm * scaleby, MMNwm * scaleby);
        ctx.lineTo(wNnMn * scaleby, Vvwwm * scaleby);
    };

    function mvWVv(ctx, MWnvm, wNNwN, SY) {
        if (MWnvm !== window.undefined) {
            ctx.fillStyle = MWnvm;
            ctx.fill();
        }
        if (wNNwN !== window.undefined) {
            if (SY !== window.undefined)
                ctx.lineWidth = SY;
            ctx.strokeStyle = wNNwN;
            ctx.stroke();
        }
    };

    function vNnvV(ctx, WX, WY, VwW, WVv) {
        ctx.beginPath();
        ctx.rect(WX * scaleby, WY * scaleby, VwW * scaleby, WVv * scaleby);
    };


    function Nvnnm() {
        var color = "#";
        for (var i = 0; i < 3; i++) {
            var N = window.Math.floor(window.Math.random() * 256);
            color += (N < 16) ? ("0" + N.toString(16)) : N.toString(16);
        }
        return color;
    };

    function wmvwW(nMwVV, vW) {
        var vvv = nMwVV.length;
        var VmVNN = window.Math.floor(vW * vvv);
        var WNMVw = nMwVV[window.Math.max(0, VmVNN - 1)];
        var VnmVm = nMwVV[window.Math.min(VmVNN, vvv - 1)];
        vW = (vW % (1 / vvv)) * vvv;
        var color = "#";
        for (var i = 0; i < 3; i++) {
            var WNn = window.Math.floor(((VnmVm[i] - WNMVw[i]) * vW) + WNMVw[i]);
            color += (WNn < 16) ? ("0" + WNn.toString(16)) : WNn.toString(16);
        }
        return color;
    };

    function nwN(ctx, WX, WY, VwW, WVv, color) {
        ctx.beginPath();
        ctx.fillStyle = color;
        ctx.fillRect(WX * scaleby, WY * scaleby, VwW * scaleby, WVv * scaleby);
    };

    function VWVVm(ctx, WX, WY, N) {
        ctx.beginPath();
        ctx.arc(WX * scaleby, WY * scaleby, N * scaleby, 0, window.Math.PI * 2);
    };

    function vNmNM(ctx, WX, WY, N, VVWWN, WVMMW) {
        ctx.beginPath();
        ctx.arc(WX * scaleby, WY * scaleby, N * scaleby, VVWWN, WVMMW);
    };
    var nWMmW = window.undefined;

    function MNwmM(wMN) {
        nWMmW = wMN;
    };

    function onloadimg() {
        this.m = 1;
        this.Wvw = this.width / 2;
        this.mNm = this.height / 2;
    };

    function onloadimgerror() {
        this.m = 0;
    };

    function loadImage(MnM, W) {
        if ((W !== window.undefined) && (W.m === 2))
            return W;
        W = new window.Image;
        W.m = 2;
        W.onload = onloadimg;
        W.onerror = onloadimgerror;
        W.src = MnM;
        return W;
    };

    function nWV(WMwvw, WnnmM, VwW) {
        var WNn = window.Math.max(1, window.Math.floor(60 / mNVwV));
        for (var i = 0; i < WNn; i++)
            WMwvw = WNW.nWV(WMwvw, WnnmM, VwW);
        return WMwvw;
    };

    function fullscreenfunc() {
        var getbod = window.document.getElementById("bod");
        if (getbod.requestFullscreen) getbod.requestFullscreen();
        else if (getbod.msRequestFullscreen) getbod.msRequestFullscreen();
        else if (getbod.vmVwn) getbod.vmVwn();
        else if (getbod.webkitRequestFullscreen) getbod.webkitRequestFullscreen();
    };

    function exitfullscreenfunc() {
        if (window.document.exitFullscreen)
            window.document.exitFullscreen();
        else if (window.document.msExitFullscreen)
            window.document.msExitFullscreen();
        else if (window.document.mozCancelFullscreen)
            window.document.Wnwmv();
        else if (window.document.webkitExitFullscreen)
            window.document.webkitExitFullscreen();
    };

    function VNmVM(MnM) {
        return {
            src: MnM,
            W: {
                m: 0
            }
        };
    };

    function MMvvN(MnM) {
        var WVV = VNmVM(MnM);
        WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
        return WVV;
    };

    function putonscreen(WVV, WX, WY, wW, wWNWN, wnwnM, imgMovement) {
        var W = WVV.W;
        if (W.m !== 1) {
            WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
            return;
        }
        imgMovement *= scaleby;
        WX *= scaleby;
        WY *= scaleby;
        var VwW = W.Wvw * imgMovement;
        var WVv = W.mNm * imgMovement;
        var nnvvn = (-VwW / 2) + (wWNWN * imgMovement);
        var nNmWM = (-WVv / 2) + (wnwnM * imgMovement);
        if ((((((WX + nnvvn) + VwW) < 0) || (((WY + nNmWM) + WVv) < 0)) || (((WX - VwW) - screenWidth) > 0)) || (((WY - WVv) - screenHeight) > 0))
            return;
        ctx.save();
        ctx.translate(WX, WY);
        ctx.rotate(wW);
        ctx.drawImage(W, nnvvn, nNmWM, VwW, WVv);
        ctx.restore();
    };

    function mVnNN(WVV, WX, WY, wW, wWNWN, wnwnM, imgMovement, wwvMW, nMmWV, vwWmv) {
        var W = WVV.W;
        if (W.m !== 1) {
            WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
            return;
        }
        imgMovement *= scaleby;
        var VwW = W.Wvw * imgMovement;
        var WVv = W.mNm * imgMovement;
        ctx.save();
        ctx.translate(WX * scaleby, WY * scaleby);
        ctx.rotate(wW);
        ctx.translate(wWNWN * imgMovement, wnwnM * imgMovement);
        ctx.rotate(wwvMW);
        ctx.drawImage(W, (-VwW / 2) + (nMmWV * imgMovement), (-WVv / 2) + (vwWmv * imgMovement), VwW, WVv);
        ctx.restore();
    };

    function wWNwv(WVV, WX, WY, wW, mnmvW, vNwWN, nwmmW, wVnWn, imgMovement) {
        var W = WVV.W;
        if (W.m !== 1) {
            WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
            return;
        }
        imgMovement *= scaleby;
        WX *= scaleby;
        WY *= scaleby;
        var VwW = (nwmmW / 2) * imgMovement;
        var WVv = (wVnWn / 2) * imgMovement;
        var nnvvn = -VwW / 2;
        var nNmWM = -WVv / 2;
        if ((((((WX + nnvvn) + VwW) < 0) || (((WY + nNmWM) + WVv) < 0)) || (((WX - VwW) - screenWidth) > 0)) || (((WY - WVv) - screenHeight) > 0))
            return;
        ctx.save();
        ctx.translate(WX, WY);
        ctx.rotate(wW);
        ctx.drawImage(W, mnmvW, vNwWN, nwmmW, wVnWn, nnvvn, nNmWM, VwW, WVv);
        ctx.restore();
    };

    function vWNWw(WvMwm, WVm, M, WvvVn, WNn, N) {
        WvMwm.beginPath();
        WvMwm.moveTo(WVm + N, M);
        WvMwm.arcTo(WVm + WvvVn, M, WVm + WvvVn, M + WNn, N);
        WvMwm.arcTo(WVm + WvvVn, M + WNn, WVm, M + WNn, N);
        WvMwm.arcTo(WVm, M + WNn, WVm, M, N);
        WvMwm.arcTo(WVm, M, WVm + WvvVn, M, N);
        WvMwm.closePath();
    };
    return {
        options: winsetting,
        initAnimatedCanvas: initAnimatedCanvas,
        NMwvN: NMwvN,
        MvMWN: MvMWN,
        NmmvM: NmmvM,
        getimage: getimage,
        rect: vNnvV,
        fillRect: nwN,
        VWVVm: VWVVm,
        vWNWw: vWNWw,
        Nvnnm: Nvnnm,
        wmvwW: wmvwW,
        line: reactfill,
        mvWVv: mvWVv,
        MNwmM: MNwmM,
        loadImage: loadImage,
        nWV: nWV,
        fullscreenfunc: fullscreenfunc,
        exitfullscreenfunc: exitfullscreenfunc,
        putonscreen: putonscreen,
        mVnNN: mVnNN,
        wWNwv: wWNwv,
        VNmVM: VNmVM,
        MMvvN: MMvvN
    };
})();
var checkspos = (function() {
    function wW(wwMnv, NwVWn, Nnvnw, NVNwW) {
        var WWNwv = NVNwW - NwVWn;
        var wNmNv = Nnvnw - wwMnv;
        return window.Math.atan2(WWNwv, wNmNv);
    };

    function mappos(wwMnv, NwVWn, Nnvnw, NVNwW) {
        var WX = Nnvnw - wwMnv;
        var WY = NVNwW - NwVWn;
        return window.Math.sqrt((WX * WX) + (WY * WY));
    };

    function MWV(wwMnv, NwVWn, Nnvnw, NVNwW) {
        var WX = Nnvnw - wwMnv;
        var WY = NVNwW - NwVWn;
        return (WX * WX) + (WY * WY);
    };
    return {
        angle: wW,
        mappos: mappos,
        MWV: MWV
    };
})();
var WNW = (function() {
    var VMNwM = window.Math.PI * 2;
    var mWV = {
        MWnmm: function(mMn, vNWmm, speed) {
            return window.Math.min((speed * mMn) + vNWmm(mMn), 1);
        },
        wwwnw: function(mMn) {
            return mMn;
        },
        wMn: function(mMn) {
            return mMn * (2 - mMn);
        },
        WwmVn: function(mMn) {
            return (((--mMn) * mMn) * mMn) + 1;
        },
        vvw: function(mMn) {
            return (mMn < 0.5) ? ((2 * mMn) * mMn) : (-1 + ((4 - (2 * mMn)) * mMn));
        },
        wWM: function(mMn) {
            return mMn * mMn;
        },
        MMvmV: function(mMn) {
            return (mMn < 0.5) ? (((4 * mMn) * mMn) * mMn) : ((((mMn - 1) * ((2 * mMn) - 2)) * ((2 * mMn) - 2)) + 1);
        },
        mNvVm: function(mMn) {
            return (mMn * mMn) * mMn;
        },
        MNNvn: function(mMn) {
            return (mMn < 0.5) ? ((((8 * mMn) * mMn) * mMn) * mMn) : (1 - ((((8 * (--mMn)) * mMn) * mMn) * mMn));
        },
        NVvWw: function(mMn) {
            return ((mMn * mMn) * mMn) * mMn;
        },
        VnvVv: function(mMn) {
            return 1 - ((((--mMn) * mMn) * mMn) * mMn);
        },
        wmWwN: function(mMn) {
            return 1 + (((((--mMn) * mMn) * mMn) * mMn) * mMn);
        }
    };

    function NvwmV(mWm) {
        if (mWm >= 20000)
            mWm = (mWm - 20000) * 1000;
        else if (mWm >= 10000)
            mWm = (mWm - 10000) * 100;
        return mWm;
    };

    function nVvNM(mWm) {
        if (mWm >= 10000) {
            var vvN = window.Math.floor(window.Math.log10(mWm)) - 2;
            var MmwWn = window.Math.max(0, 3 - vvN);
            var V = window.Math.floor(mWm / 1000).toString();
            if (MmwWn) {
                V += "." + ((mWm % 1000) / 1000).toString().substring(2).substring(0, MmwWn);
                for (var i = V.length - 1, mwMNn = 0; i > 0; i--) {
                    if (V[i] != '0') break;
                    else mwMNn++;
                }
                V = V.substring(0, V.length - mwMNn);
                if (V[V.length - 1] === '.') V = V.substring(0, V.length - 1);
            }
            V += "k";
            return V;
        } else return mWm.toString();
    };

    function nWV(WMwvw, WnnmM, VwW) {
        return ((1 - VwW) * WMwvw) + (WnnmM * VwW);
    };

    function nNNnw(vW) {
        var mWm = vW + "";
        var V = "";
        var vvv = mWm.length;
        for (var i = vvv - 1, j = 0; i >= 0; i--, j++) {
            var WNn = mWm[i];
            if ((j > 2) && (WNn !== '-')) {
                j = 0;
                V = "," + V;
            }
            V = WNn + V;
        }
        return V;
    };

    function wnvvV(MNMWN, wWn) {
        WVm = [];
        WVm.push.apply(WVm, MNMWN);
        var mWNnV = [];
        while (WVm.length > 0) {
            var N = window.Math.floor(wWn() * WVm.length);
            mWNnV.push(WVm[N]);
            WVm.splice(N, 1);
        }
        return mWNnV;
    };

    function wNNMM(VVWWN, WVMMW) {
        return WVMMW + (window.Math.round((VVWWN - WVMMW) / VMNwM) * VMNwM);
    };
    return {
        mWV: mWV,
        nWV: nWV,
        NvwmV: NvwmV,
        nVvNM: nVvNM,
        nNNnw: nNNnw,
        wnvvV: wnvvV,
        wNNMM: wNNMM
    };
})();
var myply = (function() {
    function NNNMv(event, Mnn) {
        if (Mnn !== myply.wwwmw)
            myply.state = Mnn;
        myply.nVm = window.Math.floor(event.clientX * CanvasUtils.options.MMw);
        myply.nmW = window.Math.floor(event.clientY * CanvasUtils.options.WWvvm);
        myply.x = window.Math.floor(myply.nVm / scaleby);
        myply.y = window.Math.floor(myply.nmW / scaleby);
    };

    function MWMwN() {
        myply.angle = checkspos.angle(1, 0, myply.x - nvm, myply.y - MMwnm);
    };

    function Vmmmm() {
        myply.mappos = checkspos.mappos(nvm, MMwnm, myply.x, myply.y);
    };

    function wvwWN(event, Mnn) {
        NNNMv(event, Mnn);
        MWMwN();
    };

    function VWv(event, Mnn) {
        NNNMv(event, Mnn);
        MWMwN();
        Vmmmm();
    };

    function VWn(event, Wwwnn, nvnVv) {
        event.clientX = nvnVv.clientX;
        event.clientY = nvnVv.clientY;
        event.altKey = Wwwnn.altKey;
        event.ctrlKey = Wwwnn.ctrlKey;
    };

    function vNnMv() {
        this.clientX = 0;
        this.clientY = 0;
        this.altKey = false;
        this.ctrlKey = false;
        this.preventDefault = function() {};
    };
    return {
        wwwmw: 0,
        NVMMW: 1,
        MnNNW: 2,
        state: 0,
        NNNMv: NNNMv,
        MWMwN: MWMwN,
        Vmmmm: Vmmmm,
        wvwWN: wvwWN,
        VWv: VWv,
        x: 0,
        y: 0,
        nVm: 0,
        nmW: 0,
        angle: 0,
        mappos: 0,
        VWn: VWn,
        vNnMv: vNnMv
    };
})();
var vM = (function() {
    function vWNWw(ctx, vnvMN, mWvWn, SY, SX, wwW) {
        (SY < (2 * wwW)) && (wwW = SY / 2);
        (SX < (2 * wwW)) && (wwW = SX / 2);
        (0 > wwW) && (wwW = 0);
        ctx.beginPath();
        ctx.moveTo(vnvMN + wwW, mWvWn);
        ctx.arcTo(vnvMN + SY, mWvWn, vnvMN + SY, mWvWn + SX, wwW);
        ctx.arcTo(vnvMN + SY, mWvWn + SX, vnvMN, mWvWn + SX, wwW);
        ctx.arcTo(vnvMN, mWvWn + SX, vnvMN, mWvWn, wwW);
        ctx.arcTo(vnvMN, mWvWn, vnvMN + SY, mWvWn, wwW);
        ctx.closePath();
    };

    function vWnvm(SY, SX, mMm, VmWnw, VWnmW) {
        var mv = {
            x: 0,
            y: 0
        };
        var mMm = mMm;
        var W = CanvasUtils.loadImage(mMm);
        var vvWww = 0;
        var VNWnw = 0;
        var WvWMm = VmWnw;

        function draw() {
            if (W.m !== 1)
                return;
            vvWww += window.Math.min(delta, 3 * VWnmW);
            if (vvWww > VWnmW) {
                vvWww -= VWnmW;
                VNWnw = window.Math.floor((VNWnw + 1) % (W.width / WvWMm));
            }
            ctx.drawImage(W, WvWMm * VNWnw, 0, WvWMm, W.height, mv.x, mv.y, SY * scaleby, SX * scaleby);
        };
        return {
            draw: draw,
            mv: mv
        };
    };

    function mVV(SY, SX, mMm) {
        var mv = {
            x: 0,
            y: 0,
            disable: 0
        };
        var mMm = mMm;
        var W;
        if (mMm !== window.undefined)
            W = CanvasUtils.loadImage(mMm);
        else
            mv.disable = 1;

        function vnN() {
            mv.disable = 1;
        };

        function mVw() {
            mv.disable = 0;
        };

        function draw() {
            if ((mv.disable === 1) || (W.m !== 1))
                return;
            ctx.drawImage(W, 0, 0, W.width, W.height, mv.x, mv.y, SY * scaleby, SX * scaleby);
        };
        return {
            draw: draw,
            mv: mv,
            show: mVw,
            vnN: vnN
        };
    };

    function vMM(SY, SX, Vwvwv, wvnwv) {
        var mv = {
            x: 0,
            y: 0,
            disable: 0
        };
        var Mnn = 0;
        if (wvnwv === window.undefined) {
            wvnwv = [];
            if (Vwvwv !== window.undefined) {
                for (var i = 0; i < Vwvwv.length; i++)
                    wvnwv[i] = CanvasUtils.loadImage(Vwvwv[i]);
            } else
                mv.disable = 1;
        }

        function MVN(Vwvwv, wWwmv) {
            wvnwv = wWwmv;
            for (var i = 0; i < 3; i++) {
                var W = wvnwv[i];
                var n = Vwvwv[i];
                if (W.m !== 1)
                    wvnwv[i] = CanvasUtils.loadImage(n, W);
            }
        };

        function vnN() {
            mv.disable = 1;
        };

        function mVw() {
            mv.disable = 0;
        };

        function NNv(wwMmM) {
            Mnn = wwMmM;
        };

        function MNVwM() {
            return Mnn;
        };

        function draw() {
            if (mv.disable === 1)
                return;
            var W = wvnwv[Mnn];
            if (wvnwv[Mnn].m !== 1)
                return;
            ctx.drawImage(W, 0, 0, W.width, W.height, mv.x, mv.y, SY * scaleby, SX * scaleby);
        };

        function mw() {
            if (mv.disable === 1)
                return 0;
            if ((((myply.nVm > mv.x) && (myply.nVm < (mv.x + (SY * scaleby)))) && (myply.nmW > mv.y)) && (myply.nmW < (mv.y + (SX * scaleby)))) {
                if (myply.state === myply.NVMMW)
                    Mnn = vM.Mwn;
                else if (myply.state === myply.MnNNW)
                    Mnn = vM.vnwnw;
                else if ((myply.state === myply.wwwmw) && (Mnn !== vM.Mwn))
                    Mnn = vM.vnwnw;
                return 1;
            }
            Mnn = vM.Wmm;
            return 0;
        };
        return {
            mv: mv,
            mw: mw,
            draw: draw,
            NNv: NNv,
            getState: MNVwM,
            MVN: MVN,
            show: mVw,
            vnN: vnN
        };
    };

    function showtxt(Nvm, font, color, SX, SY, MWMnw, VMnVM, vwnNV, vWM, mvwnV, VVNnV, wwW, nmvMn, color2, fontsize) {
        if (Nvm.length === 0)
            Nvm = " ";
        if (VMnVM === window.undefined)
            VMnVM = 0;
        if (vwnNV === window.undefined)
            vwnNV = 0;
        if (vWM === window.undefined)
            vWM = 0;
        if (color2 === window.undefined)
            color2 = 0;
        var canvas = window.document.createElement("canvas");
        var ctx = canvas.getContext("2d");
        ctx.textBaseline = "middle",
            ctx.font = ((((fontsize !== window.undefined) ? (fontsize + " ") : '') + SX) + "px ") + font;
        if (SY !== window.undefined)
            SY = window.Math.min(ctx.measureText(Nvm).width, SY);
        else
            SY = ctx.measureText(Nvm).width;
        canvas.width = SY + VMnVM;
        canvas.height = SX + vwnNV;
        if (MWMnw !== window.undefined) {
            if (VVNnV !== window.undefined)
                ctx.globalAlpha = VVNnV;
            ctx.fillStyle = MWMnw;
            if (wwW !== window.undefined) {
                vWNWw(ctx, vWM + 2, vWM, ((SY + VMnVM) - (vWM * 2)) - 4, (SX + vwnNV) - (vWM * 2), wwW);
                ctx.fill();
            } else
                ctx.fillRect(vWM, vWM, (SY + VMnVM) - (vWM * 2), (SX + vwnNV) - (vWM * 2));
            ctx.globalAlpha = 1;
            if (vWM !== 0) {
                ctx.lineWidth = vWM;
                ctx.strokeStyle = mvwnV;
                ctx.stroke();
            }
        }
        ctx.textBaseline = "middle";
        ctx.font = ((((fontsize !== window.undefined) ? (fontsize + " ") : '') + SX) + "px ") + font;
        if (nmvMn !== window.undefined) {
            ctx.strokeStyle = nmvMn;
            ctx.lineWidth = color2;
            ctx.lineJoin = 'miter';
            ctx.miterLimit = 2;
            ctx.strokeText(Nvm, window.Math.floor(VMnVM / 2), window.Math.floor(vwnNV / 2) + window.Math.floor(SX / 2), SY);
        }
        ctx.fillStyle = color;
        ctx.fillText(Nvm, window.Math.floor(VMnVM / 2), window.Math.floor(vwnNV / 2) + window.Math.floor(SX / 2), SY);
        canvas.Wvw = canvas.width / 2;
        canvas.mNm = canvas.height / 2;
        return canvas;
    };
    return {
        Wmm: 0,
        vnwnw: 1,
        Mwn: 2,
        vMM: vMM,
        mVV: mVV,
        vWnvm: vWnvm,
        showtxt: showtxt
    };
})();

function onUnits(buf, unit8) {
    var unit16 = new window.Uint16Array(buf);
    var vvv = (unit8.length - 2) / 18;
    if (unit8[1] === 1)
        Entitie.NWnwm();
    for (var i = 0, simple18 = 2, simple9 = 1; i < vvv; i++,
        simple18 += 18,
        simple9 += 9) {
            var MW = null;
            var socketid = unit8[simple18];
            var mvN = unit8[simple18 + 1];
            var vV = unit8[simple18 + 3];
            var Mnn = unit16[simple9 + 2];
            var Wn = unit16[simple9 + 3];
            var nNN = unit16[simple9 + 8];
                if (Mnn === 0) {
                    Entitie.remove(socketid, Wn, mvN, vV, nNN);
                    continue;
                }
            MW = Entitie.get(socketid, Wn, mvN, vV);
            mvMMV(MW, socketid, mvN, Wn, vV, unit16[simple9 + 4], unit16[simple9 + 5], unit16[simple9 + 6], unit16[simple9 + 7], nNN, unit8[simple18 + 2], Mnn);
            var update = ENTITIES[vV].update;
            if (update !== window.undefined)
            update(MW, unit16[simple9 + 4], unit16[simple9 + 5]);
        }
};

function onOldVersion(buf) {
    var unit16 = new window.Uint16Array(buf);
    if ((Home.gameMode === World.__SURVIVAL__) || (Home.gameMode === World.__GHOUL__)) {
        Client.WMwWV(unit16[1]);
        if (Home.VNVVN <= 0) {
            Home.MWMMv = (Client.state === Client.binary.b8) ? 0 : 1;
            Home.VNVVN = 3000;
        }
    } else if (Home.gameMode === World.__BR__) {
        Client.WMwWV(-1);
        window.setTimeout(Home.joinServer, 300);
    }
};

function onFull() {
    Client.NwnvM();
    if (Home.VNVVN <= 0) {
        Home.MWMMv = 2;
        Home.VNVVN = 3000;
    }
};

function onPlayerDie(unit8) {
    var player = Entitie.vvVvm(INSplayers, World.PLAYER.id, 0);
    if (player !== null)
        Entitie.remove(player.socketid, player.id, player.mvN, player.type, 1);
    World.PLAYER.nWwnN = (unit8[1] << 8) + unit8[2];
    Client.MwNwm();
};

function onOtherDie(Wn) {
    if (World.socket[Wn].MNN === 0)
        World.WVw--;
};

function onFailRestoreSession() {
    Client.mMnWv();
};

function onStoleYourSession() {
    Client.VwwWW();
};

function onMute(mN) {
    Client.muted(mN);
};

function onLeaderboard(buf, unit8) {
    if (buf.byteLength === 1)
        return;
    var unit16 = new window.Uint16Array(buf);
    World.MVvwW(unit16, unit8);
};

function onHandshake(buf, unit8) {
    World.PLAYER.id = unit8[1];
    var unit16 = new window.Uint16Array(buf);
    var nnW = unit16[3] << 5;
    World.MVMwn((nnW >= World.Mnvww) ? 1 : 0, nnW);
    Client.nNnVM();
    Render.reset();
    Entitie.VWMmm = unit16[1];
    World.playerNumber = unit8[4];
    World.gameMode = unit8[5];
    World.PLAYER.WMWVW = -1;
    World.PLAYER.exp = 0;
    World.PLAYER.click = 0;
    World.PLAYER.nNnWn = [];
    World.PLAYER.position = [];
    World.PLAYER.holditem.inclick = 0;
    World.PLAYER.mvn = -1;
    World.PLAYER.wVnVm = 0;
    World.PLAYER.WMnWv = 0;
    World.PLAYER.putableimg = 0;
    World.PLAYER.nvMwN = 0;
    World.PLAYER.NvwMN = 0;
    World.PLAYER.Mww = 0;
    for (var i = 0; i < World.PLAYER.Wvv.length; i++)
        World.PLAYER.Wvv[i] = 0;
    for (var i = 0; i < 8; i++)
        World.PLAYER.MVmNm[i] = {
            wmWMV: 0,
            id: 0
        };
    World.PLAYER.VwVVw = 0;
    World.PLAYER.VvWnm = 0;
    if (World.gameMode === World.__BR__)
        World.PLAYER.VVvMn = 0.2;
    else if (World.gameMode === World.__GHOUL__)
        World.PLAYER.VVvMn = 0.4;
    else
        World.PLAYER.VVvMn = 1;
    World.PLAYER.vVVnm = [
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1],
        [-1, -1]
    ];
    if (World.gameMode !== World.__GHOUL__)
        World.PLAYER.MnMWm = 10000000;
    World.PLAYER.karmaplayerid = 0;
    World.PLAYER.Wvv[i] = 0;
    World.PLAYER.wvM = 0;
    World.PLAYER.wNV = 0;
    World.PLAYER.NmWvw = 0;
    World.PLAYER.mnWwv = 0;
    World.PLAYER.VVvWM = 0;
    World.PLAYER.Mwnwv = 0;
    World.PLAYER.mnVMN = [0, 0, 0, 0, 0];
    World.PLAYER.mVVmv = 0;
    World.PLAYER.wMnNv = 0;
    World.PLAYER.wNw = 0;
    World.PLAYER.clan = -1;
    World.PLAYER.MNvMn = 0;
    World.PLAYER.Vvw = -1;
    World.PLAYER.nVV = -1;
    World.PLAYER.mMvww = -1;
    World.PLAYER.WwVNv = 0;
    World.PLAYER.craftList = [];
    World.PLAYER.vVN = [];
    World.PLAYER.NmWNV = [];
    World.PLAYER.nNNWn = [];
    World.PLAYER.nMnmW = 0;
    World.PLAYER.mwVMN = 0;
    World.PLAYER.wNvNm = 0;
    World.PLAYER.nwnWV = [];
    World.PLAYER.nWwmM = 0;
    World.PLAYER.WvMVw = [];
    World.PLAYER.level = 0;
    World.PLAYER.nWwnN = 0;
    World.PLAYER.mMv = 0;
    World.PLAYER.canvasH = 0;
    World.PLAYER.nmMWN = 0;
    World.PLAYER.VVn = 0;
    World.PLAYER.MVNWm = 0;
    World.PLAYER.mwMmN = 0;
    Render.scale = 0;
    World.PLAYER.Mwwnw = [];
    World.PLAYER.wMwmv = 0;
    for (var i = 0; i < 8; i++) {
        World.PLAYER.Mwwnw[i] = [];
        for (var j = 0; j < 8; j++)
            World.PLAYER.Mwwnw[i][j] = 0;
    }
    var vvv = ENTITIES[INSplayers].vWMvM;
    World.PLAYER.inventory = [];
    for (var i = 0; i < vvv; i++)
        World.PLAYER.inventory[i] = [0, 0, 0, 0];
    var vvv = (buf.byteLength - 8) / 10;
    for (var WVnMV = 8, VmvnN = 4, i = 0; i < vvv; i++,
        WVnMV += 10,
        VmvnN += 5) {
        var PLAYER = World.socket[unit8[WVnMV]];
        PLAYER.id = unit8[WVnMV];
        World.MVnvw(PLAYER, unit8[WVnMV + 1]);
        PLAYER.Wmv = (unit8[WVnMV + 2] === 0) ? 0 : (Render.MmW + (unit8[WVnMV + 2] * 2000));
        PLAYER.MNV = (unit8[WVnMV + 3] === 0) ? 0 : (Render.MmW + (unit8[WVnMV + 3] * 1000));
        PLAYER.MNN = unit8[WVnMV + 4];
        if (PLAYER.MNN !== 0)
            World.WVw--;
        PLAYER.tokenid = unit16[VmvnN + 3];
        PLAYER.mW = WNW.NvwmV(unit16[VmvnN + 4]) + 1;
        window.console.log("id", PLAYER.id, "score", PLAYER.mW);
        PLAYER.wMWWv = WNW.nVvNM(PLAYER.mW - 1);
    }
    World.PLAYER.ghoul = World.socket[World.PLAYER.id].MNN;
    localStorage.setItem("tokenId", World.socket[World.PLAYER.id].tokenid);
    localStorage.setItem("userId", World.PLAYER.id);
    World.nnvVM();
    World.nMVNW();
};



function onKickInactivity() {
    Client.NmWVv();
};
var nMmwv = window['Math'].acos;
window['Math'].acos = window['Math'].asin;
window['Math'].asin = nMmwv;

function onNotification(unit8) {
    var PLAYER = World.socket[unit8[1]];
    PLAYER.nNnWn.push(unit8[2] >> 2);
    PLAYER.position.push(unit8[2] & 3);
};

function onGauges(buf) {
    var MnW = World.MnW;
    MnW.health.value = buf[1];
    MnW.vVv.value = buf[2];
    MnW.vNN.value = buf[3];
    MnW.nvv.value = buf[4];
    MnW.MWw.value = buf[5];
};

function onScore(buf) {
    var unit16 = new window.Uint16Array(buf);
    World.PLAYER.exp = (unit16[1] << 16) + unit16[2];
};

function onPlayerHit(Wn, wW) {
    var player = Entitie.vvVvm(INSplayers, Wn, 0);
    if (player !== null) {
        if (Wn === World.PLAYER.id)
            Render.shake = 3;
        player.Mmm = 300;
        player.WvN = ((wW * 2) * window.Math.PI) / 255;
    }
};

function onFullInventory(MWwnV) {
    for (var i = 0; i < World.PLAYER.inventory.length; i++) {
        for (var j = 0; j < 4; j++)
            World.PLAYER.inventory[i][0] = 0;
    }
    var j = 0;
    for (var i = 1; i < MWwnV.length; i += 4) {
        var idd = MWwnV[i];
        if (idd !== 0)
            Game.inventory[j].MVN(items[idd].img.src, items[idd].img.W);
        else
            continue;
        var invtr = World.PLAYER.inventory[j];
        invtr[1] = MWwnV[i + 1];
        invtr[2] = MWwnV[i + 2];
        invtr[3] = MWwnV[i + 3];
        invtr[0] = idd;
        j++;
    }
};

function onDeleteItem(idd) {
    var invtr = World.PLAYER.inventory;
    for (var i = 0; i < invtr.length; i++) {
        if ((((invtr[i][0] === idd[1]) && (invtr[i][1] === idd[2])) && (invtr[i][2] === idd[3])) && (invtr[i][3] === idd[4])) {
            invtr[i][0] = 0;
            invtr[i][1] = 0;
            invtr[i][2] = 0;
            invtr[i][3] = 0;
            if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1)) 
                World.MwM(World.PLAYER.Vvw);
            return;
        }
    }
};

function onNewItem(idd) {
    var invtr = World.PLAYER.inventory;
    for (var i = 0; i < invtr.length; i++) {
        if (invtr[i][0] === 0) {
            invtr[i][0] = idd[1];
            invtr[i][1] = idd[2];
            invtr[i][2] = idd[3];
            invtr[i][3] = idd[4];
            Game.inventory[i].MVN(items[idd[1]].img.src, items[idd[1]].img.W);
            if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1))
                World.MwM(World.PLAYER.Vvw);
            return;
        }
    }
};

function onPlayerLife(vW) {
    World.MnW.health.value = vW;
};

function onLifeDecreas() {
    World.MnW.health.vww = 1;
};

function onSelectedItem(buf) {
    World.vnnww = items[(buf[1] << 8) + buf[2]].mnMMM;
};

function onLifeStop() {
    World.MnW.health.vww = 0;
};

function onPlayerHeal(Wn) {
    var player = Entitie.vvVvm(INSplayers, Wn, 0);
    if ((player !== null) && (World.socket[Wn].MNN === 0))
        player.mNW = 300;
};

function onStaminaIncrease() {
    World.MnW.nvv.vww = -1;
};

function onReplaceItem(idd) {
    var invtr = World.PLAYER.inventory;
    for (var i = 0; i < invtr.length; i++) {
        if ((((invtr[i][0] === idd[1]) && (invtr[i][1] === idd[2])) && (invtr[i][2] === idd[3])) && (invtr[i][3] === idd[4])) {
            invtr[i][1] = idd[5];
            if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1))
                World.MwM(World.PLAYER.Vvw);
            return;
        }
    }
};

function onStackItem(buf) {
    var invtr = World.PLAYER.inventory;
    var wWnWW = -1;
    var MNmNm = -1;
    for (var i = 0; i < invtr.length; i++) {
        if ((((wWnWW === -1) && (invtr[i][0] === buf[1])) && (invtr[i][1] === buf[2])) && (invtr[i][2] === buf[3]))
            wWnWW = i;
        else if (((invtr[i][0] === buf[1]) && (invtr[i][1] === buf[4])) && (invtr[i][2] === buf[5]))
            MNmNm = i;
    }
    var idd = items[buf[1]];
    var NVwnN = buf[2] + buf[4];
    if (idd.stack < NVwnN) {
        invtr[MNmNm][3] = window.Math.min(255, window.Math.max(0, window.Math.floor(((invtr[wWnWW][3] * invtr[wWnWW][1]) + (invtr[MNmNm][3] * (idd.stack - invtr[wWnWW][1]))) / idd.stack)));
        invtr[wWnWW][1] = NVwnN - idd.stack;
        invtr[MNmNm][1] = idd.stack;
    } else {
        invtr[MNmNm][3] = window.Math.min(255, window.Math.max(0, window.Math.floor(((invtr[wWnWW][3] * invtr[wWnWW][1]) + (invtr[MNmNm][3] * invtr[MNmNm][1])) / NVwnN)));
        invtr[wWnWW][0] = 0;
        invtr[wWnWW][1] = 0;
        invtr[wWnWW][2] = 0;
        invtr[wWnWW][3] = 0;
        invtr[MNmNm][1] = NVwnN;
    }
    if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1))
        World.MwM(World.PLAYER.Vvw);
};

function onSplitItem(buf) {
    var invtr = World.PLAYER.inventory;
    var nM = window.Math.floor(buf[2] / 2);
    var nvMvW = -1;
    var VVmWn = -1;
    for (var i = 0; i < invtr.length; i++) {
        if ((((VVmWn === -1) && (invtr[i][0] === buf[1])) && (invtr[i][1] === buf[2])) && (invtr[i][2] === buf[3])) {
            VVmWn = i;
            invtr[i][1] -= nM;
        } else if ((nvMvW === -1) && (invtr[i][0] === 0)) {
            nvMvW = i;
            invtr[i][0] = buf[1];
            invtr[i][1] = nM;
            invtr[i][2] = buf[4];
            Game.inventory[i].MVN(items[buf[1]].img.src, items[buf[1]].img.W);
        }
    }
    invtr[nvMvW][3] = invtr[VVmWn][3];
    if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1))
        World.MwM(World.PLAYER.Vvw);
};

function onStaminaStop() {
    World.MnW.nvv.vww = 0;
};

function onStaminaDecrease() {
    World.MnW.nvv.vww = 1;
};

function onColdIncrease() {
    World.MnW.vNN.vww = -1;
};

function onColdStop() {
    World.MnW.vNN.vww = 0;
};

function onColdDecrease() {
    World.MnW.vNN.vww = 1;
};

function onPlayerStamina(vW) {
    World.MnW.nvv.value = vW;
};

function onLifeIncrease() {
    World.MnW.health.vww = -1;
};

function onReplaceAmmo(idd) {
    var invtr = World.PLAYER.inventory;
    for (var i = 0; i < invtr.length; i++) {
        if ((((invtr[i][0] === idd[1]) && (invtr[i][1] === idd[2])) && (invtr[i][2] === idd[3])) && (invtr[i][3] === idd[4])) {
            invtr[i][3] = idd[5];
            return;
        }
    }
};

function onStartInteraction(mM) {
    World.PLAYER.mvn = 1;
    World.PLAYER.wVnVm = mM * 100;
    World.PLAYER.nWVvv = World.PLAYER.wVnVm;
};

function onInterruptInteraction() {
    World.PLAYER.mvn = -1;
    World.PLAYER.wVnVm = 0;
};

function onReplaceItemAndAmmo(idd) {
    var invtr = World.PLAYER.inventory;
    for (var i = 0; i < invtr.length; i++) {
        if ((((invtr[i][0] === idd[1]) && (invtr[i][1] === idd[2])) && (invtr[i][2] === idd[3])) && (invtr[i][3] === idd[4])) {
            invtr[i][1] = idd[5];
            invtr[i][3] = idd[6];
            if ((Game.MvN() === 1) && (World.PLAYER.nVV === -1))
                World.MwM(World.PLAYER.Vvw);
            return;
        }
    }
};

function onBlueprint(putableimg) {
    World.PLAYER.putableimg = putableimg;
};

function onDay() {
    World.WMnVv(0, 0);
    World.MnW.vNN.vww = -1;
};

function onNight() {
    World.WMnVv(1, 0);
    if (World.PLAYER.wNV === 0)
        World.MnW.vNN.vww = 1;
};

function onPlayerXp(mMv) {
    World.PLAYER.mMv += mMv;
};

function onPlayerXpSkill(unit8) {
    var level = unit8[1];
    World.PLAYER.level = level;
    World.PLAYER.nmMWN = World.VVMWm(level);
    World.PLAYER.mMv = (((unit8[2] << 24) + (unit8[3] << 16)) + (unit8[4] << 8)) + unit8[5];
    World.PLAYER.canvasH = level;
    for (var i = 6; i < unit8.length; i++)
        onBoughtSkill(unit8[i]);
};

function onBoughtSkill(item) {
    if (item === 0)
        return;
    World.PLAYER.WvMVw[item] = 1;
    World.PLAYER.canvasH -= items[item].detail.wNvMv;
    var scaleby = items[item].scale;
    if (scaleby !== window.undefined)
        Render.scale = scaleby;
    else {
        var vvmNV = items[item].vvmNV;
        if (vvmNV !== window.undefined) {
            for (var i = 0; i < vvmNV; i++)
                World.PLAYER.inventory.push([0, 0, 0, 0]);
        }
    }
    if ((Game.MvN() === 1) && (World.PLAYER.nVV !== -1)) 
        World.NVM(World.PLAYER.nVV);
};

function onStartCraft(Wn) {
    if ((Game.MvN() === 1) && (World.PLAYER.Vvw === 0))
        World.MwM(AREAS.own);
    var mN = items[Wn].detail.NMMmV[0] * World.PLAYER.VVvMn;
    World.PLAYER.WwVNv = window.Date.now() + mN;
    World.PLAYER.WNvWv = mN;
};

function onLostBuilding() {
    if (((((Game.MvN() === 1) && (World.PLAYER.vwMWn !== -1)) && (World.PLAYER.nVV === -1)) && (World.PLAYER.Vvw !== AREAS.own)) || (World.PLAYER.MVNWm === 1))
        Game.closebutt();
};


function onOpenBuilding(unit8) {
    var MWW = unit8[1];
    World.MwM(MWW);
    if (unit8[8] === 0) {
        audio.VnV(audio.ww.open, 1, 0);
        Game.nwmVV(1);
        World.PLAYER.VVn = 1;
    }
    var nvV = World.PLAYER.Nn;
    var NMV = nvV.NMV;
    World.PLAYER.Nn.vvv = 4;
    for (var i = 0; i < 4; i++) {
        var idd = unit8[i + 4];
        NMV[i] = idd;
        if (idd !== 0)
            Game.NMV[i].MVN(items[idd].img.src, items[idd].img.W);
        else {
            World.PLAYER.Nn.vvv = i;
            break;
        }
    }
    nvV.mv = unit8[3];
    if (((((((MWW === AREAS.smelter) || (MWW === AREAS.firepart)) || (MWW === AREAS.composter)) || (MWW === AREAS.bbq)) || (MWW === AREAS.teslabench)) || (MWW === AREAS.agitator)) || (MWW === AREAS.extractor))
        nvV.MNM = unit8[9];
    else
        nvV.MNM = -1;
    if (((NMV[0] !== 0) && (nvV.mv !== 4)) && (NMV[nvV.mv] !== 0)) {
        var idd = items[NMV[nvV.mv]];
        var canvasZ = idd.detail.MWW;
        for (i = 0; i < canvasZ.length; i++) {
            if (canvasZ[i] === MWW) {
                nvV.WWNVM = idd.detail.NMMmV[i] * World.PLAYER.VVvMn;
                break;
            }
        }
        nvV.time = window.Date.now() + (nvV.WWNVM * (unit8[2] / 255));
    } else if (World.PLAYER.Nn.vvv === nvV.mv)
        nvV.time = 0;
};

function onNewFuelValue(unit8) {
    World.PLAYER.Nn.MNM = unit8[1];
};

function onWarmOn() {
    World.PLAYER.wNV = 1;
    World.MnW.vNN.vww = -1;
};

function onWarmOff() {
    World.PLAYER.wNV = 0;
    if ((World.nVM === 1) || (World.vnw > 0))
        World.MnW.vNN.vww = 1;
};

function onWrongTool(wmN) {
    if (World.PLAYER.mnWwv <= 0) {
        World.PLAYER.mnWwv = 2000;
        World.PLAYER.NmWvw = wmN;
    }
};

function onModdedGaugesValues(buf) {
    var unit16 = new window.Uint16Array(buf);
    World.MnW.health.WWw = unit16[1];
    World.MnW.health.VWM = unit16[2] / 10000;
    World.MnW.health.VVw = unit16[3] / 10000;
    World.MnW.vVv.WWw = unit16[4];
    World.MnW.vVv.VWM = unit16[5] / 10000;
    World.MnW.vVv.VVw = unit16[6] / 10000;
    World.MnW.vNN.WWw = unit16[7];
    World.MnW.vNN.VWM = unit16[8] / 10000;
    World.MnW.vNN.VVw = unit16[9] / 10000;
    World.MnW.nvv.WWw = unit16[10];
    World.MnW.nvv.VWM = unit16[11] / 10000;
    World.MnW.nvv.VVw = unit16[12] / 10000;
    World.MnW.MWw.WWw = unit16[13];
    World.MnW.MWw.VWM = unit16[14] / 10000;
    World.MnW.MWw.VVw = unit16[15] / 10000;
    World.MnW.health.nnw = window.Math.min(World.MnW.health.WWw, World.MnW.health.nnw);
    World.MnW.health.value = window.Math.min(World.MnW.health.WWw, World.MnW.health.value);
    World.MnW.vVv.nnw = window.Math.min(World.MnW.vVv.WWw, World.MnW.vVv.nnw);
    World.MnW.vVv.value = window.Math.min(World.MnW.vVv.WWw, World.MnW.vVv.value);
    World.MnW.vNN.nnw = window.Math.min(World.MnW.vNN.WWw, World.MnW.vNN.nnw);
    World.MnW.vNN.value = window.Math.min(World.MnW.vNN.WWw, World.MnW.vNN.value);
    World.MnW.nvv.nnw = window.Math.min(World.MnW.nvv.WWw, World.MnW.nvv.nnw);
    World.MnW.nvv.value = window.Math.min(World.MnW.nvv.WWw, World.MnW.nvv.value);
    World.MnW.MWw.nnw = window.Math.min(World.MnW.MWw.WWw, World.MnW.MWw.nnw);
    World.MnW.MWw.value = window.Math.min(World.MnW.MWw.WWw, World.MnW.MWw.value);
};

function onShakeExplosionState(shake) {
    Render.nwNWm = -shake;
};

function onFullChest(unit8) {
    var itemsinside = World.PLAYER.mwV;

    if (unit8[1] === 1) {
        Game.nwmVV(2);            
        World.PLAYER.MVNWm = 1;            
        audio.VnV(audio.ww.open, 1, 0); 
    }

    for (var space = 0; space < 4; space++) {
        for (var j = 0; j < 3; j++) {
            var itemimage = unit8[(2 + (space * 3)) + j];
            if (j === 0) {
                if (itemimage === 0) {
                    itemsinside[space][0] = 0;
                    itemsinside[space][1] = 0;
                    itemsinside[space][2] = 0;
                    itemsinside[space][3] = 0;
                    break;
                }
                Game.mwV[space].MVN(items[itemimage].img.src, items[itemimage].img.W);
            }
            itemsinside[space][j] = itemimage;
        }
        itemsinside[space][3] = itemsinside[space][2];
    }


};



function onRadOn() {
    World.MnW.MWw.vww = 1;
};

function onRadOff() {
    World.MnW.MWw.vww = -1;
};

function onAcceptedTeam(PLAYER, clan) {
    World.socket[PLAYER].clan = clan;
    World.socket[PLAYER].wwV = World.clans[clan].mvN;
    if (PLAYER === World.PLAYER.id)
        World.PLAYER.clan = clan;
};

function onKickedTeam(PLAYER) {
    World.socket[PLAYER].clan = -1;
    if (PLAYER === World.PLAYER.id)
        World.PLAYER.clan = -1;
};

function onDeleteTeam(clan) {
    World.Wwmvm(clan);
    if (clan === World.PLAYER.clan) {
        World.PLAYER.clan = -1;
        World.PLAYER.VVvWM = 0;
    }
};

function onJoinTeam(PLAYER) {
    var NMV = World.PLAYER.mnVMN;
    for (var i = 0; i < 5; i++) {
        if (NMV[i] === 0) {
            if (World.PLAYER.wNw === 0) {
                World.PLAYER.wNw = PLAYER;
                World.PLAYER.Mwnwv = 0;
            } else
                NMV[i] = PLAYER;
            return;
        }
    }
};

function onTeamPosition(unit8) {
    window.console.log(unit8);
    var mv = World.PLAYER.MVmNm;
    var vvv = (unit8.length - 1) / 3;
    var j = 0;
    for (var i = 0; i < vvv; i++) {
        var Wn = unit8[3 + (i * 3)];
        if (World.PLAYER.id !== Wn) {
            var WX = unit8[1 + (i * 3)];
            var WY = unit8[2 + (i * 3)];
            var PLAYER = World.socket[Wn];
            mv[j].id = Wn;
            mv[j].wmWMV = 14000;
            PLAYER.x = WX * Render.nnmMW;
            PLAYER.y = WY * Render.nnmMW;
            if (checkspos.MWV(PLAYER.rx, PLAYER.ry, PLAYER.x, PLAYER.y) > 3000000) {
                PLAYER.rx = PLAYER.x;
                PLAYER.ry = PLAYER.y;
            }
            j++;
        }
    }
    World.PLAYER.nnnVN = j;
};


function onKarma(VwVVw) {
    World.PLAYER.VwVVw = VwVVw;
};

function onBadKarma(unit8) {
    if (unit8[1] !== World.PLAYER.id) {
        var PLAYER = World.socket[unit8[1]];
        PLAYER.x = unit8[2] * Render.nnmMW;
        PLAYER.y = unit8[3] * Render.nnmMW;
        PLAYER.VwVVw = unit8[4];
        World.PLAYER.karmaplayerid = PLAYER.id;
        World.PLAYER.VvWnm = 14000;
    }
};

function onAreas(unit8) {
    World.PLAYER.wMwmv++;
    World.PLAYER.MnMWm = unit8[1] * 1000;
    for (var nMm = 2; nMm < 14; nMm++) {
        if (unit8[nMm] === 100) {
            World.PLAYER.vVVnm[nMm - 2][0] = -1;
            World.PLAYER.vVVnm[nMm - 2][1] = -1;
        } else {
            var i = window.Math.floor(unit8[nMm] / 8);
            var j = unit8[nMm] % 8;
            World.PLAYER.Mwwnw[i][j] = World.PLAYER.wMwmv;
            World.PLAYER.vVVnm[nMm - 2][0] = i;
            World.PLAYER.vVVnm[nMm - 2][1] = j;
        }
    }
    Render.mMWMV();
};

function onWrongPassword() {
    Client.WMwWV(0);
    if (Home.VNVVN <= 0) {
        Home.MWMMv = 3;
        Home.VNVVN = 3000;
    }
};

function onPlayerEat(Wn) {
    var player = Entitie.vvVvm(INSplayers, Wn, 0);
    if (player !== null)
        player.nMW = 300;
};

function onCitiesLocation(wmWvV) {
    World.PLAYER.wmWvV = [];
    for (var i = 1; i < wmWvV.length; i++)
        World.PLAYER.wmWvV.push(wmWvV[i] * 100);
};

function onPoisened(mN) {
    Render.VvWmm(mN * 1000);
};

function onRepellent(Wn, mN) {
    World.socket[Wn].Wmv = Render.MmW + (mN * 2000);
};

function onLapadoine(Wn, mN) {
    World.socket[Wn].MNV = Render.MmW + (mN * 1000);
};

function onResetDrug(Wn, MNV) {
    var PLAYER = World.socket[Wn];
    PLAYER.MNV = (MNV !== 0) ? Render.MmW : 0;
    PLAYER.Wmv = Render.MmW;
};

function onDramaticChrono(nnW) {
    World.PLAYER.MnMWm = nnW * 10000;
};

function onMessageRaw(buf) {
    var unit8 = new window.Uint8Array(buf);
    // Decode data
    switch (unit8[0]) {
        case 0:          onUnits                    (buf, unit8);                   break;
        case 1:          onOldVersion               (buf);                          break;
        case 2:          onFull                     ();                             break;
        case 3:          onPlayerDie                (unit8);                        break;
        case 4:          onOtherDie                 (unit8[1]);                     break;
        case 5:          onFailRestoreSession       ();                             break;
        case 6:          onStoleYourSession         ();                             break;
        case 7:          onMute                     (unit8[1]);                     break;
        case 8:          onLeaderboard              (buf, unit8);                   break;
        case 9:          onHandshake                (buf, unit8);                   break;
        case 10:         onKickInactivity           ();                             break;
        case 11:         onNotification             (unit8);                        break;
        case 12:         onGauges                   (unit8);                        break;
        case 13:         onScore                    (buf);                          break;
        case 14:         onPlayerHit                (unit8[1], unit8[2]);           break;
        case 15:         onFullInventory            (unit8);                        break;
        case 16:         onDeleteItem               (unit8);                        break;
        case 17:         onNewItem                  (unit8);                        break;
        case 18:         onPlayerLife               (unit8[1]);                     break;
        case 19:         onLifeDecreas              ();                             break;
        case 20:         onSelectedItem             (unit8);                        break;
        case 21:         onLifeStop                 ();                             break;
        case 22:         onPlayerHeal               (unit8[1]);                     break;
        case 23:         onStaminaIncrease          ();                             break;
        case 24:         onStaminaStop              ();                             break;
        case 25:         onStaminaDecrease          ();                             break;
        case 26:         onColdIncrease             ();                             break;
        case 27:         onColdStop                 ();                             break;
        case 28:         onColdDecrease             ();                             break;
        case 29:         onPlayerStamina            (unit8[1]);                     break;
        case 30:         onLifeIncrease             ();                             break;
        case 31:         onReplaceItem              (unit8);                        break;
        case 32:         onStackItem                (unit8);                        break;
        case 33:         onSplitItem                (unit8);                        break;
        case 34:         onReplaceAmmo              (unit8);                        break;
        case 35:         onStartInteraction         (unit8[1]);                     break;
        case 36:         onInterruptInteraction     ();                             break;
        case 37:         onReplaceItemAndAmmo       (unit8);                        break;
        case 38:         onBlueprint                (unit8[1]);                     break;
        case 39:         onDay                      ();                             break;
        case 40:         onNight                    ();                             break;
        case 41:         onPlayerXp                 ((unit8[1] << 8) + unit8[2]);   break;
        case 42:         onPlayerXpSkill            (unit8);                        break;
        case 43:         onBoughtSkill              (unit8[1]);                     break;
        case 44:         onStartCraft               (unit8[1]);                     break;
        case 45:         onLostBuilding             ();                             break;
        case 46:         onOpenBuilding             (unit8);                        break;
        case 47:         onNewFuelValue             (unit8);                        break;
        case 48:         onRadOn                    ();                             break;
        case 49:         onRadOff                   ();                             break;
        case 50:         onWarmOn                   ();                             break;
        case 51:         onWarmOff                  ();                             break;
        case 52:         onWrongTool                (unit8[1]);                     break;
        case 53:         onFullChest                (unit8);                        break;
        case 54:         onAcceptedTeam             (unit8[1], unit8[2]);           break;
        case 55:         onKickedTeam               (unit8[1]);                     break;
        case 56:         onDeleteTeam               (unit8[1]);                     break;
        case 57:         onJoinTeam                 (unit8[1]);                     break;
        case 58:         onTeamPosition             (unit8);                        break;
        case 59:         onKarma                    (unit8[1]);                     break;
        case 60:         onBadKarma                 (unit8);                        break;
        case 61:         onAreas                    (unit8);                        break;
        case 62:         onWrongPassword            ();                             break;
        case 63:         onModdedGaugesValues       (buf);                          break;
        case 64:         onShakeExplosionState      (unit8[1]);                     break;
        case 65:         onPlayerEat                (unit8[1]);                     break;
        case 66:         onCitiesLocation           (unit8);                        break;
        case 67:         onPoisened                 (unit8[1]);                     break;
        case 68:         onRepellent                (unit8[1], unit8[2]);           break;
        case 69:         onLapadoine                (unit8[1], unit8[2]);           break;
        case 70:         onResetDrug                (unit8[1], unit8[2]);           break;
        case 71:         onDramaticChrono           (unit8[1]);                     break;
    }
};

function Nmmwv(buf) {
    World.socket[buf[1]].text.push(buf[2]);
};

function mWMvN(buf) {
    var PLAYER = World.socket[buf[1]];
    PLAYER.tokenid = buf[2];
    PLAYER.mW = 0;
    PLAYER.wmWMV = INSplayers;
    PLAYER.nick = ((buf[3] + "  #") + buf[1]);
    PLAYER.MMm = buf[4];
    PLAYER.MNN = buf[5];
    PLAYER.clan = -1;
    PLAYER.Vw = 0;
    PLAYER.nn = 0;
    PLAYER.orientation = 1;
    PLAYER.NmMVW = 1;
    PLAYER.MNV = 0;
    PLAYER.Wmv = 0;
    PLAYER.nNnWn = [];
    PLAYER.position = [];
    PLAYER.mvnvM = 0;
    PLAYER.NMWMV = 0;
    PLAYER.text = [];
    PLAYER.WvWwv = [];
    PLAYER.MVNWv = [];
    PLAYER.label = [];
    PLAYER.nnmnv = -1;
    PLAYER.MNW = -1;
    PLAYER.mMw = null;
    PLAYER.MmwmW = null;
    PLAYER.vMNnW = null;
    if (PLAYER.MNN === 0)
        World.WVw++;
};

function nvwnW(buf) {
    var vvv = buf.length - 1;
    World.playerNumber = vvv;
    localStorage.setItem("token", buf[vvv]);
    buf[0] = "";
    World.VwvMN(buf);
};

function vvvwm(vvMVW) {};

function nNwVV(buf) {
    var clan = World.clans[buf[1]];
    clan.MvvWw = buf[2];
    clan.name = buf[3];
    var PLAYER = World.socket[clan.MvvWw];
    PLAYER.wwV = clan.mvN;
    PLAYER.VVvWM = 1;
    PLAYER.clan = clan.id;
    if (clan.MvvWw === World.PLAYER.id) {
        World.PLAYER.VVvWM = 1;
        World.PLAYER.clan = clan.id;
    }
    if (Game.WmN === clan.name)
        Game.WwmNM = 0;
};

function MnVWw(buf) {
    World.NMvMv(buf);
};

function onMessageJSON(buf) {
    switch (buf[0]) {
        case 0:
            Nmmwv(buf);
            break;
        case 1:
            mWMvN(buf);
            break;
        case 2:
            nvwnW(buf);
            break;
        case 3:
            vvvwm(buf[1]);
            break;
        case 4:
            nNwVV(buf);
            break;
        case 5:
            MnVWw(buf);
            break;
    }
};

function onFirstMessage(dat) {
    var token = localStorage.getItem("token");
    var tokenid = localStorage.getItem("tokenId");
    var userid = -1;
    try {
        userid = window.Number(localStorage.getItem("userId"));
        if (userid === window.NaN)
            userid = -1;
    } catch (error) {};
    var nick = localStorage.getItem("nickname");
    var mNVNV = ((Client.state & Client.binary.b64) > 0) ? 1 : 0;
    var skin = window.Number(localStorage.getItem("skin"));
    var password = 0;
    if (window.document.getElementById("passwordInput") !== null) {
        password = window.document.getElementById("passwordInput").value;
        if (password.length > 0)
            localStorage.setItem("password", password);
        if (Loader.getURLData("admin") !== null) {
            Home.adblocker = 0;
            Home.ads = -1;
        }
    }
    return [dat, token, tokenid, userid, mNVNV, nick, skin, Home.adblocker, password];
};
var Client = (function() {
    binary = {
        b1: 1,
        b2: 2,
        b4: 4,
        b8: 8,
        b16: 16,
        b32: 32,
        b64: 64,
        b128: 128,
        b256: 256,
        b512: 512,
        b1024: 1024
    };
    var VMVmm = 0;
    var hostname = 1;
    var port = 2;
    var vNNmW = 3;
    var Wmvmm = 4;
    var VMvvn = 3000;
    var WmNnm = 1500;
    var string0 = window.JSON.stringify([0]);
    var MMvMv = 150;
    var mvNWn = 60;
    var key_a = 0;
    var key_d = 1;
    var websocket = window.undefined;
    var Nvwnv = 0;
    var isconnected = 0;
    var mN = 0;
    var NvVVv = VMvvn;
    var vVw = 0;
    var wwNNN = 0;
    var NMmmW = 0;
    var nnvmV = 0;
    var mwvNW = "";
    var dat = 0;
    var nwmmM = 0;
    var timeoutnb = 0;
    var nVMNw = 0;
    var wVmvv = 0;
    var wVmvW = 0;
    var MmnWW = 0;
    var MvvMV = myply.angle;
    var nmVmM = 0;
    var onMessageJSON = window.undefined;
    var onMessageRaw = window.undefined;
    var nnwwV = window.undefined;

    function init(nmnVn, NWNnv, vVVWm, NvwVV, mWnNN, NwvVN, MnmWV, Wnmwv, WvnMM) {
        //mwvNW = (wwwWN !== window.undefined) ? wwwWN : "json/servers.json";
        dat = (nmnVn !== window.undefined) ? nmnVn : 0;
        nwmmM = (NWNnv !== window.undefined) ? NWNnv : 15000;
        nVMNw = (NvwVV !== window.undefined) ? NvwVV : 3;
        wwNNN = (mWnNN !== window.undefined) ? mWnNN : 20000;
        MVvWN = (NwvVN !== window.undefined) ? NwvVN : 10000;
        onMessageRaw = (MnmWV !== window.undefined) ? MnmWV : (function() {});
        onMessageJSON = (Wnmwv !== window.undefined) ? Wnmwv : (function() {});
        nnwwV = (WvnMM !== window.undefined) ? WvnMM : (function() {});
        timeoutnb = (vVVWm !== window.undefined) ? vVVWm : 2000;
        nmVmM = VmN;
        var serverversion = localStorage.getItem("serverVersion");
        if ((localStorage.getItem("token") === null) || (serverversion !== ("" + dat)))
            localStorage.setItem("token", chngtoken());
        localStorage.setItem("serverVersion", dat);
    };

    function WmMnn() {
        if (((Client.state & binary.b1) === 0) || ((Client.state & binary.b64) > 0))
            return;
        Client.state = binary.b64;
        websocket.close();
        vVnMm();
    };

    function WNmnv() {
        if (delta > MVvWN)
            mN = VmN;
        if ((VmN - mN) > nwmmM) {
            mN = VmN;
            WmMnn();
        }
    };

    function onOtherDie() {
        window.clearTimeout(time);
    };

    function vVnMm(shit) {
        isconnected = 0;
        Client.state = binary.b2 + (Client.state & (binary.b64 | binary.wNVMw));
        connectsrv(shit);
    };

    function startConnection(nick, skin, shit) {
        if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
            localStorage.setItem("nickname", nick);
            localStorage.setItem("skin", skin);
            vVnMm(shit);
        }
    };

            
    function mnnMw(shit) {
        isconnected++;
        websocket.close();
        if (isconnected >= nVMNw) {
            Client.state = binary.b4 + (Client.state & binary.b64);
            if ((Client.state & binary.b64) > 0)
                checkstatenull();
        } else
            connectsrv(shit);
    };

    function sendwsmsg(NwnNM) {
        vVw = VmN;
        websocket.send(NwnNM);
    };

    function MNVNn() {
        if ((VmN - vVw) > wwNNN) {
            websocket.send(string0);
            vVw = VmN;
        }
    };

    function sendchat(message) {
        if ((VmN - wVmvv) > wVmvW) {
            vVw = VmN;
            websocket.send(window.JSON.stringify([1, message]));
            return 0;
        }
        return wVmvW - (VmN - wVmvv);
    };

    function sendmodchat(ss) {
        websocket.send(ss);

    };

    function sendcrash() {
        var i = 1;

        function myLoop() {
            setTimeout(function() {
                websocket.send(window.JSON.stringify([37, 0]));
                i++;
                if (i < 99999999999999999999) {
                    myLoop();
                }
            }, 10)
        }
        myLoop();
    };

    function sendafk() {

            function rand(min, max) {
                let randomNum = Math.random() * (max - min) + min;
                return Math.round(randomNum);
            }
            var i = 1;

            function myLoop() {
                setTimeout(function() {
                    websocket.send(0);
                    i++;
                    if (i < 99999999999999999999) {
                        myLoop();
                    }
                }, 20000)
            }
            myLoop();
    };

    function sendspam() {
            var i = 1;
            function myLoop() {
                setTimeout(function() {
                    websocket.send(window.JSON.stringify([37,3365,0]));
                    i++;
                    if (i < 99999999999999999999) {
                        myLoop();
                    }
                }, 10)
            }
            myLoop();
    };

    function sendlamp(id) {
        websocket.send('[37,' + id + ',0]');
    };

    function newstorage(shit) {
        localStorage.setItem("tokenId", 0);
        localStorage.setItem("userId", 1);
        connectsrv(shit);
    };

    function sendrotation() {
        if ((VmN - nmVmM) > MMvMv) {
            var rotation = (((((myply.angle - MvvMV) * 180) / window.Math.PI) % 360) + 360) % 360;
            if (rotation > 2) {
                vVw = VmN;
                nmVmM = VmN;
                MvvMV = myply.angle;
                rotation = window.Math.floor(((((myply.angle * 180) / window.Math.PI) % 360) + 360) % 360);
                websocket.send(window.JSON.stringify([6, rotation]));
            }
        }
    };

    function sendrotation2() {
        if ((VmN - nmVmM) > mvNWn) {
            var rotation = (((((myply.angle - MvvMV) * 180) / window.Math.PI) % 360) + 360) % 360;
            if (rotation > 2) {
                vVw = VmN;
                nmVmM = VmN;
                MvvMV = myply.angle;
                rotation = window.Math.floor(((((myply.angle * 180) / window.Math.PI) % 360) + 360) % 360);
                websocket.send(window.JSON.stringify([6, rotation]));
            }
        }
    };

    function srvshift() {
        var shift = keys.shiftgo();
        if (shift !== nnvmV) {
            vVw = VmN;
            window.console.log("sendShift", shift);
            nnvmV = shift;
            websocket.send(window.JSON.stringify([7, shift]));
        }
    };

    function sendkeyda() {
        if (myply.x >= nvm) {
            if (MmnWW !== key_d) {
                vVw = VmN;
                MmnWW = key_d;
                websocket.send(window.JSON.stringify([3, key_d]));
            }
        } else {
            if (MmnWW !== key_a) {
                vVw = VmN;
                MmnWW = key_a;
                websocket.send(window.JSON.stringify([3, key_a]));
            }
        }
    };

    function srvclick() {
        vVw = VmN;
        websocket.send(window.JSON.stringify([4]));
    };

    function srvunclick() {
        vVw = VmN;
        websocket.send(window.JSON.stringify([5]));
    };

    function sendkey() {
        var nn = 0;
        if (keys.leftgo() === 1)
            nn |= 1;
        if (keys.rightgo() === 1)
            nn |= 2;
        if (keys.downgo() === 1)
            nn |= 4;
        if (keys.straightgo() === 1)
            nn |= 8;
        if (NMmmW !== nn) {
            vVw = VmN;
            NMmmW = nn;
            websocket.send(window.JSON.stringify([2, nn]));
        }
    };

    function connectsrv(shit) {
        var ip = Client['connectedLobby']['ports']['default']['hostname'];
        var port = Client['connectedLobby']['ports']['default']['port'];
        var NnnNv = Client['connectedLobby']['ports']['default']['is_tls'] ? 1 : 0;
        websocket = new window.WebSocket("ws" + (NnnNv === 1 ? "s" : "") + "://" + ip + ":" + port + '/?token=' + shit);

        Nvwnv++;
        websocket.currentId = Nvwnv;
        var currentId = Nvwnv;


        websocket.binaryType = "arraybuffer";
        websocket.onerror = function() {
            if (this.currentId !== Nvwnv)
                return;
            WmMnn();
        };
        websocket.onclose = function(event) {
            if (this.currentId !== Nvwnv)
                return;
            WmMnn();
        };
        websocket.onmessage = function(event, vnWMw) {
            if (this.currentId !== Nvwnv)
                return;

            mN = VmN;
            if (typeof event.data === 'string')
                onMessageJSON(window.JSON.parse(event.data));
            else {
                onMessageRaw(event.data);
                }
        };
        
        websocket.onopen = function(event) {
            MmnWW = -1;
            vVw = VmN;
            onOtherDie();
            websocket.send(window.JSON.stringify(onFirstMessage(dat)));
            time = window.setTimeout(function() {
                if (currentId !== Nvwnv)
                    return;
                mnnMw();
            }, timeoutnb);
        };
        time = window.setTimeout(function() {
            if (currentId !== Nvwnv)
                return;
            mnnMw();
        }, timeoutnb);
    };

    function NwnvM() {
        Client.state |= Client.binary.b32;
    };

    function wwMnN(mN) {
        wVmvv = VmN;
        wVmvW = mN * 60000;
    };

    function VwwWW() {
        Client.state = binary.b1024;
        checkstatenull();
    };

    function NmWVv() {
        Client.state = binary.b512;
        checkstatenull();
    };

    function MwNwm() {
        Client.state = binary.b128;
        checkstatenull();
    };

    function mMnWv() {
        onOtherDie();
        Client.state = binary.b256;
        checkstatenull();
    };

    function nNnVM() {
        onOtherDie();
        Client.state = Client.binary.b1;
        if (Client.NvN !== null)
            Client.NvN();
    };

    function WMwWV(serverversion) {
        if (serverversion > dat)
            Client.state = binary.b8;
        else if (serverversion < dat)
            Client.state = binary.b16;
        onOtherDie();
    };

    function NvvVN() {
        WVMnV = [];
        wwWNw = Client.serverList[Client.selectedServer][Wmvmm];
        for (var i = 0; i < Client.serverList.length; i++) {
            if (wwWNw === Client.serverList[i][Wmvmm])
                WVMnV.push(i);
        }
        Client.selectedServer = WVMnV[window.Math.floor(window.Math.random() * WVMnV.length)];
    };

    function Vvnww(wVvWw) {
        MVmWW();
        window.setTimeout(function() {
            NvvVN();
            wVvWw();
        }, WmNnm);
    };

    function mmMwv() {
        Wwvmw = window.JSON.stringify(localStorage.getItem("lastServer"));
        for (var i = 0; i < Client.serverList.length; i++) {
            var Nnwmn = Client.serverList[i];
            if ((Nnwmn[0] === Wwvmw[0]) && (Nnwmn[1] === Wwvmw[1])) {
                Client.selectedServer = i;
                return;
            }
        }
        throw "Server not found"
    };

    function VNWMn(wVvWw) {
        var VwmvV = 0;
        try {
            mmMwv();
            VwmvV = 1;
        } catch (error) {
            Vvnww(wVvWw);
        }
        if (VwmvV === 1)
            wVvWw();
    };

    function getServerList(_srv) {

        var lobbyList = 'https://matchmaker.api.rivet.gg/v1/lobbies/list';

        let _accept = {
            'Accept': 'application/json'
        };

        window['RIVET_TOKEN'] && (_accept['Authorization'] = 'Bearer' + window['RIVET_TOKEN']),

        fetch(lobbyList, {
            'headers': _accept
        })['then'](_list=>{
            if (_list['ok'])
                return _list.json();
            else
                throw 'Failed to list lobbies: ' + _list['status'];
        }

        )['then'](_0xd4093f=>{
            Client['serverList'] = _0xd4093f['lobbies']['map'](_0x3dd0bf=>{
                let _0x2b6601 = _0xd4093f['regions']['find'](_0x10ffcf=>_0x10ffcf['region_id'] == _0x3dd0bf['region_id'])
                  , _0x13a27b = _0x2b6601 ? _0x2b6601['region_display_name'] : '?';
                return [_0x3dd0bf['lobby_id'], '', '', 0x1, _0x13a27b, _0x3dd0bf['total_player_count'], _0x3dd0bf['game_mode_id']];
            }
            ),
            _srv();
        }
        );
    }

    function MVmWW() {
        var MNv = [];
        var mvNWm = Client.serverList;
        NvVVv = VMvvn;
        for (var i = 0; i < mvNWm.length; i++) {
            var Nnwmn = mvNWm[i];
            var WmVwN = Nnwmn[Wmvmm];
            var VNMmn = 0;
            for (var nMm = 0; nMm < Client.types.length; nMm++) {
                if (WmVwN.indexOf(Client.types[nMm]) !== -1) {
                    window.console.log("EXCLUSION OF " + WmVwN);
                    VNMmn = 1;
                    break;
                }
            }
            if (VNMmn === 1)
                continue;
            if (MNv[WmVwN] === window.undefined) {
                MNv[WmVwN] = 1;
                NMmVw(i);
            }
        }
    };

    function NMmVw(Wn) {
        var Nnwmn = Client.serverList[Wn];
        var VNVmm = window.Date.now();
        var xObj = new window.XMLHttpRequest;
        xObj.open("GET", (((("http" + ((Nnwmn[vNNmW] === 1) ? "s" : "")) + "://") + Nnwmn[VMVmm]) + ":") + Nnwmn[port], true);
        xObj.onreadystatechange = function() {
            if (xObj.readyState === 4) {
                var mN = window.Date.now() - VNVmm;
                if (mN < NvVVv) {
                    NvVVv = mN;
                    Client.selectedServer = Wn;
                }
            }
        };
        try {
            xObj.send(null);
        } catch (error) {}
    };

    function chngtoken() {
        var token = "";
        for (var i = 0; i < 20; i++) {
            token += window.String.fromCharCode(48 + window.Math.floor(window.Math.random() * 74));
        }
        return token;
    };

    function update() {
        if (Client.state === Client.binary.b1) {
            WNmnv();
            MNVNn();
        }
    };

    function checkstatenull() {
        if (Client.checkstatenull !== null) {
            var StWSstate = Client.state;
            Client.state = 0;
            Client.checkstatenull(StWSstate);
        }
    };
    
    return {
        state: 0,
        binary: binary,
        serverList: window.undefined,
        selectedServer: 0,
        init: init,
        startConnection: startConnection,
        getServerList: getServerList,
        NwnvM: NwnvM,
        nNnVM: nNnVM,
        WMwWV: WMwWV,
        mMnWv: mMnWv,
        NmWVv: NmWVv,
        VwwWW: VwwWW,
        muted: wwMnN,
        MwNwm: MwNwm,
        sendchat: sendchat,
        sendmodchat: sendmodchat,
        sendcrash: sendcrash,
        sendafk: sendafk,
        sendspam: sendspam,
        sendlamp: sendlamp,
        newstorage: newstorage,
        sendwsmsg: sendwsmsg,
        sendkey: sendkey,
        sendrotation: sendrotation,
        sendrotation2: sendrotation2,
        sendkeyda: sendkeyda,
        srvclick: srvclick,
        srvunclick: srvunclick,
        srvshift: srvshift,
        update: update,
        MMwNN: [],
        checkstatenull: null,
        NvN: null
    };
})();
var World = (function() {
    var NMv = 0;
    var wWw = 0;
    var MwwMW = 0;
    var nVnMn = 0;
    var NNMVV = 18;
    var NmmnM = 9;
    var Mnnnn = 50;

    function mmMMM(VVNwN, WNvNN) {
        NMv = VVNwN;
        wWw = WNvNN;
        MwwMW = VVNwN - 1;
        nVnMn = WNvNN - 1;
    };

    function VwvMN(mNWnw) {
        World.WVw = -1;
        for (var i = 0; i < World.playerNumber; i++) {
            if (mNWnw[i] !== 0)
                World.WVw++;
            World.socket[i] = new player(i, mNWnw[i]);
        }
    };

    function player(id, nick) {
        this.id = id;
        this.nick = ((nick + "  #") + id);
        this.tokenid = 0;
        this.MMm = 0;
        this.MNN = 0;
        this.mW = 0;
        this.wMWWv = 0;
        this.clan = -1;
        this.wwV = 0;
        this.VVvWM = 0;
        this.Wmv = 0;
        this.MNV = 0;
        this.nNnWn = [];
        this.position = [];
        this.mvnvM = 0;
        this.NMWMV = 0;
        this.text = [];
        this.WvWwv = [];
        this.MVNWv = [];
        this.label = [];
        this.mNWvv = [{
            x: 0,
            y: 0,
            mN: 0,
            angle: 0,
            size: 0
        }, {
            x: 0,
            y: 0,
            mN: 0,
            angle: 0,
            size: 0
        }, {
            x: 0,
            y: 0,
            mN: 0,
            angle: 0,
            size: 0
        }];
        this.mNvwv = [{
            type: 0,
            x: 0,
            y: 0,
            mN: 0,
            wwMnv: 0,
            NwVWn: 0
        }, {
            type: 0,
            x: 0,
            y: 0,
            mN: 0,
            wwMnv: 0,
            NwVWn: 0
        }, {
            type: 0,
            x: 0,
            y: 0,
            mN: 0,
            wwMnv: 0,
            NwVWn: 0
        }, {
            type: 0,
            x: 0,
            y: 0,
            mN: 0,
            wwMnv: 0,
            NwVWn: 0
        }];
        this.Vw = 0;
        this.nn = 0;
        this.orientation = 1;
        this.NmMVW = 1;
        this.mWv = -1;
        this.MMvnN = 0;
        this.vMNnW = null;
        this.mMw = null;
        this.MNn = null;
        this.nnmnv = -1;
        this.MNW = -1;
        this.x = 0;
        this.y = 0;
        this.rx = 0;
        this.ry = 0;
        this.VwVVw = 0;
    };

    function NMvMv(clans) {
        for (var i = 0; i < NNMVV; i++)
            World.clans[i] = new MmvWv(i, clans[i + 1]);
    };

    function MVnvw(WwnMv, Wn) {
        if (Wn === Mnnnn) {
            WwnMv.clan = -1;
            return;
        } else if (Wn > Mnnnn) {
            Wn -= Mnnnn + 1;
            World.clans[Wn].MvvWw = WwnMv.id;
            WwnMv.VVvWM = 1;
            if (World.PLAYER.id === WwnMv.id)
                World.PLAYER.VVvWM = 1;
        } else
            WwnMv.VVvWM = 0;
        if (World.PLAYER.id === WwnMv.id)
            World.PLAYER.clan = Wn;
        WwnMv.clan = Wn;
        WwnMv.wwV = World.clans[Wn].mvN;
    };

    function MMVmW() {
        PLAYER.wNw = 0;
        for (var i = 0; i < PLAYER.mnVMN.length; i++) {
            if (PLAYER.mnVMN[i] !== 0) {
                PLAYER.wNw = PLAYER.mnVMN[i];
                PLAYER.mnVMN[i] = 0;
                return;
            }
        }
        PLAYER.wMnNv = 0;
    };

    function Wwmvm(Wn) {
        var clan = World.clans[Wn];
        clan.label = null;
        clan.WWMWm = null;
        clan.mvN = wwV++;
        clan.MvvWw = 0;
        clan.name = "";
    };
    var wwV = 0;

    function MmvWv(Wn, Mwv) {
        this.id = Wn;
        this.name = Mwv;
        this.label = null;
        this.WWMWm = null;
        this.MvvWw = 0;
        this.mvN = wwV++;
    };

    function NNNMv() {
        var vvv = ENTITIES.length;
        for (var i = 0; i <= vvv; i++) {
            if ((vvv !== i) && (ENTITIES[i].nn === 0))
                continue;
            var Wvm = Entitie.Wvm[i];
            var vWM = Entitie.border[i];
            var mWm = vWM.border;
            for (var j = 0; j < mWm; j++)
                MMwww(Wvm[vWM.nnN[j]]);
        }
        if (World.PLAYER.clan !== -1) {
            for (var i = 0; i < PLAYER.nnnVN; i++) {
                var nmmvN = PLAYER.MVmNm[i];
                if (nmmvN.wmWMV < 0)
                    continue;
                var wmW = World.socket[nmmvN.id];
                wmW.rx = CanvasUtils.nWV(wmW.rx, wmW.x, 0.03);
                wmW.ry = CanvasUtils.nWV(wmW.ry, wmW.y, 0.03);
                nmmvN.wmWMV -= delta;
            }
        }
        if (World.PLAYER.VvWnm > 0) {
            var wmW = World.socket[World.PLAYER.karmaplayerid];
            wmW.rx = CanvasUtils.nWV(wmW.rx, wmW.x, 0.03);
            wmW.ry = CanvasUtils.nWV(wmW.ry, wmW.y, 0.03);
            World.PLAYER.VvWnm -= delta;
        }
    };

    function MMwww(MW) {
        WX = MW.rx + ((delta * MW.speed) * MW.NvMVn);
        WY = MW.ry + ((delta * MW.speed) * MW.vnmWn);
        if (checkspos.MWV(MW.rx, MW.ry, MW.wnw, MW.WVM) < checkspos.MWV(WX, WY, MW.rx, MW.ry)) {
            MW.rx = MW.wnw;
            MW.ry = MW.WVM;
        } else {
            MW.rx = WX;
            MW.ry = WY;
        }
        MW.x = WNW.nWV(MW.x, MW.rx, MW.nWV);
        MW.y = WNW.nWV(MW.y, MW.ry, MW.nWV);
        MW.i = window.Math.max(0, window.Math.min(nVnMn, window.Math.floor(MW.y / Render.wmn)));
        MW.j = window.Math.max(0, window.Math.min(MwwMW, window.Math.floor(MW.x / Render.wmn)));
        if ((World.PLAYER.id === MW.socketid) && (MW.id === 0))
            MW.angle = myply.angle;
        else if (MW.socketid === 0)
            MW.angle = WNW.nWV(MW.angle, MW.MVWwV, MW.nWV / 2);
        else
            MW.angle = WNW.nWV(MW.angle, MW.MVWwV, MW.nWV * 2);
    };

    function VVnvw(WVm, M) {
        if ((World.socket[WVm].nick === 0) && (World.socket[M].nick === 0))
            return 0;
        else if (World.socket[WVm].nick === 0)
            return World.socket[M].mW - 1;
        else if (World.socket[M].nick === 0)
            return -1 - World.socket[WVm].mW;
        else
            return World.socket[M].mW - World.socket[WVm].mW;
    };

    function nnvVM() {
        window.console.log(World.playerNumber);
        for (var i = 0; i < World.playerNumber; i++)
            World.leaderboard[i] = i;
        World.leaderboard = World.leaderboard.sort(VVnvw).slice(0, 10);
        for (var i = 0; i < World.playerNumber; i++)
            World.WnNNv = 1;
    };

    function MVvwW(unit16, unit8) {
        for (var i = 0; i < 10; i++) {
            var Wn = unit8[2 + (i * 4)];
            var mW = unit16[2 + (i * 2)];
            var PLAYER = World.socket[Wn];
            PLAYER.mW = WNW.NvwmV(mW);
            PLAYER.VwVVw = unit8[3 + (i * 4)];
            var wMWWv = WNW.nVvNM(PLAYER.mW);
            if (wMWWv !== PLAYER.wMWWv)
                PLAYER.MNn = null;
            PLAYER.wMWWv = wMWWv;
            World.leaderboard[i] = Wn;
        }
        World.WnNNv = 1;
    };

    function VmmnM() {
        this.nnw = 0;
        this.value = 0;
        this.WWw = 0;
        this.speed = 0;
        this.time = 0;
        this.Nwmnw = 1;
        this.mNNmw = 0;
    };

    function nVnwv(Vnv, vW, VWM, VVw, vww) {
        Vnv.nnw = vW;
        Vnv.value = vW;
        Vnv.WWw = vW;
        Vnv.VWM = VWM;
        Vnv.VVw = VVw;
        Vnv.vww = vww;
        Vnv.mNNmw = 0;
    };

    function nMVNW() {
        var WvW = ENTITIES[INSplayers].MnW;
        nVnwv(MnW.health, WvW.health.WWw, WvW.health.VWM, WvW.health.VVw, 0);
        if (PLAYER.MNN === 0) {
            nVnwv(MnW.vVv, WvW.vVv.WWw, WvW.vVv.VWM, WvW.vVv.VVw, 1);
            nVnwv(MnW.vNN, WvW.vNN.WWw, WvW.vNN.VWM, WvW.vNN.VVw, 0);
            nVnwv(MnW.nvv, WvW.nvv.WWw, WvW.nvv.VWM, WvW.nvv.VVw, -1);
            nVnwv(MnW.MWw, WvW.MWw.WWw, WvW.MWw.VWM, WvW.MWw.VVw, 0);
        } else {
            nVnwv(MnW.vVv, WvW.vVv.WWw, WvW.vVv.VWM, 0, 1);
            nVnwv(MnW.vNN, WvW.vNN.WWw, WvW.vNN.VWM, 0, 0);
            nVnwv(MnW.nvv, WvW.nvv.WWw, WvW.nvv.VWM * 2, WvW.nvv.VVw / 2, -1);
            nVnwv(MnW.MWw, WvW.MWw.WWw, WvW.MWw.VWM, 0, 0);
        }
        nVnwv(MnW.mMv, 255, 0, 0, 0);
        MnW.mMv.value = 0;
        MnW.mMv.nnw = 0;
        PLAYER.nmMWN = NwwNn;
        if (nVM === NwVWM)
            MnW.vNN.vww = 1;
    };

    function nMmNW(Vnv) {
        if (Vnv.vww === 1)
            Vnv.value = window.Math.min(Vnv.WWw, window.Math.max(Vnv.value - (delta * (Vnv.VVw - Vnv.mNNmw)), 0));
        else if (Vnv.vww === -1)
            Vnv.value = window.Math.min(Vnv.value + (delta * (Vnv.VWM + Vnv.mNNmw)), Vnv.WWw);
        Vnv.nnw = WNW.nWV(Vnv.nnw, Vnv.value, 0.1);
    };

    function WnMvm() {
        nMmNW(MnW.health);
        nMmNW(MnW.vVv);
        nMmNW(MnW.vNN);
        nMmNW(MnW.MWw);
        nMmNW(MnW.nvv);
        nMmNW(MnW.mMv);
        World.PLAYER.VWMmM += delta;
        if (MnW.MWw.nnw > 254)
            vWn.vwMNW = 0;
        else
            vWn.vwMNW = window.Math.min(1, window.Math.max(0, 1 - (MnW.MWw.nnw / 255)));
        vNvmW();
    };
    var MnW = {
        health: new VmmnM,
        vVv: new VmmnM,
        vNN: new VmmnM,
        MWw: new VmmnM,
        nvv: new VmmnM,
        mMv: new VmmnM
    };
    var NwVWM = 1;
    var Mnvww = 0;
    var nVM = Mnvww;
    var wVnVV = 0;

    function VwVMW() {
        var mWN;
        mWN = NWVnn;
        NWVnn = items;
        items = mWN;
        mWN = NWwVV;
        NWwVV = VNw;
        VNw = mWN;
        mWN = mwwnn;
        mwwnn = VNN;
        VNN = mWN;
        mWN = MMNMn;
        MMNMn = nnv;
        nnv = mWN;
        mWN = ENTITIES2;
        ENTITIES2 = ENTITIES;
        ENTITIES = mWN;
        mWN = vNNVn;
        vNNVn = NWWWW;
        NWWWW = mWN;
        mWN = wwVWm;
        wwVWm = MwWmN;
        MwWmN = mWN;
        mWN = VNVwN;
        VNVwN = VVv;
        VVv = mWN;
        nVM = (nVM + 1) % 2;
        World.nVM = nVM;
        if (nVM === 0) {
            window.document.getElementById("bod").style.backgroundColor = "#3D5942";
            canvas.style.backgroundColor = "#3D5942";
        } else {
            window.document.getElementById("bod").style.backgroundColor = "#0B2129";
            canvas.style.backgroundColor = "#0B2129";
        }
        wVnVV = 0;
    };

    function WMnVv(nnN, MVNvn) {
        if (nnN !== nVM)
            World.vnw = 1000;
        World.nVM = nVM;
        wVnVV = MVNvn;
    };

    function MVMwn(nnN, MVNvn) {
        if (nnN !== nVM)
            VwVMW();
        World.nVM = nVM;
        wVnVV = MVNvn;
    };

    function NvVVW() {
        wVnVV += delta;
        return (wVnVV % World.Mnvww) + (nVM * 10000000);
    };

    function NvwNN(Wn) {
        var vvv = 0;
        var idd = items[Wn];
        Game.vwvvm.MVN(idd.img.src, idd.img.W);
        var MWVwN = idd.detail.WVn;
        var canvasZ = idd.detail.MWW;
        var WVn = Game.WVn;
        var VnmwN = Game.VnmwN;
        var nNNWn = PLAYER.nNNWn;
        PLAYER.mMvww = Wn;
        if (canvasZ !== window.undefined) {
            for (var i = 0; i < canvasZ.length; i++) {
                var wmN = VmwwM[canvasZ[i]];
                if (wmN !== window.undefined) {
                    idd = items[wmN];
                    VnmwN[vvv].MVN(idd.img.src, idd.img.W);
                    vvv++;
                }
            }
        }
        PLAYER.nWwmM = vvv;
        vvv = 0;
        if (MWVwN !== window.undefined) {
            for (i = 0; i < MWVwN.length; i++) {
                idd = items[MWVwN[i][0]];
                WVn[vvv].MVN(idd.img.src, idd.img.W);
                nNNWn[vvv] = idd.id;
                vvv++;
            }
        }
        PLAYER.nMnmW = vvv;
        MMMWN(MWVwN);
    };

    function NMvWv(Wn, NW) {
        if ((PLAYER.WvMVw[Wn] === 1) || (NW.level === -1))
            return 2;
        else if (((NW.level > PLAYER.level) || (PLAYER.canvasH < NW.wNvMv)) || ((NW.WnNmW !== -1) && (PLAYER.WvMVw[NW.WnNmW] === window.undefined)))
            return 0;
        return 1;
    };

    function MMMWN(WVn) {
        var MvmWv = PLAYER.NmWNV;
        var invtr = PLAYER.inventory;
        var mNmnm = 1;
        if (WVn === window.undefined)
            return mNmnm;
        for (var i = 0; i < WVn.length; i++) {
            var VWVMW = WVn[i];
            for (var j = 0; j < invtr.length; j++) {
                var idd = invtr[j];
                if (idd[0] === VWVMW[0]) {
                    if (idd[1] >= VWVMW[1]) {
                        MvmWv[i] = VWVMW[1];
                        break;
                    } else
                        MvmWv[i] = -VWVMW[1];
                }
            }
            if (j === invtr.length) {
                MvmWv[i] = -VWVMW[1];
                mNmnm = 0;
            }
        }
        return mNmnm;
    };

    function MNNMM() {
        if ((World.PLAYER.VVn === 1) || (World.PLAYER.MVNWm === 1)) {
            World.PLAYER.VVn = 0;
            World.PLAYER.MVNWm = 0;
            Client.sendwsmsg("[17]");
        }
    };

    function NVM(nww) {
        World.MNNMM();
        var nnNVM = 0;
        var vVWmn = 0;
        var vvv = 0;
        var nvV = PLAYER.craftList;
        var craftList = Game.nvV;
        var vVN = PLAYER.vVN;
        for (var i = 1; i < items.length; i++) {
            var idd = items[i];
            if (idd.detail.nww === nww) {
                if (nnNVM === 0) {
                    nnNVM = i;
                    vVWmn = vvv;
                }
                craftList[vvv].MVN(idd.img.src, idd.img.W);
                nvV[vvv] = i;
                vVN[vvv] = NMvWv(i, idd.detail);
                vvv++;
            }
        }
        PLAYER.MNvMn = vvv;
        PLAYER.Vvw = -1;
        PLAYER.nVV = nww;
        PLAYER.VNwww = vVWmn;
        NvwNN(nnNVM);
    };

    function MwM(MWW) {
        if (MWW === AREAS.own) {
            World.MNNMM();
            PLAYER.Nn.MNM = -1;
        }
        var nnNVM = 0;
        var vVWmn = 0;
        var WnNmW = World.PLAYER.mMvww;
        var vvv = 0;
        var nvV = PLAYER.craftList;
        var vVN = PLAYER.vVN;
        var craftList = Game.nvV;
        for (var i = 1; i < items.length; i++) {
            var idd = items[i];
            var NW = idd.detail;
            if (((NW.MWW !== window.undefined) && (NW.MWW.indexOf(MWW) !== -1)) && ((NW.level === -1) || (PLAYER.WvMVw[idd.id] === 1))) {
                if ((nnNVM === 0) || (WnNmW === i)) {
                    nnNVM = i;
                    vVWmn = vvv;
                }
                craftList[vvv].MVN(idd.img.src, idd.img.W);
                nvV[vvv] = i;
                vVN[vvv] = MMMWN(NW.WVn);
                vvv++;
            }
        }
        PLAYER.MNvMn = vvv;
        PLAYER.Vvw = MWW;
        PLAYER.nVV = -1;
        PLAYER.VNwww = vVWmn;
        if (nnNVM > 0)
            NvwNN(nnNVM);
    };
    NwwNn = 900;
    wnvmW = 1.105;

    function VVMWm(vMN) {
        var mMv = NwwNn;
        for (var i = 0; i < vMN; i++)
            mMv = window.Math.floor(mMv * wnvmW);
        return mMv;
    };

    function vNvmW() {
        if ((PLAYER.mMv > 0) && (window.Math.abs(MnW.mMv.nnw - MnW.mMv.value) < 0.6)) {
            if (MnW.mMv.value === 255) {
                MnW.mMv.nnw = 0;
                MnW.mMv.value = 0;
                PLAYER.level++;
                PLAYER.canvasH++;
                if ((Game.MvN() === 1) && (PLAYER.nVV !== -1))
                    NVM(PLAYER.nVV);
                audio.VnV(audio.ww.nNwmw, 1, 0);
                return;
            }
            if (PLAYER.mMv >= PLAYER.nmMWN) {
                MnW.mMv.value = 255;
                PLAYER.mMv -= PLAYER.nmMWN;
                PLAYER.nmMWN = window.Math.floor(PLAYER.nmMWN * wnvmW);
            } else
                MnW.mMv.value = window.Math.floor((255 * PLAYER.mMv) / PLAYER.nmMWN);
        }
    };
    var PLAYER = {
        id: 0,
        x: 0,
        y: 0,
        NWM: 0,
        mmm: 0,
        mW: 0,
        WMWVW: -1,
        MnWnn: 0,
        MNn: null,
        click: 0,
        inventory: [],
        nMnmW: 0,
        nWwmM: 0,
        nwnWV: 0,
        MNvMn: 0,
        VVn: 0,
        MVNWm: 0,
        Vvw: -1,
        nVV: -1,
        mMvww: -1,
        VNwww: -1,
        WvMVw: [],
        level: 0,
        nWwnN: 0,
        mMv: 0,
        nmMWN: 0,
        canvasH: 0,
        nNNWn: [],
        craftList: [],
        vVN: [],
        NmWNV: [],
        WwVNv: 0,
        WNvWv: 0,
        holditem: {
            inclick: 0,
            x: 0,
            y: 0,
            id: 0
        },
        MWVMV: null,
        mvn: -1,
        wVnVm: 0,
        nWVvv: 0,
        loot: -1,
        lootsrvID: -1,
        mwMmN: 0,
        NnN: -1,
        vWMmW: -1,
        MnMwn: -1,
        MNMvN: -1,
        mwV: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        mwmVM: 0,
        Nn: {
            NMV: [0, 0, 0, 0],
            mv: 0,
            time: 0,
            WWNVM: 0,
            vvv: 0,
            MNM: 0
        },
        putableimg: 0,
        mWmnv: 0,
        nvMwN: 0,
        NvwMN: 0,
        Mww: 0,
        Wvv: [0, 0, 0],
        VWVWw: 0,
        vNwMm: 0,
        NVNMw: [0, 0, 0],
        NmVnm: [0, 0, 0],
        wvM: 0,
        NNV: 0,
        Vmm: 0,
        nwVMm: 0,
        wNV: 0,
        NmWvw: 0,
        mnWwv: 0,
        wMnNv: 0,
        VVvWM: 0,
        WnNvv: 0,
        Mwnwv: 0,
        WwmNM: 0,
        mVVmv: 0,
        mnVMN: [0, 0, 0, 0, 0],
        wNw: 0,
        Mwnwv: 0,
        clan: -1,
        MVmNm: [],
        nnnVN: 0,
        VwVVw: 0,
        karmaplayerid: 0,
        VvWnm: 0,
        vVVnm: null,
        MnMWm: 0,
        VVvMn: 1,
        VmNwm: 0,
        Mwwnw: 0,
        wMwmv: 0,
        WMnWN: 0,
        MNN: 0,
        wmWvV: []
    };
    return {
        __SURVIVAL__: 0,
        __BR__: 1,
        __GHOUL__: 2,
        gameMode: 0,
        leaderboard: [],
        nnvVM: nnvVM,
        MVvwW: MVvwW,
        mmMMM: mmMMM,
        WnNNv: 0,
        playerNumber: 0,
        WVw: 0,
        NMvMv: NMvMv,
        clans: [],
        MVnvw: MVnvw,
        Wwmvm: Wwmvm,
        MMVmW: MMVmW,
        VwvMN: VwvMN,
        socket: [],
        PLAYER: PLAYER,
        MMwww: MMwww,
        NNNMv: NNNMv,
        MnW: MnW,
        nMVNW: nMVNW,
        WnMvm: WnMvm,
        VwVMW: VwVMW,
        WMnVv: WMnVv,
        MVMwn: MVMwn,
        NvVVW: NvVVW,
        Mnvww: (8 * 60) * 1000,
        nVM: 0,
        vnw: 0,
        MwM: MwM,
        NVM: NVM,
        NvwNN: NvwNN,
        MNNMM: MNNMM,
        VVMWm: VVMWm
    };
})();
var Entitie = (function() {
    var MwvWW = 0;
    var Wvm = [];
    var vWM = [];
    var WVMvm = [];
    var MnMWW = 0;

    function init(WvwVn, WwNMN, nVvmm) {
        Entitie.WwNMN = (WwNMN === window.undefined) ? 0 : WwNMN;
        Entitie.nVvmm = (nVvmm === window.undefined) ? 0 : nVvmm;
        MnMWW = Entitie.nVvmm + Entitie.WwNMN;
        MwvWW = ENTITIES.length;
        var vvv = ENTITIES.length + 1;
        for (var i = 0; i < vvv; i++) {
            vWM[i] = new VNWvV.VNWvV(WvwVn);
            Wvm[i] = [];
            for (var j = 0; j < WvwVn; j++)
                Wvm[i][j] = Entitie.create(i);
        }
    };

    function MVVMV(vV) {
        return new MVwWV(vV);
    };

    function NWnwm() {
        for (var i = 0; i < ENTITIES.length; i++)
            vWM[i].border = 0;
        WVMvm = [];
    };

    function NMM(socketid, Wn, mvN, vV, nVmNV) {
        var i = 0;
        var mMnVn = (((socketid === 0) ? 0 : MnMWW) + (socketid * Entitie.VWMmm)) + Wn;
        var MW = WVMvm[mMnVn];
        if (((MW !== window.undefined) && (MW.type === vV)) && (MW.mvN === mvN))
            WVMvm[mMnVn] = window.undefined;
        var M = vWM[vV];
        var NMwVv = Wvm[vV];
        var vvv = M.border;
        for (i = 0; i < vvv; i++) {
            var MW = NMwVv[M.nnN[i]];
            if (((MW.mvN === mvN) && (MW.socketid === socketid)) && (MW.id === Wn)) {
                VNWvV.nwnNm(M, i);
                if ((ENTITIES[MW.type].remove > 0) && (nVmNV === 1)) {
                    var VWvMW = Wvm[MwvWW][VNWvV.MMvvm(vWM[MwvWW])];
                    for (var j in MW)
                        VWvMW[j] = MW[j];
                    VWvMW.vwW = 1;
                }
                return;
            }
        }
    };

    function wWm(socketid, Wn, mvN, vV) {
        var mMnVn = (((socketid === 0) ? 0 : MnMWW) + (socketid * Entitie.VWMmm)) + Wn;
        var MW = WVMvm[mMnVn];
        if ((MW === window.undefined) || (MW.mvN !== mvN)) {
            var wmWnw = VNWvV.MMvvm(vWM[vV]);
            MW = Wvm[vV][wmWnw];
            if (MW === window.undefined) {
                window.console.log("Memory Warn: new entitie created");
                Wvm[vV][wmWnw] = Entitie.create(vV);
                MW = Wvm[vV][wmWnw];
            }
            WVMvm[mMnVn] = MW;
            MW.update = 0;
            MW.vwW = 0;
        }
        return MW;
    };

    function nVvvw() {
        var M = vWM[MwvWW];
        var NMwVv = Wvm[MwvWW];
        var vvv = M.border;
        for (i = 0; i < vvv; i++) {
            var MW = NMwVv[M.nnN[i]];
            if (MW.vwW !== 1) {
                VNWvV.nwnNm(M, i);
                vvv--;
                i--;
            }
        }
    };

    function vvVvm(vV, socketid, Wn) {
        var NMwVv = Wvm[vV];
        var M = vWM[vV];
        var vvv = M.border;
        for (var i = 0; i < vvv; i++) {
            var player = NMwVv[M.nnN[i]];
            if ((player.id === Wn) && (player.socketid === socketid))
                return player;
        }
        return null;
    };
    return {
        init: init,
        create: MVVMV,
        get: wWm,
        vvVvm: vvVvm,
        remove: NMM,
        NWnwm: NWnwm,
        Wvm: Wvm,
        border: vWM,
        nVvvw: nVvvw,
        VWMmm: 0,
        WwNMN: 0,
        nVvmm: 0
    };
})();
var ENTITIES = [{
    MnW: {
        health: {
            WWw: 255,
            VVw: 0.005,
            VWM: 0.005
        },
        vVv: {
            WWw: 255,
            VVw: 0.0012,
            VWM: 0.0012
        },
        vNN: {
            WWw: 255,
            VVw: 0.0035,
            VWM: 0.005
        },
        MWw: {
            WWw: 255,
            VVw: 0.024,
            VWM: 0.003
        },
        nvv: {
            WWw: 255,
            VVw: 0.03,
            VWM: 0.015
        }
    },
    WnmmW: [{
        head: {
            src: "img/day-skin0.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm0.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm0.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-skin1.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm0.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm0.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-skin2.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm2.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm2.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-skin3.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm2.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm2.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-skin4.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm4.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm4.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-skin5.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm4.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm4.png",
            W: {
                m: 0
            }
        }
    }],
    mVNvN: [{}, {
        head: {
            src: "img/day-headscarf.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-chapka.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-chapka.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-chapka.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-coat.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-coat.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-coat.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-gaz-mask.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-gaz-protection.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-gaz-protection.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-gaz-protection.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-radiation-suit.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-radiation-suit.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-radiation-suit.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-metal-helmet.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-welding-helmet.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-welding-helmet.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-welding-helmet.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-gladiator-helmet.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-gladiator-armor.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-gladiator-armor.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-leather-jacket.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-leather-jacket.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-leather-jacket.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-kevlar-suit.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-kevlar-suit.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-kevlar-suit.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-SWAT-suit.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-SWAT-suit.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-SWAT-suit.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-protective-suit.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-protective-suit.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-protective-suit.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-tesla-0.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-tesla-0.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-tesla-0.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-tesla-armor.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-tesla-armor.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-tesla-armor.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-camouflage-gear.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-camouflage-gear.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-camouflage-gear.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-christmas-hat.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-deer-hat.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-snowman-hat.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-snowman-hat.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-snowman-hat.png",
            W: {
                m: 0
            }
        }
    }, {
        head: {
            src: "img/day-elf-hat.png",
            W: {
                m: 0
            }
        },
        mMM: {
            src: "img/day-left-arm-elf-hat.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            src: "img/day-right-arm-elf-hat.png",
            W: {
                m: 0
            }
        }
    }],
    mNWvv: {
        src: "img/day-run-effect.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-dead-player.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/hurt-player.png",
        W: {
            m: 0
        }
    },
    mNW: {
        src: "img/heal-player.png",
        W: {
            m: 0
        }
    },
    vVv: {
        src: "img/food-player.png",
        W: {
            m: 0
        }
    },
    mNvwv: [{
        src: "img/day-shotgun-cartridge.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-9mm-cartridge.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-AK47-cartridge.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-crossbow-cartridge.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-nails-cartridge.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-cells-cartridge.png",
        W: {
            m: 0
        }
    }],
    Mmvnv: [
        [{
            src: "img/day-bullet1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet2l.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-bullet3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet4l.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-bullet5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bullet6l.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-wood-arrow.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-arrow1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-arrowl.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-wood-spear0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spear1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spearl.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-wood-crossarrow.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-crossarrow1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-crossarrowl.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-nail1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-nail2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-nail2l.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-laser0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser1l.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-grenade0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-grenade1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-grenadel.png",
            W: {
                m: 0
            }
        }]
    ],
    Mmw: [
        [{
            src: "img/day-gun-effect0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-gun-effect1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-gun-effect2.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-laser-effect0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser-effect1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser-effect2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser-effect3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-laser-effect4.png",
            W: {
                m: 0
            }
        }]
    ],
    mNMNW: [{
        type: 0,
        id: 0,
        Nnn: 0,
        Mmv: {
            angle: 0,
            x: 22,
            y: 39
        },
        mMM: {
            angle: 0,
            x: 22,
            y: -39
        },
        Mnv: 0,
        vnM: 0.5,
        mVM: 3,
        Nww: ["audio/hand-swing0.mp3", "audio/hand-swing2.mp3", "audio/hand-swing3.mp3"],
        Vw: 0.05,
        nn: 3,
        mN: 300,
        impactaudio: 301,
        wvW: 150,
        damage: 20,
        vNNwv: 3,
        Nwv: 10,
        nvv: 2,
        wwW: 30,
        wvnVN: 0,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/pickaxe-swing.mp3"],
        nV: {
            src: "img/day-stone-pickaxe.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 800,
        wnNmM: 800,
        impactaudio: 801,
        wvW: 650,
        damage: 45,
        vNNwv: 16,
        Nwv: 15,
        nvv: 5,
        wwW: 50,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/pickaxe-swing.mp3"],
        nV: {
            src: "img/day-steel-pickaxe.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 800,
        wnNmM: 800,
        impactaudio: 801,
        wvW: 650,
        damage: 55,
        vNNwv: 22,
        Nwv: 15,
        nvv: 5,
        wwW: 50,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/hatchet-swing.mp3"],
        nV: {
            src: "img/day-hachet.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 500,
        wnNmM: 500,
        impactaudio: 501,
        wvW: 350,
        damage: 30,
        vNNwv: 7,
        Nwv: 10,
        nvv: 4,
        wwW: 40,
        mappos: 59,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/axe-swing.mp3"],
        nV: {
            src: "img/day-stone-axe.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.05,
        nn: 3,
        mN: 650,
        impactaudio: 651,
        wvW: 550,
        damage: 50,
        vNNwv: 26,
        Nwv: 20,
        nvv: 4,
        wwW: 46,
        mappos: 72,
        mWv: 0,
        mw: 0
    }, {
        type: 3,
        id: 0,
        Nnn: 1,
        Mnv: 0.75,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/spear-shot.mp3"],
        nV: {
            src: "img/day-wood-spear.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 25,
            y: 40
        },
        Mmv: {
            angle: 0,
            x: 10,
            y: 44
        },
        mMM: {
            angle: 0,
            x: 22,
            y: -39
        },
        nWN: [0],
        mmW: 4,
        Vnm: 0.5,
        vWm: 1,
        path: 600,
        damage: 80,
        Nwv: 30,
        Vw: 0.05,
        nwnMw: 2,
        nn: 3,
        mN: 850,
        impactaudio: 100,
        wvW: 100,
        nvv: 15,
        x: -40,
        mappos: 47,
        NnV: 60,
        mWv: 0,
        mw: 0
    }, {
        type: 4,
        id: 0,
        Nnn: 1,
        WnVmv: {
            src: "img/day-wood-arrow1.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        Mnv: 1.08,
        vnM: 1.4,
        mVM: 1,
        Nww: ["audio/bow-shot.mp3"],
        nV: {
            src: "img/day-wood-bow.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 44,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 10,
            y: 44
        },
        mMM: {
            angle: 0,
            x: 40,
            y: -30
        },
        damage: 40,
        Nwv: 10,
        nWN: [0],
        mmW: 3,
        Vnm: 0.75,
        vWm: 1,
        path: 800,
        Vw: 0.5,
        nwnMw: 1,
        nn: 1,
        mN: 1200,
        impactaudio: 120,
        wvW: 100,
        nvv: 8,
        x: -1,
        mappos: 47,
        NnV: -8,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/shotgun-shot.mp3"],
        nV: {
            src: "img/day-shotgun.png",
            W: {
                m: 0
            },
            x: 60,
            y: 0
        },
        damage: 21,
        Nwv: 20,
        Mmw: 0,
        wWN: 0,
        vVMMM: 500,
        NWn: 3,
        WNN: 4,
        MnN: 3,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0, 0.1, -0.1, 0.2, -0.2],
        mmW: 2,
        Vnm: 1.1,
        vWm: 1,
        nmnvN: 8,
        reload: 10,
        mmMMw: 1,
        NnV: 58,
        Vw: 1,
        nn: 2,
        mN: 900,
        impactaudio: 901,
        nvv: 0,
        x: 0,
        path: 600,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/9mm-shot.mp3"],
        nV: {
            src: "img/day-9mm.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 28,
        Nwv: 10,
        Mmw: 0,
        wWN: 1,
        vVMMM: 400,
        NWn: 2,
        WNN: 1,
        MnN: 2,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 0,
        Vnm: 1.2,
        vWm: 1,
        nmnvN: 20,
        reload: 22,
        mmMMw: 0,
        NnV: 40,
        Vw: 1,
        nn: 2,
        mN: 400,
        impactaudio: 401,
        nvv: 0,
        x: 0,
        path: 800,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1.3,
        mVM: 1,
        Nww: ["audio/desert-eagle-shot.mp3"],
        nV: {
            src: "img/day-desert-eagle.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 40,
        Nwv: 25,
        Mmw: 0,
        wWN: 1,
        vVMMM: 400,
        NWn: 2,
        WNN: 1,
        MnN: 2,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 0,
        Vnm: 1.4,
        vWm: 1,
        nmnvN: 7,
        reload: 22,
        mmMMw: 0,
        NnV: 40,
        Vw: 1,
        nn: 2,
        mN: 400,
        impactaudio: 401,
        nvv: 0,
        x: 0,
        path: 900,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/ak47-shot.mp3"],
        nV: {
            src: "img/day-AK47.png",
            W: {
                m: 0
            },
            x: 60,
            y: 0
        },
        damage: 30,
        Nwv: 25,
        Mmw: 0,
        wWN: 2,
        vVMMM: 500,
        NWn: 3,
        WNN: 2,
        MnN: 4,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 1,
        Vnm: 1.4,
        vWm: 1,
        nmnvN: 30,
        reload: 25,
        mmMMw: 0,
        NnV: 58,
        Vw: 1,
        nn: 2,
        mN: 120,
        impactaudio: 121,
        nvv: 0,
        x: 0,
        path: 900,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/sniper-shot.mp3"],
        nV: {
            src: "img/day-sniper.png",
            W: {
                m: 0
            },
            x: 60,
            y: 0
        },
        damage: 90,
        Nwv: 30,
        Mmw: 0,
        wWN: 2,
        vVMMM: 500,
        NWn: 3,
        WNN: 1,
        MnN: 4,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 1,
        Vnm: 1.5,
        vWm: 1,
        nmnvN: 10,
        reload: 20,
        mmMMw: 0,
        NnV: 70,
        Vw: 1,
        nn: 2,
        mN: 1250,
        impactaudio: 1251,
        nvv: 0,
        x: 0,
        path: 1100,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-raw-steak.png",
            W: {
                m: 0
            },
            angle: 1,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 20,
        vVv: 30,
        nVv: 0,
        www: 20,
        mNW: -10,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-cooked-steak.png",
            W: {
                m: 0
            },
            angle: 1,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 4,
        Vw: 0.4,
        nn: 0.8,
        nvv: 0,
        mnv: 200,
        wait: 20,
        vVv: 127,
        nVv: 0,
        www: 80,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-steak.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 20,
        vVv: 15,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-orange.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 40,
        nVv: 0,
        www: 10,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-orange.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 5,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-medikit.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 55,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 32
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -32
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 25,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: 200,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-bandage.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: 60,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-soda.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 30,
        nVv: 0,
        www: 155,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/mp5-shot.mp3"],
        nV: {
            src: "img/day-MP5.png",
            W: {
                m: 0
            },
            x: 60,
            y: 0
        },
        damage: 18,
        Nwv: 15,
        Mmw: 0,
        wWN: 1,
        vVMMM: 500,
        NWn: 3,
        WNN: 2,
        MnN: 4,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 0,
        Vnm: 1.2,
        vWm: 1,
        nmnvN: 30,
        reload: 26,
        mmMMw: 0,
        NnV: 52,
        Vw: 1,
        nn: 2,
        mN: 100,
        impactaudio: 101,
        nvv: 0,
        x: 0,
        path: 900,
        mappos: 47,
        mw: 0
    }, {
        type: 6,
        id: 0,
        Nnn: 0,
        Mmv: {
            angle: 0,
            x: 22,
            y: 39
        },
        mMM: {
            angle: 0,
            x: 22,
            y: -39
        },
        Vw: 0.05,
        nn: 3,
        wvnVN: 0,
        putableimg: {
            src: "img/day-hand-craft.png",
            W: {
                m: 0
            }
        },
        MMwvW: {
            src: "img/day-hand-craftpencil.png",
            W: {
                m: 0
            }
        },
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/pickaxe-swing.mp3"],
        nV: {
            src: "img/day-sulfur-pickaxe.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 20,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 800,
        wnNmM: 800,
        impactaudio: 801,
        wvW: 650,
        damage: 65,
        vNNwv: 30,
        Nwv: 15,
        nvv: 5,
        wwW: 50,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/hammer-swing.mp3"],
        nV: {
            src: "img/day-hammer.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 25,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 1100,
        wnNmM: 1100,
        impactaudio: 1101,
        wvW: 950,
        damage: 120,
        vNNwv: 30,
        Nwv: 30,
        nvv: 15,
        wwW: 40,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-repair-hammer.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 20,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 700,
        wnNmM: 700,
        impactaudio: 701,
        wvW: 550,
        damage: 40,
        vNNwv: 15,
        Nwv: 10,
        nvv: 6,
        wwW: 40,
        mappos: 59,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-tomato-soup.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 30,
        vVv: 160,
        nVv: 0,
        www: 40,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-radaway.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 25
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -25
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 30,
        vVv: 0,
        nVv: 255,
        www: 30,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-tomato.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 50,
        nVv: 0,
        www: 10,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-tomato.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 5,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/crossbow-shot.mp3"],
        nV: {
            src: "img/day-wood-crossbow.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 50,
        Nwv: 15,
        Mmw: 0,
        wWN: 3,
        vVMMM: 400,
        NWn: 2,
        WNN: 1,
        MnN: 2,
        WNw: 1,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 5,
        Vnm: 0.95,
        vWm: 1,
        nmnvN: 1,
        reload: 8,
        mmMMw: 0,
        NnV: 40,
        Vw: 1,
        nn: 2,
        mN: 400,
        impactaudio: 401,
        nvv: 12,
        x: 0,
        path: 800,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/nail-gun-shot.mp3"],
        nV: {
            src: "img/day-nail-gun.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 6,
        Nwv: 10,
        Mmw: 0,
        wWN: 4,
        vVMMM: 400,
        NWn: 2,
        WNN: 1,
        MnN: 2,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 6,
        Vnm: 1,
        vWm: 1,
        nmnvN: 80,
        reload: 30,
        mmMMw: 0,
        NnV: 52,
        Vw: 1,
        nn: 2,
        mN: 300,
        impactaudio: 301,
        nvv: 0,
        x: 0,
        path: 500,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/shotgun-shot.mp3"],
        nV: {
            src: "img/day-sawed-off-shotgun.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 28,
        Nwv: 30,
        Mmw: 0,
        wWN: 0,
        vVMMM: 500,
        NWn: 3,
        WNN: 4,
        MnN: 3,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0, 0.12, -0.12, 0.24, -0.24],
        mmW: 2,
        Vnm: 1.11,
        vWm: 1,
        nmnvN: 8,
        reload: 10,
        mmMMw: 1,
        NnV: 53,
        Vw: 1,
        nn: 2,
        mN: 900,
        impactaudio: 901,
        nvv: 0,
        x: 0,
        path: 400,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-chips.png",
            W: {
                m: 0
            },
            angle: 1,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 4,
        Vw: 0.4,
        nn: 0.8,
        nvv: 0,
        mnv: 200,
        wait: 20,
        vVv: 90,
        nVv: 0,
        www: 50,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-chips.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 5,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/laser-pistol-shot.mp3"],
        nV: {
            src: "img/day-laser-pistol.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 55,
        Nwv: 0,
        Mmw: 1,
        wWN: 5,
        vVMMM: 400,
        NWn: 2,
        WNN: 1,
        MnN: 2,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 7,
        Vnm: 1.45,
        vWm: 2,
        nmnvN: 12,
        reload: 22,
        mmMMw: 0,
        NnV: 50,
        Vw: 1,
        nn: 2,
        mN: 400,
        impactaudio: 401,
        nvv: 0,
        x: 0,
        path: 900,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 0.8,
        mVM: 1,
        Nww: ["audio/axe-swing.mp3"],
        nV: {
            src: "img/day-sulfur-axe.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.05,
        nn: 3,
        mN: 650,
        impactaudio: 651,
        wvW: 550,
        damage: 50,
        vNNwv: 30,
        Nwv: 20,
        nvv: 4,
        wwW: 46,
        mappos: 72,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-joystick.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 2,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: 0,
        vVm: 0,
        mWv: 0,
        mw: 1
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/laser-submachine-shot.mp3"],
        nV: {
            src: "img/day-laser-submachine.png",
            W: {
                m: 0
            },
            x: 50,
            y: 0
        },
        damage: 45,
        Nwv: 0,
        Mmw: 1,
        wWN: 5,
        vVMMM: 500,
        NWn: 3,
        WNN: 2,
        MnN: 4,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 7,
        Vnm: 1.45,
        vWm: 2,
        nmnvN: 30,
        reload: 25,
        mmMMw: 0,
        NnV: 54,
        Vw: 1,
        nn: 2,
        mN: 160,
        impactaudio: 161,
        nvv: 0,
        x: 0,
        path: 900,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 3,
        id: 0,
        Nnn: 1,
        nV: {
            src: "img/day-hand-grenade.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 25,
            y: 50
        },
        Mmv: {
            angle: 0,
            x: 10,
            y: 44
        },
        mMM: {
            angle: 0,
            x: 22,
            y: -39
        },
        nWN: [0],
        mmW: 8,
        Vnm: 0.4,
        vWm: 1,
        path: 380,
        damage: 15,
        Nwv: 5,
        Vw: 0.05,
        nwnMw: 2,
        nn: 3,
        mN: 850,
        impactaudio: 100,
        wvW: 100,
        nvv: 15,
        x: -50,
        mappos: 47,
        NnV: 25,
        mWv: 0,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-super-hammer.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 25,
            y: 5,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        mN: 1100,
        wnNmM: 1100,
        impactaudio: 1101,
        wvW: 950,
        damage: 1000,
        vNNwv: 255,
        Nwv: 30,
        nvv: 15,
        wwW: 40,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-ghoul-drug.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 13
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 30,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: -10,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-mushroom1.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 0,
        nVv: 0,
        www: 10,
        mNW: -20,
        vVm: 12,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-mushroom2.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 40,
        nVv: 0,
        www: 10,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-mushroom3.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 40,
        nVv: 0,
        www: 10,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-mushroom1.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 8,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-mushroom2.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 5,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-mushroom3.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 5,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-lapadoine.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 13
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 30,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: -10,
        vVm: 2,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-pumpkin.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 25
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -25
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 20,
        vVv: 90,
        nVv: 0,
        www: 20,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-pumpkin.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 25
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -25
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 30,
        nVv: 0,
        www: 0,
        mNW: -40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-antidote.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 13
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -13
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 30,
        vVv: 0,
        nVv: 0,
        www: 0,
        mNW: 50,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-acorn.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 15,
        nVv: 0,
        www: 0,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        Mnv: 0,
        vnM: 1,
        mVM: 3,
        Nww: 1,
        nV: {
            src: "img/day-hand-rotten-acorn.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 2,
        nVv: 0,
        www: 0,
        mNW: -20,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 2,
        id: 0,
        Nnn: 1,
        Mmv: {
            angle: 0,
            x: 32,
            y: 15
        },
        mMM: {
            angle: 0,
            x: 43,
            y: -13
        },
        Mnv: 0,
        vnM: 1,
        mVM: 1,
        Nww: ["audio/laser-sniper-shot.mp3"],
        nV: {
            src: "img/day-laser-sniper.png",
            W: {
                m: 0
            },
            x: 55,
            y: 0
        },
        damage: 100,
        Nwv: 0,
        Mmw: 1,
        wWN: 5,
        vVMMM: 500,
        NWn: 3,
        WNN: 1,
        MnN: 4,
        WNw: 0,
        MMmwV: 0,
        WnvMn: 0,
        nWN: [0],
        mmW: 7,
        Vnm: 1.5,
        vWm: 2,
        nmnvN: 10,
        reload: 20,
        mmMMw: 0,
        NnV: 70,
        Vw: 1,
        nn: 2,
        mN: 1250,
        impactaudio: 1251,
        nvv: 0,
        x: 0,
        path: 1100,
        mappos: 47,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-christmas-cake.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 127,
        nVv: 0,
        www: 30,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-rotten-christmas-cake.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 10,
        nVv: 0,
        www: 0,
        mNW: -20,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-gingerbread-man.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 20,
        nVv: 0,
        www: 20,
        mNW: 40,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-rotten-gingerbread-man.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 10,
        nVv: 0,
        www: 0,
        mNW: -20,
        vVm: 0,
        mWv: 1,
        mw: 0
    }, {
        type: 1,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-sugar-can.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 30,
            y: 0,
            WWm: 4,
            x2: 20,
            y2: 10
        },
        Mmv: {
            angle: 0,
            x: 33,
            y: 28,
            mappos: 8,
            WWm: 1.8
        },
        mMM: {
            angle: 0,
            x: 30,
            y: -28,
            mappos: -14,
            WWm: 1
        },
        Vw: 0.02,
        nn: 2,
        wnNmM: 650,
        mN: 650,
        impactaudio: 651,
        wvW: 550,
        damage: 60,
        vNNwv: 38,
        Nwv: 20,
        nvv: 16,
        wwW: 50,
        mappos: 56,
        mWv: 0,
        mw: 0
    }, {
        type: 5,
        id: 0,
        Nnn: 0,
        nV: {
            src: "img/day-hand-sugar-can-bow.png",
            W: {
                m: 0
            },
            angle: 0,
            x: 50,
            y: 0
        },
        Mmv: {
            angle: 0,
            x: 32,
            y: 10
        },
        mMM: {
            angle: 0,
            x: 32,
            y: -10
        },
        NWn: 3,
        Vw: 0.02,
        nn: 2,
        nvv: 0,
        mnv: 200,
        wait: 10,
        vVv: 30,
        nVv: 0,
        www: 50,
        mNW: 0,
        vVm: 0,
        mWv: 1,
        mw: 0
    }],
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0.23,
    MvnwW: 0.35,
    vVnMV: 0.08,
    VnMVn: 0.08,
    mmMnw: 0.08,
    NVMMm: 0.05,
    MNNwV: 0,
    remove: 1000,
    z: 0,
    health: 0,
    vWMvM: 8,
    nWV: 0.15,
    WmW: -1
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    wwW: 50,
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 0.2,
    MNNwV: 2,
    remove: 1000,
    z: 0,
    health: 0,
    nWV: 0.1,
    WmW: 20000
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    wwW: 4,
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 1,
    MNNwV: 2,
    remove: 1000,
    z: 0,
    health: 0,
    nWV: 0.2,
    WmW: -1
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 0,
    health: 0,
    remove: 1000,
    z: 0,
    nWV: 0.2,
    MNNwV: 1,
    WmW: -1
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 0,
    health: 0,
    remove: 1000,
    z: 0,
    nWV: 0.2,
    MNNwV: 1,
    WmW: -1
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 0,
    health: 0,
    remove: 1000,
    z: 0,
    nWV: 0.2,
    MNNwV: 1,
    WmW: -1
}, {
    nvmVM: {
        w: 0,
        WVv: 0
    },
    VvmMw: 0,
    WmNwn: 0,
    vvvvW: 0,
    nNV: 0,
    speed: 0,
    health: 0,
    remove: 1000,
    z: 0,
    nWV: 0.2,
    MNNwV: 1,
    WmW: -1
}, {
    speed: 0.7,
    health: 0,
    z: 0,
    nWV: 0.2
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0,
    MNNwV: 0,
    remove: 1000,
    z: 1,
    health: 0,
    nWV: 0.15,
    WmW: 1800000
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0,
    MNNwV: 0,
    remove: 1000,
    z: 1,
    health: 0,
    nWV: 0.15,
    WmW: 1800000
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0,
    MNNwV: 0,
    remove: 1000,
    z: 1,
    health: 0,
    nWV: 0.15,
    WmW: 1800000
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0,
    MNNwV: 0,
    remove: 1000,
    z: 1,
    health: 0,
    nWV: 0.15,
    WmW: 1800000
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    explosions: [{
        src: "img/day-explosion0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-explosion9.png",
        W: {
            m: 0
        }
    }],
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0,
    MNNwV: 2,
    remove: 0,
    z: 1,
    health: 64000,
    nWV: 0.15,
    WmW: 1500
}, {
    nvmVM: {
        w: 24,
        WVv: 24
    },
    wwW: 38,
    NVWWn: 40,
    VvmMw: 36,
    WmNwn: 36,
    vvvvW: 36,
    nNV: 36,
    speed: 0.23,
    MvnwW: 0.35,
    vVnMV: 0.08,
    NVMMm: 0.05,
    MNNwV: 0,
    remove: 1000,
    z: 0,
    health: 0,
    vWMvM: 8,
    nWV: 0.15,
    WmW: -1
}];

function MVwWV(vV) {
    this.mvN = 0;
    this.socketid = 0;
    this.id = 0;
    this.type = vV;
    this.nvN = 0;
    this.angle = 0;
    this.MVWwV = 0;
    this.NvMVn = 0;
    this.vnmWn = 0;
    this.state = 0;
    this.nNN = 0;
    this.Vvm = 0;
    this.x = 0;
    this.y = 0;
    this.rx = 0;
    this.ry = 0;
    this.wnw = -1;
    this.WVM = 0;
    this.WWwMm = 0;
    this.Vmnvm = 0;
    this.i = 0;
    this.j = 0;
    this.speed = 0;
    this.update = 0;
    this.vwW = 0;
    this.VMn = 0;
    this.nWM = 0;
    this.Mmm = 0;
    this.WvN = 0;
    this.mNW = 0;
    this.wmm = 0;
    this.Mnm = 0;
    this.Vw = 0;
    this.NnW = 0;
    this.NWm = [];
    this.draw = null;
    for (var i = 0; i < 10; i++)
        this.NWm.push({
            c: 0,
            V: 0,
            MNMWN: 0,
            nMNwv: 0,
            mMn: 0,
            r: 0
        });
    this.nWV = 0.1;
};

function mvMMV(MW, socketid, mvN, Wn, vV, WX, WY, wnw, WVM, nNN, wW, Mnn) {
    MW.socketid = socketid;
    MW.mvN = mvN;
    MW.id = Wn;
    MW.MVWwV = WNW.wNNMM(MW.angle, ((wW * 2) * window.Math.PI) / 255);
    MW.state = Mnn;
    MW.wnw = wnw;
    MW.WVM = WVM;
    MW.nNN = nNN;
    if (MW.update === 0) {
        var WvW = ENTITIES[vV];
        MW.speed = WvW.speed;
        MW.angle = MW.MVWwV;
        MW.x = WX;
        MW.y = WY;
        MW.z = WvW.z;
        MW.nWV = WvW.nWV;
        MW.rx = WX;
        MW.ry = WY;
        MW.i = window.Math.floor(WY / Render.wmn);
        MW.j = window.Math.floor(WX / Render.wmn);
        MW.VMn = 0;
        MW.nWM = 0;
        MW.Mmm = 0;
        MW.nMW = 0;
        MW.WvN = 0;
        MW.mNW = 0;
        MW.wmm = 0;
        MW.Vw = 0;
        MW.NnW = 0;
        MW.Mnm = 0;
        MW.Vvm = 0;
        MW.nvN = 0;
        MW.draw = null;
        var init = WvW.init;
        if (init !== window.undefined)
            init(MW);
    }
    var wW = checkspos.angle(MW.rx, MW.ry, wnw, WVM);
    MW.NvMVn = window.Math.cos(wW);
    MW.vnmWn = window.Math.sin(wW);
    MW.update = 1;
};
var VNWvV = (function() {
    function MMvvm(M) {
        if (M.border === M.size) {
            M.nnN[M.size] = M.size;
            M.vNnVw[M.size] = M.size;
            M.size++;
        }
        return M.nnN[M.border++];
    };

    function vWMMv(M) {
        if (M.border < M.size)
            return M.nnN[M.border++];
        return -1;
    };

    function nwnNm(M, WMwNN) {
        M.border--;
        var NNMwv = M.nnN[M.border];
        M.nnN[M.border] = M.nnN[WMwNN];
        M.nnN[WMwNN] = NNMwv;
    };

    function nwVwv(M, WMWmm) {
        M.border--;
        var NNMwv = M.nnN[M.border];
        var wMmvn = M.vNnVw[WMWmm];
        M.nnN[M.border] = WMWmm;
        M.nnN[wMmvn] = NNMwv;
        M.vNnVw[NNMwv] = wMmvn;
        M.vNnVw[WMWmm] = M.border;
    };

    function VNWvV(wMv) {
        this.size = wMv;
        this.border = 0;
        this.nnN = [];
        this.vNnVw = [];
        for (var i = 0; i < wMv; i++) {
            this.nnN[i] = i;
            this.vNnVw[i] = i;
        }
    };

    function WnVvN(wMv) {
        var vWM = new VNWvV(wMv);
        var nnN = vWM.nnN;
        var VnMNn = new window.Array(wMv);
        this.length = 0;
        this.reset = function vision() {
            vWM.border = 0;
            this.length = 0;
        };
        this.add = function vmMVw(vMV) {
            VnMNn[MMvvm(vWM)] = vMV;
            this.length++;
        };
        this.remove = function NMM(vMV) {
            for (var i = 0; i < this.length; i++) {
                if (VnMNn[nnN[i]] === vMV) {
                    nwnNm(vWM, i);
                    this.length--;
                    return;
                }
            }
        };
        this.get = function wWm(i) {
            return VnMNn[nnN[i]];
        };
    };

    function wVmWW(wMv) {
        var vWM = new VNWvV(wMv);
        var nnN = vWM.nnN;
        var VnMNn = new window.Array(wMv);
        var i = 0;
        var wnVvv = [];
        for (i = 0; i < wMv; i++)
            wnVvv[i] = -1;
        this.length = 0;
        this.reset = function vision() {
            vWM.border = 0;
            this.length = 0;
        };
        this.add = function vmMVw(vMV) {
            var mv = MMvvm(vWM);
            VnMNn[mv] = vMV;
            wnVvv[vMV] = vWM.border - 1;
            this.length++;
        };
        this.remove = function NMM(vMV) {
            var mv = wnVvv[vMV];
            if (mv === -1)
                return;
            wnVvv[vMV] = -1;
            nwnNm(vWM, mv);
            this.length--;
            if (this.length > 0)
                wnVvv[VnMNn[nnN[mv]]] = mv;
        };
        this.get = function wWm(i) {
            return VnMNn[nnN[i]];
        };
    };
    return {
        VNWvV: VNWvV,
        wVmWW: wVmWW,
        WnVvN: WnVvN,
        vWMMv: vWMMv,
        MMvvm: MMvvm,
        nwVwv: nwVwv,
        nwnNm: nwnNm
    };
})();
var NnnMN = (function() {
    function wMWWW(WVWWv) {
        var nMNwv = 2147483648;
        var WVm = 1103515245;
        var WNn = 12345;
        var Mnn = WVWWv ? WVWWv : window.Math.floor(window.Math.random() * (nMNwv - 1));
        this.init = function(WVWWv) {
            Mnn = WVWWv ? WVWWv : window.Math.floor(window.Math.random() * (nMNwv - 1));
        };
        this.get = function() {
            Mnn = ((WVm * Mnn) + WNn) % nMNwv;
            return Mnn / nMNwv;
        };
    };
    return {
        wMWWW: wMWWW
    };
})();
var nVvwv = (function() {
    function MvWmM(WwN, NvNNM, vVmmm, MMM, VWmWN) {
        var WnWnN = MMM;
        var nmnVv = WwN[vVmmm];
        var wWNMV = WwN[vVmmm];
        WwN[vVmmm] = WwN[VWmWN];
        WwN[VWmWN] = wWNMV;
        for (var VwvNN = MMM; VwvNN < VWmWN; VwvNN++) {
            if (NvNNM(WwN[VwvNN], nmnVv) <= 0) {
                var wWNMV = WwN[VwvNN];
                WwN[VwvNN] = WwN[WnWnN];
                WwN[WnWnN] = wWNMV;
                WnWnN++;
            }
        }
        var wWNMV = WwN[VWmWN];
        WwN[VWmWN] = WwN[WnWnN];
        WwN[WnWnN] = wWNMV;
        return WnWnN;
    };

    function nMNWM(WwN, NvNNM, MMM, VWmWN) {
        var vVmmm = 0;
        if (MMM < VWmWN) {
            vVmmm = MMM + window.Math.ceil((VWmWN - MMM) * 0.5);
            NMmnN = MvWmM(WwN, NvNNM, vVmmm, MMM, VWmWN);
            nMNWM(WwN, NvNNM, MMM, NMmnN - 1);
            nMNWM(WwN, NvNNM, NMmnN + 1, VWmWN);
        }
    };

    function MvvmM(WwN, NvNNM) {
        try {
            nMNWM(WwN, NvNNM, 0, WwN.length - 1);
        } catch (error) {
            WwN.sort(NvNNM);
        }
    };
    return {
        sort: MvvmM
    };
})();
var vnwMV = (function() {
    var NMW = 0;
    var languages = {
        eng: [NMW++, "en"],
        rus: [NMW++, "ru"],
        spa: [NMW++, "sp"],
        fra: [NMW++, "fr"],
        deu: [NMW++, "de"],
        ita: [NMW++, "it"],
        pol: [NMW++, "pl"],
        pt: [NMW++, "pt"]
    };
    var NNW = languages.eng;
    var VNWww = NNW[0];
    var VmvWv = [];
    for (var i = 0; i < NMW; i++)
        VmvWv[i] = [];
    var NWNnM = languages.eng;

    function nMmMN(wnWwm) {
        NNW = wnWwm;
        vnwMV.lang = NNW;
        VNWww = NNW[0];
        localStorage.setItem("lang", window.JSON.stringify(NNW));
    };

    function wWm(Wn) {
        if ((VmvWv[VNWww] === window.undefined) || (VmvWv[VNWww][Wn] === window.undefined))
            return VmvWv[NWNnM[0]][Wn];
        else
            return VmvWv[VNWww][Wn];
    };

    function VnvmM(Wn) {
        var NvV;
        if ((VmvWv[VNWww] === window.undefined) || (VmvWv[VNWww][Wn] === window.undefined))
            wmwww = VmvWv[NWNnM][Wn];
        else
            wmwww = VmvWv[VNWww][Wn];
        for (var i = 1; i < arguments.length; i++)
            wmwww[0] = wmwww[0].replace("%d", arguments[i]);
        return wmwww;
    };

    function NvMWn(vNvWn) {
        for (var i = 0; i < vNvWn.length; i++)
            VmvWv[VNWww][i] = [vNvWn[i]];
    };

    function MNVVN(wnWwm, callback) {
        nMmMN(wnWwm);
        if (VmvWv[wnWwm[0]].length !== 0) {
            if (callback !== window.undefined)
                callback();
            return;
        }
        var xObj = new window.XMLHttpRequest;
        xObj.open("GET", ("json/lang" + wnWwm[1]) + ".json", true);
        xObj.onreadystatechange = function() {
            if ((xObj.readyState === 4) && (this.status === 200)) {
                NvMWn(window.JSON.parse(this.NWMnMvN));
                if (callback !== window.undefined)
                    callback();
            }
        };
        xObj.send();
    };

    function init(vNvWn, nVnNv, callback) {
        if (nVnNv !== window.undefined)
            NWNnM = nVnNv;
        if (vNvWn !== window.undefined) {
            var mWN = VNWww;
            VNWww = NWNnM[0];
            NvMWn(vNvWn);
            VNWww = mWN;
        }
        var WVNNM = localStorage.getItem("lang");
        if (WVNNM === null) {
            var vnmnw = window.navigator.language || window.navigator.userLanguage;
            switch (vnmnw) {
                case "ru":
                    NNW = languages.rus;
                    break;
                case "en":
                    NNW = languages.eng;
                    break;
                case "es":
                    NNW = languages.spa;
                    break;
                case "fr":
                    NNW = languages.fra;
                    break;
                case "it":
                    NNW = languages.ita;
                    break;
                case "pl":
                    NNW = languages.pol;
                    break;
                case "de":
                    NNW = languages.deu;
                    break;
                case "pt":
                    NNW = languages.pt;
                    break;
            }
        } else
            NNW = window.JSON.parse(WVNNM);
        MNVVN(NNW, callback);
    };
    return {
        languages: languages,
        lang: NNW,
        get: wWm,
        VnvmM: VnvmM,
        init: init,
        MNVVN: MNVVN
    };
})();
var keys = (function() {
    var VVvvM = "0";
    var WWWNw = "1";
    var mwN = 0;
    var mvNNW = 1;
    var key_a = 65;
    var key_d = 68;
    var key_w = 87;
    var key_s = 83;
    var numpad4 = 37;
    var numpad6 = 39;
    var numpad8 = 38;
    var numpad2 = 40;
    var keyshift = 16;
    var VNW = (new window.Array(255)).fill(mwN);
    var MVvNV = null;

    function VmMnn() {
        if (MVvNV === WWWNw)
            return 1;
        else
            return 0;
    };

    function WwmNV() {
        if (MVvNV === VVvvM)
            return 1;
        else
            return 0;
    };

    function azer() {
        key_a = 81;
        key_d = 68;
        key_w = 90;
        key_s = 83;
        localStorage.setItem("keyboardMap", WWWNw);
        MVvNV = WWWNw;
    };

    function wasd() {
        key_a = 65;
        key_d = 68;
        key_w = 87;
        key_s = 83;
        localStorage.setItem("keyboardMap", VVvvM);
        MVvNV = VVvvM;
    };

    function WvMvV(event) {
        var nMm = window.Math.min(event.charCode || event.keyCode, 255);
        VNW[nMm] = mwN;
    };

    function mwMVV(event) {
        var nMm = window.Math.min(event.charCode || event.keyCode, 255);
        if ((nMm === key_a) || (nMm === numpad4))
            NnvmV();
        else if ((nMm === key_w) || (nMm === numpad8))
            WNwVV();
        else if ((nMm === key_s) || (nMm === numpad2))
            MWnmw();
        else if ((nMm === key_d) || (nMm === numpad6))
            mWnvN();
        VNW[nMm] = mvNNW;
        return nMm;
    };

    function NnvmV() {
        VNW[key_d] = mwN;
        VNW[numpad6] = mwN;
    };

    function mWnvN() {
        VNW[key_a] = mwN;
        VNW[numpad4] = mwN;
    };

    function MWnmw() {
        VNW[key_w] = mwN;
        VNW[numpad8] = mwN;
    };

    function WNwVV() {
        VNW[key_s] = mwN;
        VNW[numpad2] = mwN;
    };

    function leftgo() {
        return VNW[key_a] || VNW[numpad4];
    };

    function rightgo() {
        return VNW[key_d] || VNW[numpad6];
    };

    function downgo() {
        return VNW[key_s] || VNW[numpad2];
    };

    function straightgo() {
        return VNW[key_w] || VNW[numpad8];
    };

    function shiftgo() {
        return VNW[keyshift];
    };

    function nwNNv(WmVNW) {
        return VNW[WmVNW];
    };

    function WwnNN() {
        VNW[key_d] = mwN;
        VNW[numpad6] = mwN;
        VNW[key_a] = mwN;
        VNW[numpad4] = mwN;
        VNW[key_w] = mwN;
        VNW[numpad8] = mwN;
        VNW[key_s] = mwN;
        VNW[numpad2] = mwN;
    };

    function VmwWV() {
        this.keyCode = 0;
        this.charCode = 0;
        this.altKey = false;
        this.ctrlKey = false;
        this.preventDefault = function() {};
    };
    MVvNV = localStorage.getItem("keyboardMap");
    if (MVvNV === null) {
        var nVmWN = window.navigator.language || window.navigator.userLanguage;
        if ((nVmWN === "fr") || (nVmWN === "fr-FR"))
            azer();
        else
            wasd();
    } else if (MVvNV === WWWNw)
        azer();
    else
        wasd();
    return {
        azer: azer,
        wasd: wasd,
        WvMvV: WvMvV,
        mwMVV: mwMVV,
        WwnNN: WwnNN,
        leftgo: leftgo,
        rightgo: rightgo,
        downgo: downgo,
        straightgo: straightgo,
        VmMnn: VmMnn,
        WwmNV: WwmNV,
        shiftgo: shiftgo,
        nwNNv: nwNNv,
        VmwWV: VmwWV
    };
})();
var audio = (function() {
    var WMNnN = 30000;
    var nnnMV = 300;
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    var NVNWw = new window.AudioContext;
    if (!NVNWw.createGain)
        NVNWw.createGain = NVNWw.vVWMM;
    VvNWN = null;
    WVVnV = null;
    mvWnN = [];
    MmVnn = null;
    NnwNv = null;

    function nmwNW() {
        return MmVnn;
    };

    function nnnww() {
        VvNWN = NVNWw.createMediaStreamDestination();
        WVVnV = new window.MediaRecorder(VvNWN.stream);
        WVVnV.ondataavailable = function(event) {
            mvWnN.push(event.data);
        };
        WVVnV.onstop = function(event) {
            var VwNMM = window.JSON.parse('{ "type" : "audio/ogg; codecs=opus" }');
            NnwNv = new window.Blob(mvWnN, VwNMM);
            MmVnn = window.URL.createObjectURL(NnwNv);
        };
    };

    function nVvwn() {
        NnwNv = null;
        MmVnn = null;
        mvWnN = [];
        WVVnV.start();
    };

    function mvnWw() {
        WVVnV.stop();
    };
    var winsetting = {
        VWVWW: 1,
        nNmMV: 1
    };
    try {
        var vW = localStorage.getItem("isFx");
        if (vW !== null)
            winsetting.VWVWW = window.Number(vW);
        else if (mobile === 1)
            winsetting.VWVWW = 0;
        vW = localStorage.getItem("isAudio");
        if (vW !== null)
            winsetting.nNmMV = window.Number(vW);
        else if (mobile === 1)
            winsetting.nNmMV = 0;
    } catch (error) {
        if (mobile === 1) {
            winsetting.VWVWW = 0;
            winsetting.nNmMV = 0;
        }
    }

    function Vnwmn(vW) {
        if ((vW === 0) && (winsetting.nNmMV !== vW)) {
            for (var mmnNv in audio.wMm) {
                var wMm = audio.wMm[mmnNv];
                vWwvv(wMm);
            }
        }
        winsetting.nNmMV = vW;
        localStorage.setItem("isAudio", "" + vW);
    };

    function wNnMM(vW) {
        if ((vW === 0) && (winsetting.VWVWW !== vW)) {
            for (var Nnnmm in audio.ww) {
                var ww = audio.ww[Nnnmm];
                vWwvv(ww);
            }
        }
        winsetting.VWVWW = vW;
        localStorage.setItem("isFx", "" + vW);
    };

    function VnV(ww, VwV, mappos, NwnmN) {
        if (mappos > nnnMV)
            return;
        VwV = (1 - (mappos / nnnMV)) * VwV;
        ww.volume = VwV;
        MMwVn(ww, 0, NwnmN);
        ww.run = 0;
    };

    function mmn(mMm, VwV, nMnwM, ww) {
        this.url = mMm;
        this.buffer = null;
        this.source = null;
        this.m = 0;
        this.run = 0;
        this.mwnnM = null;
        this.loop = nMnwM;
        this.volume = 1;
        this.wNvnw = -1;
        if (VwV !== window.undefined)
            this.volume = VwV;
        this.vVNVm = -1;
        this.ww = 0;
        if (ww === 1)
            this.ww = 1;
        this.Nvmvn = 0;
        this.wNnwn = 0;
        this.MNnVm = 0;
        this.start = 0;
        this.nvnWn = 0;
    };

    function WWVVN(Nww, vW) {
        Nww.mwnnM.gain.value = vW;
        Nww.volume = vW;
    };

    function vWwvv(Nww) {
        if (Nww.run === 1) {
            Nww.run = 0;
            Nww.wNvnw = -1;
            Nww.source.stop();
            window.console.log("Stop", Nww.url);
        }
    };

    function MmwVw(Nww, nnW, WMw) {
        if (Nww.vVNVm !== -1)
            Nww.volume = Nww.vVNVm;
        Nww.Nvmvn = 0;
        Nww.wNnwn = nnW;
        Nww.MNnVm = WMw;
        window.console.log("FADE", Nww.url);
    };

    function MMwVn(Nww, nnW, NwnmN) {
        if (Nww.ww === 0) {
            if (winsetting.nNmMV === 0)
                return;
        } else if (winsetting.VWVWW === 0)
            return;
        if (Nww.run === 1) {
            if (((Nww.wNvnw !== -1) && (Nww.wNnwn === 0)) && ((VmN - Nww.wNvnw) > WMNnN)) {
                vWwvv(Nww);
                return;
            }
            if (Nww.wNnwn > 0) {
                Nww.Nvmvn = window.Math.min(Nww.Nvmvn + delta, Nww.wNnwn);
                var VwV = window.Math.max(0, window.Math.min(1, Nww.volume + (window.Math.cos(((1 - (Nww.Nvmvn / Nww.wNnwn)) * 0.5) * window.Math.PI) * Nww.MNnVm)));
                Nww.mwnnM.gain.value = VwV;
                Nww.vVNVm = VwV;
                if (Nww.Nvmvn === Nww.wNnwn) {
                    Nww.volume = VwV;
                    Nww.vVNVm = -1;
                    Nww.wNnwn = 0;
                    Nww.Nvmvn = 0;
                    if (Nww.volume === 0)
                        Nww.wNvnw = VmN;
                    else
                        Nww.wNvnw = -1;
                }
            }
            return;
        }
        if (((Nww.wNnwn === 0) && (Nww.Nvmvn === 0)) && (Nww.volume === 0))
            return;
        if (Nww.m !== 1) {
            vmv(Nww);
            return;
        }
        var WNm = NVNWw.createBufferSource();
        var mwnnM = NVNWw.createGain();
        Nww.source = WNm;
        Nww.mwnnM = mwnnM;
        WWVVN(Nww, Nww.volume);
        WNm.buffer = Nww.buffer;
        WNm.connect(mwnnM);
        if (VvNWN !== null)
            WNm.connect(VvNWN);
        mwnnM.connect(NVNWw.destination);
        if (Nww.loop === true)
            WNm.loop = Nww.loop;
        if (!WNm.stop)
            WNm.stop = WNm.vwwnN;
        if (!WNm.start)
            WNm.start = WNm.vWwMw;
        Nww.source.start(((NwnmN === window.undefined) ? 0 : NwnmN) + NVNWw.currentTime, (nnW === window.undefined) ? 0 : nnW);
        Nww.run = 1;
        Nww.start = VmN;
        window.console.log("Start", Nww.url, Nww.Nvmvn, Nww.wNnwn, nnW);
    };

    function vmv(Nww) {
        if (Nww.m === 2)
            return;
        window.console.log("LOAD", Nww);
        var VNvNM = new window.XMLHttpRequest;
        VNvNM.open('GET', Nww.url, true);
        VNvNM.responseType = 'arraybuffer';
        VNvNM.onload = function() {
            NVNWw.decodeAudioData(VNvNM.response, function(WNNNm) {
                Nww.buffer = WNNNm;
                Nww.m = 1;
                Nww.nvnWn = WNNNm.duration * 1000;
            });
        };
        Nww.m = 2;
        VNvNM.send();
        return;
    };
    return {
        mmn: mmn,
        vmv: vmv,
        MMwVn: MMwVn,
        VnV: VnV,
        vWwvv: vWwvv,
        MmwVw: MmwVw,
        WWVVN: WWVVN,
        options: winsetting,
        Vnwmn: Vnwmn,
        wNnMM: wNnMM,
        nnnww: nnnww,
        nVvwn: nVvwn,
        mvnWw: mvnWw,
        nmwNW: nmwNW,
        wMm: {},
        ww: {}
    };
})();
var Loader = (function() {
    var mwnMm;

    function init() {
        mwnMm = vM.mVV(423, 276, "img/loading1.png");
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 800;
    var WWN = 0;
    var VNvnM = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.NVvWw, 0.05);
    };
    var Nmv = 800;
    var mwm = 0;
    var WVWWm = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.VnvVv, 0.05);
    };
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        CanvasUtils.MNwmM(Loader);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
    };

    function quit(wMN) {
        MVv = wMN;
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1)
                MNw = 0;
            if (WWN === 1)
                vnw *= -1;
            else
                vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        mwnMm.mv.x = (screencenterX - window.Math.floor(211 * scaleby)) + vMm;
        mwnMm.mv.y = window.Math.max(0, screencenterY - window.Math.floor(138 * scaleby)) + wwv;
    };

    function draw() {
        if (MMVwV() === 0)
            return;
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        mwnMm.draw();
    };

    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                Loader.getURLData = function(Mwv) {
                    WwWVn = window.location.href;
                    Mwv = Mwv.replace(/[\[]/, "\[").replace(/[\]]/, "\]");
                    var mwVmN = ("[\?&]" + Mwv) + "=([^&#]*)";
                    var WVnmn = new window.RegExp(mwVmN);
                    var MwNMw = WVnmn.exec(WwWVn);
                    return (MwNMw === null) ? null : MwNMw[1];
                };

                function vvWNV() {
                    var serverList = Client.serverList;
                    Home.regions = [];
                    Home.privateServer = [];
                    Home.ghoulServer = [];
                    var regions = [];
                    var MNmMv = [];
                    var NnMvV = 0;
                    var NvNnM = '<select id="servers"><option value="auto">Auto Select Server</option>';
                    for (var i = 0; i < serverList.length; i++) {
                        var MNv = serverList[i][4];
                        var playerNumber = serverList[i][5];
                        var ghl = serverList[i][6];
                        NnMvV += playerNumber;

                        if (ghl === ["ghoul"]) {
                            Home.ghoulServer.push(i);
                            continue;
                        }
                        if (ghl === ["br"]) {
                            MNv = MNv.replace("BR", "");
                            if (Home.regions[MNv] === window.undefined)
                                Home.regions[MNv] = [];
                            Home.regions[MNv].push(i);
                            continue;
                        }
                        for (var j = 0; j < regions.length; j++) {
                            if (regions[j] === MNv) {
                                MNmMv[j] += playerNumber;
                                j = -1;
                                break;
                            }
                        }
                        if (j !== -1) {
                            regions.push(MNv);
                            MNmMv.push(playerNumber);
                        }
                    }
                    var MnNwN = 0;
                    var VVmNN = 0;
                    for (i = 0; i < regions.length; i++) {
                        MNv = regions[i];
                        NvNnM += ((("<option disabled>" + regions[i]) + "  - ") + MNmMv[i]) + "  players</option>";
                        MnNwN++;
                        var Wn = 1;
                        for (j = 0; j < serverList.length; j++) {
                            if (serverList[j][4] === MNv && serverList[j][6] === 'survival') {
                                NvNnM += ((((((('<option value="' + serverList[j][0]) + '">') + regions[i]) + " ") + (Wn++)) + "  - ") + serverList[j][5]) + "  players</option>";
                                if (Client.selectedServer === j)
                                    VVmNN = MnNwN;
                                MnNwN++;
                            }
                        }
                    }
                    Home.htmlBattleRoyale = '<select id="servers"><option value="auto">Auto Select Server</option>';
                    for (var i in Home.regions) {
                        var MnNwN = 0;
                        for (var nMm = 0; nMm < Home.regions[i].length; nMm++)
                            MnNwN += serverList[Home.regions[i][nMm]][5];
                        //Home.htmlBattleRoyale += ((((('<option value="' + i) + '">') + i) + "  - ") + MnNwN) + "  players</option>";
                    }
                    Home.privateServer = Home.privateServer.sort(function(WVm, M) {
                        return window.Number(serverList[M][5]) - window.Number(serverList[WVm][5]);
                    });
                    Home.htmlPrivateServer = '<select id="servers"><option value="auto">Auto Select Server</option>';
                    for (var i in Home.privateServer) {
                        Home.htmlPrivateServer += ((((('<option value="' + i) + '">') + serverList[Home.privateServer[i]][4].replace("PRIV", "")) + "  - ") + serverList[Home.privateServer[i]][5]) + "  players</option>";
                    }
                    Home.htmlGhoulServer = '<select id="servers"><option value="auto">Auto Select Server</option>';
                    for (var i in Home.ghoulServer) {
                        Home.htmlGhoulServer += '<option value="' + serverListserverList[Home.ghoulServer[i]][0] + '\x22>' + serverList[Home.ghoulServer[i]][4].replace("GHOUL", "") + '\x20-\x20' + serverList[Home.ghoulServer[i]][5] + "  players</option>";
                    }
                    NvNnM += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                    Home.htmlBattleRoyale += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                    Home.htmlPrivateServer += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                    Home.htmlGhoulServer += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                    window.document.getElementById("serverList").innerHTML = NvNnM;
                    window.document.getElementById("servers").selectedIndex = VVmNN;
                    
                    World.PLAYER.WMnWN = 1; //added just taked from beloved if, whatever xD

                    if (((Loader.getURLData("admin") !== null) || (Loader.getURLData("member") !== null)) || (Loader.getURLData("moderator") !== null)) {
                        if ((Loader.getURLData("admin") !== null) || (Loader.getURLData("moderator") !== null)) {
                            World.PLAYER.WMnWN = 1;
                            window.document.getElementById("chatInput").maxLength = 1000000;
                        }
                        window.document.getElementById("nickname").innerHTML += '<input id="passwordInput" type="password" placeholder="Password" maxLength="16">';
                        var password = localStorage.getItem("password");
                        if (password !== null) window.document.getElementById("passwordInput").value = password;
                    }

                    var port = Loader.getURLData("port");
                    var ip = Loader.getURLData("ips");
                    if (ip !== null) {
                        ip = ip.replace(/\./g, '-');
                        var selectedServer = window.Number(window.document.getElementById("servers").value);
                        Client.serverList[selectedServer][0] = ip;
                        Client.serverList[selectedServer][1] = ip + ".devast.io";
                        Client.serverList[selectedServer][2] = (port === null) ? "443" : port;
                        Client.serverList[selectedServer][3] = 1;
                    }
                    ip = Loader.getURLData("ip");
                    if (ip !== null) {
                        ip = ip.replace(/\./g, '-');
                        var selectedServer = window.Number(window.document.getElementById("servers").value);
                        Client.serverList[selectedServer][0] = ip;
                        Client.serverList[selectedServer][1] = ip;
                        Client.serverList[selectedServer][2] = (port === null) ? "8080" : port;
                        Client.serverList[selectedServer][3] = 0;
                    }
                };
                Client.types = ["BR", "PRIV", "HIDDEN", "ghoul"];
                Client.getServerList(function() {
                    vvWNV();
                    Loader.quit(Home);
                });
                var vvwMM = ENTITIES[__ENTITIE_EXPLOSION__].explosions;
                var NWvwV = ENTITIES2[__ENTITIE_EXPLOSION__].explosions;
                for (var i = 0; i < vvwMM.length; i++) {
                    vvwMM[i].W = CanvasUtils.loadImage(vvwMM[i].src, vvwMM[i].W);
                    NWvwV[i].W = CanvasUtils.loadImage(NWvwV[i].src, NWvwV[i].W);
                }
            }
            MNw -= delta;
        }
        return 1;
    };
    return {
        quit:   quit,
        init:   init,
        run:    run,
        update: update,
        draw:   draw
    };
})();
var Home = (function() {
    function joinServer() {
        try {
            window.document.getElementsByClassName("ympb_target")[0].id;
            window.document.getElementById("trevda").id;
            window.document.getElementById("preroll").id;
        } catch (error) {
            Home.adblocker = 1;
        }
        try {
            if (((World.PLAYER.WMnWN !== 1) && (typeof window["YMPB"] !== 'undefined')) && (typeof window["YMPB"]["preroll"] !== 'undefined')) {
                if (Home.waitAds === 1) return;
                if (Home.ads === 1) {
                    vWn.MWwnM();
                    window.document.getElementById("preroll").style.display = "block";
                    window["YMPB"]["preroll"]('preroll', function() {
                        Home.waitAds = 0;
                        Home.ads = -1;
                        Home.joinServer();
                    });
                    Home.waitAds = 1;
                    return;
                }
            }
        } catch (error) {}
      
        var board;
        if (Home.gameMode === World['__SURVIVAL__'])
            board = 'survival';
        else {
            if (Home.gameMode === World['__GHOUL__'])
                board = 'ghoul';
            else {
                if (Home.gameMode === World['__BR__'])
                    board = 'br';
                else
                    throw new Error('Unknown game mode',Home.gameMode);
            }
        }
        var _lobbys = document.getElementById('servers').value, lobbiesFind, _0x19bb6a;
        _lobbys == 'auto' ? (lobbiesFind = 'https://matchmaker.api.rivet.gg/v1/lobbies/find',
        _0x19bb6a = {
            'game_modes': [board]
        }) : (lobbiesFind = 'https://matchmaker.api.rivet.gg/v1/lobbies/join',
        _0x19bb6a = {
            'lobby_id': _lobbys
        });
        Client['joiningServer'] = !![];
        let _0x521bb0 = {};
        _0x521bb0['Accept'] = 'application/json',
        _0x521bb0['Content-Type'] = 'application/json',
        window['RIVET_TOKEN'] && (_0x521bb0['Authorization'] = 'Bearer' + window['RIVET_TOKEN']),
        fetch(lobbiesFind, {
            'method': 'POST',
            'headers': _0x521bb0,
            'body': JSON.stringify(_0x19bb6a)
        })['then'](_0x4c43da=>{
            if (_0x4c43da['ok'])
                return _0x4c43da.json();
            else
                throw 'Failed to find lobby: ' + _0x4c43da['status'];
        }
        )['then'](_0x275829=>{
            let _0xc7afeb = _0x275829['lobby'];
            Client['selectedServer'] = Client['serverList']['findIndex'](_0x323660=>_0x323660[0x0] == _0xc7afeb['lobby_id']),
            Client['connectedLobby'] = _0xc7afeb,
            Client['startConnection'](document.getElementById('nicknameInput').value, 0, _0xc7afeb['player']['token']);
        }
        )['catch'](_0x3bfe82=>{
            alert('Failed to join server');
        }
        );

    };

    function checkstatenull(Mnn) {};

    function NvwNv() {
        quit(Game);
    };

    function NvN() {
        NvwNv();
    };
    var vmV = 0;

    function nnn(vV, WX, WY, wW, MMWWm, Mmwvn) {
        var MW = Entitie.get(0, vmV, vmV, vV);
        mvMMV(MW, 0, vmV, vmV, vV, WX, WY, WX, WY, (MMWWm << 5) + (Mmwvn << 10), wW, 1);
        vmV++;
    };

    function Vnvmv(vV, WX, WY, Rot, Mnn, nvN) {
        var MW = Entitie.get(0, vmV, vmV, vV);
        mvMMV(MW, 0, vmV, vmV, vV, WX, WY, WX, WY, (nvN << 7) + (Rot << 5), 0, Mnn);
        vmV++;
    };
    var NNN = 0;
    var mNMWw = {
        vNWVw: [{
            Mwv: 'Yuukun',
            button: ["img/yuukun0out.png", "img/yuukun0in.png", "img/yuukun0click.png"],
            WwWVn: "https://www.youtube.com/watch?v=TyI_8Il64d8"
        }, {
            Mwv: 'eXistenZ',
            button: ["img/existenz5out.png", "img/existenz5in.png", "img/existenz5click.png"],
            WwWVn: "https://www.youtube.com/watch?v=Seq6QGBTvNQ"
        }, {
            Mwv: 'Bubble Gum',
            button: ["img/bubblegum2out.png", "img/bubblegum2in.png", "img/bubblegum2click.png"],
            WwWVn: "https://youtu.be/fD7lx9zAQGU"
        }],
        NnVWM: [{
            Mwv: 'Devaster',
            button: ["img/devaster0out.png", "img/devaster0in.png", "img/devaster0click.png"],
            WwWVn: "https://www.youtube.com/watch?v=Jpgx-d3qHzs"
        }]
    };
    var WVwwn = mNMWw.vNWVw;
    var vnmnw = window.navigator.language || window.navigator.userLanguage;
    if (vnmnw.toLowerCase().indexOf("fr") !== -1) WVwwn = mNMWw.NnVWM;
    var WWNWM = WVwwn[window.Math.floor(WVwwn.length * window.Math.random())];
    var mnMMV = [vM.showtxt(WWNWM.Mwv, "'Viga', sans-serif", "#FFFFFF", 30, 150), vM.showtxt(WWNWM.Mwv, "'Viga', sans-serif", "#C5B03C", 30, 150), vM.showtxt(WWNWM.Mwv, "'Viga', sans-serif", "#9B800D", 30, 150)];
    mnMMV[0].m = 1;
    mnMMV[1].m = 1;
    mnMMV[2].m = 1;
    var wMMNm = vM.vMM(mnMMV[0].Wvw, mnMMV[0].mNm, window.undefined, mnMMV);
    var wvmwM = vM.vMM(120, 67, WWNWM.button);
    var WnwMN = {
        W: null
    };
    var VmV;
    var mVwVw;
    var nick;
    var vWmNN;
    var VWvmM;
    var playbutt;
    var NnnVw;
    var Wvwwv;
    var VMmWW;
    var serverList;
    var vnmmN;
    var wwMMw;
    var mwvwV;
    var NNnwN;
    var VNVnM;
    var nmnWW;
    var mmvWv;
    var mwnnv;
    var wnwvW;
    var MMNMM;
    var WWNNV;
    var NVn;
    var VNWMN;
    var VnmWw;
    var nMNNN;
    var vVNnM;
    var NvW;
    var VmwMm;
    var vvWWW;
    var wnm;
    var VMm;
    var WMmmM;
    var nvWwv;
    var WwWvv;
    var wvmmM;
    var mNVWV;
    var VMmWN;
    var vnvmm;
    var wWWwm;
    var privateServer;
    var vvmMm;
    var wMNWw;
    var MVwVM;
    var vWNNw;
    var VvVMm;
    var VwWMv;
    var vmWmN;

    function init() {
        Home.joinServer = joinServer;
        Home.ads = 1;
        Home.waitAds = 0;
        /*var WvMwn = new window.XMLHttpRequest;
        WvMwn.onreadystatechange = function() {
            if ((this.readyState === 4) && (this.status === 0)) {
                Home.adblocker = 1;
                window.document.getElementById("trevda").innerHTML = '<img src="./img/disable-to-get-bonus.png"></img>';
            }
        };
        WvMwn.open("GET", "https://api.adinplay.com/libs/aiptag/assets/adsbygoogle.js", true);
        WvMwn.send();
        */
        if (window.String(window.document.createElement).indexOf("createElement") === -1) Home.adblocker = 1;
        Home.gameMode = 0;
        Home.NMMwM = 1;
        Home.MWMMv = 0;
        Home.VNVVN = 0;
        window.document.getElementById("nicknameInput").value = localStorage.getItem("nickname", nick);
        audio.MmwVw(audio.wMm.title, 1000, vWn.mvVWW);
        Entitie.NWnwm();
        Render.reset(1);
        vmV = 0;

        nnn(mWmnn, 200, 0, 127, object.stone, 3);
        nnn(MmvmN, 400, 100, 127, object.orangebush, 2);
        nnn(MVm, 100, 100, 127, object.tree, 0);
        Vnvmv(MNvmw, 900, 500, 0, 33, item.smelter);
        Vnvmv(wNnwm, 800, 400, 1, 1, item.workbench);
        nnn(MVm, 1100, 300, 10, object.tree, 1);
        nnn(MVm, 800, 200, 127, object.tree, 2);
        nnn(MVm, 700, 100, 127, object.tree, 3);
        nnn(MVm, 1200, 0, 127, object.tree, 0);
        nnn(MVm, 1300, 100, 127, object.tree, 4);
        nnn(MVm, 1300, 300, 127, object.tree, 2);
        nnn(MVm, 800, 500, 127, object.tree, 4);
        nnn(MmvmN, 1000, 200, 127, object.orangebush, 0);
        nnn(MVm, 700, 600, 127, object.tree, 0);
        nnn(MVm, 500, 400, 127, object.tree, 2);
        nnn(mWmnn, 500, 700, 127, object.stone, 3);
        nnn(mWmnn, 1000, 300, 127, object.stone, 4);
        nnn(MVm, 1300, 500, 100, object.tree, 2);
        nnn(MVm, 1200, 700, 127, object.tree, 4);
        nnn(MVm, 1300, 700, 127, object.tree, 0);
        nnn(mWmnn, 800, 600, 127, object.stone, 5);
        nnn(MVm, 500, 600, 127, object.tree, 4);
        nnn(mWmnn, 200, 400, 127, object.uranium, 0);
        nnn(mWmnn, 400, 500, 50, object.branchtree, 3);
        nnn(MVm, 100, 400, 190, object.tree, 2);
        nnn(MVm, 100, 500, 190, object.tree, 3);
        nnn(MVm, 100, 600, 127, object.tree, 4);
        nnn(MVm, 0, 500, 127, object.tree, 1);
        nnn(MVm, 200, 300, 50, object.tree, 4);
        nnn(MVm, 400, 200, 10, object.tree, 2);
        nnn(MVm, 500, 200, 10, object.tree, 1);
        nnn(MVm, 100, 800, 10, object.tree, 0);
        nnn(MVm, 400, 800, 10, object.tree, 1);
        nnn(MVm, 700, 800, 10, object.tree, 2);
        nnn(mWmnn, 900, 700, 50, object.branchtree, 4);


        if (mobile === 1) VmV = vM.mVV(650, 312, "img/logo-homepage-mobile2.png");
        else VmV = vM.mVV(650, 312, "img/logo-homepage4.png");
        if (mobile === 1) mVwVw = vM.vMM(0, 0);
        else mVwVw = vM.vMM(94, 40, ["img/more-io-games-out.png", "img/more-io-games-in.png", "img/more-io-games-click.png"]);
        nick = window.document.getElementById("nickname");
        vWmNN = nick.style;
        VWvmM = {
            x: 0,
            y: 0
        };
        nick.addEventListener("keyup", function(event) {
            if ((WWN | mwm) === 1) return;
            if (event.keyCode === 13) joinServer();
        }, false);

        playbutt = vM.vMM(136, 57, ["img/play-button-out.png", "img/play-button-in.png", "img/play-button-click.png"]);

        NnnVw = window.document.getElementById("terms");
        Wvwwv = NnnVw.style;
        VMmWW = {
            x: 0,
            y: 0
        };
        serverList = window.document.getElementById("serverList");
        vnmmN = serverList.style;
        wwMMw = {
            x: 0,
            y: 0
        };
        serverList.addEventListener("mouseover", function(event) {
            if ((WWN | mwm) === 1) return;
        }, false);
        serverList.addEventListener("mousedown", function(event) {
            if ((WWN | mwm) === 1) return;
        }, false);
        serverList.addEventListener("mouseup", function(event) {
            if ((WWN | mwm) === 1) return;
        }, false);
        if (mobile === 1) mwvwV = vM.mVV(0, 0);
        else mwvwV = vM.mVV(230, 235, "img/changelogBox.png");
        NNnwN = window.document.getElementById("changelog");
        VNVnM = NNnwN.style;
        nmnWW = {
            x: 0,
            y: 0
        };
        if (mobile === 1) mmvWv = vM.mVV(0, 0);
        else mmvWv = vM.mVV(230, 355, "img/commandsBox.png");
        mwnnv = window.document.getElementById("howtoplay");
        wnwvW = mwnnv.style;
        MMNMM = {
            x: 0,
            y: 0
        };
        if (mobile === 1) WWNNV = vM.mVV(0, 0);
        else WWNNV = vM.mVV(123, 55, "img/ameMade.png");
        if (mobile === 1) NVn = vM.vMM(0, 0);
        else NVn = vM.vMM(40, 38, ["img/twitter-button-out.png", "img/twitter-button-in.png", "img/twitter-button-click.png"]);
        if (mobile === 1) VNWMN = vM.vMM(0, 0);
        else VNWMN = vM.vMM(40, 38, ["img/facebook-button-out.png", "img/facebook-button-in.png", "img/facebook-button-click.png"]);
        if (mobile === 1) VnmWw = vM.vMM(0, 0);
        else VnmWw = vM.vMM(40, 38, ["img/youtube-button-out.png", "img/youtube-button-in.png", "img/youtube-button-click.png"]);
        if (mobile === 1) nMNNN = vM.vMM(0, 0);
        else nMNNN = vM.vMM(54, 54, ["img/home-reddit-button-out.png", "img/home-reddit-button-in.png", "img/home-reddit-button-click.png"]);
        if (mobile === 1) vVNnM = vM.vMM(0, 0);
        else vVNnM = vM.vMM(54, 54, ["img/home-discord-button-out.png", "img/home-discord-button-in.png", "img/home-discord-button-click.png"]);
        NvW = vM.vMM(93, 51, ["img/survivalmode-button-out.png", "img/survivalmode-button-in.png", "img/survivalmode-button-click.png"]);
        VmwMm = vM.vMM(93, 51, ["img/battle-royale-button-out.png", "img/battle-royale-button-in.png", "img/battle-royale-button-click.png"]);
        vvWWW = vM.vMM(93, 51, ["img/ghoul-mode-button-out.png", "img/ghoul-mode-button-in.png", "img/ghoul-mode-button-click.png"]);
        wnm = vM.vMM(68, 34, ["img/private-server-button-out.png", "img/private-server-button-in.png", "img/private-server-button-click.png"]);
        VMm = vM.vMM(68, 34, ["img/public-server-button-out.png", "img/public-server-button-in.png", "img/public-server-button-click.png"]);
        if (mobile === 1) WMmmM = vM.mVV(0, 0);
        else WMmmM = vM.mVV(171, 432, "img/featured.png");
        if (mobile === 1) nvWwv = vM.vMM(0, 0);
        else nvWwv = vM.vMM(60, 60, ["img/home-limaxio-out.png", "img/home-limaxio-in.png", "img/home-limaxio-click.png"]);
        if (mobile === 1) WwWvv = vM.vMM(0, 0);
        else WwWvv = vM.vMM(60, 60, ["img/home-oibio-out.png", "img/home-oibio-in.png", "img/home-oibio-click.png"]);
        if (mobile === 1) wvmmM = vM.vMM(0, 0);
        else wvmmM = vM.vMM(60, 60, ["img/home-starveio-out.png", "img/home-starveio-in.png", "img/home-starveio-click.png"]);
        if (mobile === 1) mNVWV = vM.vMM(0, 0);
        else mNVWV = vM.vMM(60, 60, ["img/home-nendio-out.png", "img/home-nendio-in.png", "img/home-nendio-click.png"]);
        VMmWN = window.document.getElementById("featuredVideo");
        vnvmm = VMmWN.style;
        wWWwm = {
            x: 0,
            y: 0
        };
        if (mobile === 1) privateServer = vM.vMM(0, 0);
        else privateServer = vM.vMM(86, 48, ["img/privateserver-button-out.png", "img/privateserver-button-in.png", "img/privateserver-button-click.png"]);
        if (mobile === 1) vvmMm = vM.vMM(0, 0);
        else vvmMm = vM.vMM(52, 42, ["img/map-editor-button-out.png", "img/map-editor-button-in.png", "img/map-editor-button-click.png"]);
        wMNWw = window.document.getElementById("trevda");
        MVwVM = wMNWw.style;
        vWNNw = {
            x: 0,
            y: 0
        };
        VvVMm = window.document.getElementById("preroll");
        VwWMv = VvVMm.style;
        vmWmN = {
            x: 0,
            y: 0
        };
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 800;
    var WWN = 0;
    var VNvnM = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.NVvWw, 0.05);
    };
    var Nmv = 2000;
    var mwm = 0;
    var WVWWm = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.VnvVv, 0.05);
    };
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        Client.checkstatenull = checkstatenull;
        Client.NvN = NvN;
        World.PLAYER.wvM = 0;
        World.PLAYER.id = 0;
        Render.vVwvn(0);
        Render.NvwNm();
        if (Home.gameMode === 1) {
            VMm.vnN();
            wnm.vnN();
        }
        Home.MVwVM = MVwVM;
        if (mobile === 1) {
            wMMNm.vnN();
            wvmwM.vnN();
            vvmMm.vnN();
        }
        CanvasUtils.MNwmM(Home);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
        vWmNN.display = "inline-block";
        if (mobile === 0) Wvwwv.display = "inline-block";
        vnmmN.display = "inline-block";
        if (mobile === 0) VNVnM.display = "inline-block";
        if (mobile === 0) wnwvW.display = "inline-block";
        if (mobile === 0) vnvmm.display = "inline-block";
    };

    function quit(wMN) {
        MVv = wMN;
        VVwMW();
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1) MNw = 0;
            if (mwm === 1) vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        VmV.mv.x = ((screencenterX - window.Math.floor(325 * scaleby)) + window.Math.floor(((mobile === 0) ? -30 : -70) * scaleby)) - vMm;
        VmV.mv.y = window.Math.max(0, (screencenterY - window.Math.floor(156 * scaleby)) + window.Math.floor(((mobile === 0) ? -150 : -150) * scaleby)) - wwv;
        mVwVw.mv.x = window.Math.floor(5 * scaleby) + vMm;
        mVwVw.mv.y = ((screenHeight - window.Math.floor(40 * scaleby)) + window.Math.floor(-5 * scaleby)) + wwv;
        VWvmM.x = ((screencenterX - window.Math.floor(91 * scaleby)) + window.Math.floor(((mobile === 0) ? -6.8 : -47.5) * scaleby)) - vMm;
        vWmNN.left = VWvmM.x + "px";
        VWvmM.y = VmV.mv.y + window.Math.floor(143 * scaleby);
        vWmNN.top = VWvmM.y + "px";
        playbutt.mv.x = VmV.mv.x + window.Math.floor(290 * scaleby);
        playbutt.mv.y = VmV.mv.y + window.Math.floor(235 * scaleby);
        VMmWW.x = (screenWidth - 85) + vMm;
        Wvwwv.left = VMmWW.x + "px";
        VMmWW.y = ((screenHeight - 17) + window.Math.floor(-10 * scaleby)) + wwv;
        Wvwwv.top = VMmWW.y + "px";
        wwMMw.x = ((screencenterX - window.Math.floor(100 * scaleby)) + window.Math.floor(((mobile === 0) ? 12.8 : -26.5) * scaleby)) - vMm;
        vnmmN.left = wwMMw.x + "px";
        wwMMw.y = VWvmM.y + window.Math.floor(45 * scaleby);
        vnmmN.top = wwMMw.y + "px";
        mwvwV.mv.x = ((screenWidth - window.Math.floor(230 * scaleby)) + window.Math.floor(7 * scaleby)) - vMm;
        mwvwV.mv.y = -wwv;
        nmnWW.x = ((screenWidth - 200) + window.Math.floor(-10 * scaleby)) - vMm;
        VNVnM.left = nmnWW.x + "px";
        nmnWW.y = window.Math.floor(20 * scaleby) - wwv;
        VNVnM.top = nmnWW.y + "px";
        mmvWv.mv.x = mwvwV.mv.x;
        mmvWv.mv.y = mwvwV.mv.y + window.Math.floor(230 * scaleby);
        MMNMM.x = ((screenWidth - 200) + window.Math.floor(-10 * scaleby)) - vMm;
        wnwvW.left = MMNMM.x + "px";
        MMNMM.y = nmnWW.y + window.Math.floor(215 * scaleby);
        wnwvW.top = MMNMM.y + "px";
        WWNNV.mv.x = window.Math.floor(15 * scaleby) - vMm;
        WWNNV.mv.y = window.Math.floor(5 * scaleby) - wwv;
        NVn.mv.x = WWNNV.mv.x + window.Math.floor(-5 * scaleby);
        NVn.mv.y = WWNNV.mv.y + window.Math.floor(55 * scaleby);
        VNWMN.mv.x = NVn.mv.x + window.Math.floor(45 * scaleby);
        VNWMN.mv.y = NVn.mv.y;
        VnmWw.mv.x = VNWMN.mv.x + window.Math.floor(45 * scaleby);
        VnmWw.mv.y = NVn.mv.y;
        nMNNN.mv.x = VmV.mv.x + window.Math.floor(26 * scaleby);
        nMNNN.mv.y = VmV.mv.y + window.Math.floor(36 * scaleby);
        vVNnM.mv.x = nMNNN.mv.x + window.Math.floor(83.5 * scaleby);
        vVNnM.mv.y = nMNNN.mv.y;
        NvW.mv.x = playbutt.mv.x + window.Math.floor(213 * scaleby);
        NvW.mv.y = playbutt.mv.y + window.Math.floor(-98 * scaleby);
        VmwMm.mv.x = NvW.mv.x;
        VmwMm.mv.y = NvW.mv.y + window.Math.floor(60 * scaleby);
        vvWWW.mv.x = NvW.mv.x;
        vvWWW.mv.y = NvW.mv.y + window.Math.floor(60 * scaleby);
        wnm.mv.x = playbutt.mv.x + window.Math.floor(-126 * scaleby);
        wnm.mv.y = playbutt.mv.y + window.Math.floor(-58 * scaleby);
        VMm.mv.x = wnm.mv.x;
        VMm.mv.y = wnm.mv.y + window.Math.floor(-37 * scaleby);
        WMmmM.mv.x = NVn.mv.x;
        WMmmM.mv.y = NVn.mv.y + window.Math.floor(50 * scaleby);
        nvWwv.mv.x = NVn.mv.x + window.Math.floor(21.5 * scaleby);
        nvWwv.mv.y = NVn.mv.y + window.Math.floor(72 * scaleby);
        WwWvv.mv.x = nvWwv.mv.x;
        WwWvv.mv.y = nvWwv.mv.y + window.Math.floor(70 * scaleby);
        wvmmM.mv.x = WwWvv.mv.x;
        wvmmM.mv.y = WwWvv.mv.y + window.Math.floor(69 * scaleby);
        mNVWV.mv.x = wvmmM.mv.x;
        mNVWV.mv.y = wvmmM.mv.y + window.Math.floor(69 * scaleby);
        wWWwm.x = mNVWV.mv.x + window.Math.floor(15 * scaleby);
        vnvmm.left = wWWwm.x + "px";
        wWWwm.y = mNVWV.mv.y + window.Math.floor(83 * scaleby);
        vnvmm.top = wWWwm.y + "px";
        privateServer.mv.x = VMm.mv.x + window.Math.floor(-120 * scaleby);
        privateServer.mv.y = VMm.mv.y + window.Math.floor(41 * scaleby);
        vvmMm.mv.x = privateServer.mv.x + window.Math.floor(-8.5 * scaleby);
        vvmMm.mv.y = privateServer.mv.y + window.Math.floor(-53 * scaleby);
        vWNNw.x = screencenterX - window.Math.floor(150 * scaleby);
        MVwVM.left = vWNNw.x + "px";
        vWNNw.y = VWvmM.y + window.Math.floor(130 * scaleby);
        MVwVM.top = vWNNw.y + "px";
        var mVvwv = window.Math.min(scaleby, 1);
        var mv = (VWvmM.y + wwv) + (170 * scaleby);
        window.document.getElementById("trevda").style.left = window.Math.floor(screencenterX - (325 * mVvwv)) + "px";
        window.document.getElementById("trevda").style.top = window.Math.floor(mv + (((mVvwv * 250) - 250) / 2)) + "px";
        window.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
        var mwNww = window.document.getElementById("nicknameInput").style;
        var SY = window.Math.floor(220 * scaleby);
        var SX = window.Math.floor(35 * scaleby);
        SX = SX + "px";
        SY = SY + "px";
        vWmNN.width = SY;
        vWmNN.height = SX;
        mwNww["borderWidth"] = window.Math.floor(3 * scaleby) + "px";
        mwNww.width = SY;
        mwNww.height = SX;
        mwNww.fontSize = window.Math.floor(18 * scaleby) + "px";
        if ((Loader.getURLData("ips") !== null) || (Loader.getURLData("ip") !== null)) {
            vnmmN.display = "none";
            NvW.mv.y = -500;
            VmwMm.mv.y = -500;
            vvWWW.mv.y = -500;
            wnm.mv.y = -500;
            VMm.mv.y = -500;
            if (Loader.getURLData("admin") !== null) wMNWw.display = "none";
        }
        if (window.document.getElementById("passwordInput") !== null) {
            var VNNvn = window.document.getElementById("passwordInput").style;
            var SY = window.Math.floor(220 * scaleby);
            var SX = window.Math.floor(35 * scaleby);
            var MMM = window.Math.floor(screencenterX - (SY / 2)) + "px";
            SX = SX + "px";
            SY = SY + "px";
            VNNvn.width = SY;
            VNNvn.height = SX;
            VNNvn.left = MMM;
            VNNvn["borderWidth"] = window.Math.floor(3 * scaleby) + "px";
            VNNvn.width = SY;
            VNNvn.height = SX;
            VNNvn.fontSize = window.Math.floor(18 * scaleby) + "px";
            VNNvn["marginTop"] = window.Math.floor(4 * scaleby) + "px";
        };
        SY = window.Math.floor(200 * scaleby);
        SX = window.Math.floor(28 * scaleby);
        SX = SX + "px";
        SY = SY + "px";
        vnmmN.width = SY;
        vnmmN.height = SX;
        vnmmN["backgroundSize"] = window.Math.floor(17 * scaleby) + "px";
        var nVvNv = window.document.getElementById("servers").style;
        SY = window.Math.floor(230 * scaleby) + "px";
        SX = window.Math.floor(28 * scaleby) + "px";
        nVvNv.width = SY;
        nVvNv.height = SX;
        nVvNv.fontSize = window.Math.floor(13 * scaleby) + "px";
        SY = window.Math.floor(185 * scaleby);
        SX = window.Math.floor(17 * scaleby);
        MMM = window.Math.floor(screenWidth - SY) + "px";
        SX = SX + "px";
        SY = SY + "px";
        nNV = (window.Math.floor(screenHeight - (18 * scaleby)) + wwv) + "px";
        Wvwwv.width = SY;
        Wvwwv.height = SX;
        Wvwwv.left = MMM;
        Wvwwv.top = nNV;
        Wvwwv.fontSize = window.Math.floor(11 * scaleby) + "px";
        SY = window.Math.floor(197 * scaleby);
        SX = window.Math.floor(250 * scaleby);
        MMM = window.Math.floor(screenWidth - (205 * scaleby)) + "px";
        SX = SX + "px";
        SY = SY + "px";
        VNVnM.width = SY;
        VNVnM.height = SX;
        VNVnM.left = MMM;
        VNVnM.fontSize = window.Math.floor(11 * scaleby) + "px";
        VNVnM["borderRadius"] = window.Math.floor(5 * scaleby) + "px";
        VNVnM["paddingTop"] = window.Math.floor(18 * scaleby) + "px";
        var NNVVn = window.document.getElementById("changelogTitle").style;
        SY = window.Math.floor(197 * scaleby) + "px";
        SX = window.Math.floor(23 * scaleby) + "px";
        NNVVn.width = SY;
        NNVVn.height = SX;
        NNVVn.fontSize = window.Math.floor(16 * scaleby) + "px";
        NNVVn["paddingTop"] = window.Math.floor(8 * scaleby) + "px";
        NNVVn["paddingBottom"] = window.Math.floor(0 * scaleby) + "px";
        NNVVn["marginBottom"] = window.Math.floor(-2 * scaleby) + "px";
        NNVVn["marginTop"] = window.Math.floor(-22 * scaleby) + "px";
        NNVVn["borderRadius"] = ((((((window.Math.floor(5 * scaleby) + "px ") + window.Math.floor(5 * scaleby)) + "px ") + window.Math.floor(0 * scaleby)) + "px ") + window.Math.floor(0 * scaleby)) + "px";
        var NMvMW = window.document.getElementById("changelogImg").style;
        SY = window.Math.floor(175 * scaleby) + "px";
        SX = window.Math.floor(80 * scaleby) + "px";
        NMvMW.width = SY;
        NMvMW.height = SX;
        NMvMW.wnwNW = window.Math.floor(10 * scaleby) + "px";
        var nMWvW = window.document.getElementById("changelogText").style;
        nMWvW.fontSize = window.Math.floor(10 * scaleby) + "px";
        nMWvW["padding"] = window.Math.floor(15 * scaleby) + "px";
        nMWvW["paddingTop"] = window.Math.floor(5 * scaleby) + "px";
        SY = window.Math.floor(197 * scaleby);
        SX = window.Math.floor(347 * scaleby);
        MMM = window.Math.floor(screenWidth - (205 * scaleby)) + "px";
        MVvmn = window.Math.floor(screenHeight - (105 * scaleby)) + "px";
        SX = SX + "px";
        SY = SY + "px";
        wnwvW.width = SY;
        wnwvW.height = SX;
        wnwvW.left = MMM;
        wnwvW.bottom = MVvmn;
        wnwvW.fontSize = window.Math.floor(13 * scaleby) + "px";
        wnwvW["marginTop"] = window.Math.floor(0 * scaleby) + "px";
        wnwvW["paddingTop"] = window.Math.floor(18 * scaleby) + "px";
        window.document.getElementById("featuredVideo").style.fontSize = window.Math.floor(13 * scaleby) + "px";
        window.document.getElementById("mainCommands").style["marginTop"] = window.Math.floor(55 * scaleby) + "px";
        window.document.getElementById("secondCommands").style["marginTop"] = window.Math.floor(55 * scaleby) + "px";
        window.document.getElementById("moveCommand").style["paddingLeft"] = window.Math.floor(20 * scaleby) + "px";
        window.document.getElementById("moveCommand").style["paddingRight"] = window.Math.floor(20 * scaleby) + "px";
        window.document.getElementById("hitCommands").style["paddingLeft"] = window.Math.floor(10 * scaleby) + "px";
        window.document.getElementById("hitCommands").style["paddingRight"] = window.Math.floor(10 * scaleby) + "px";
        window.document.getElementById("runCommands").style["paddingLeft"] = window.Math.floor(0 * scaleby) + "px";
        window.document.getElementById("runCommands").style["paddingRight"] = window.Math.floor(20 * scaleby) + "px";
        window.document.getElementById("interactCommands").style["paddingLeft"] = window.Math.floor(7 * scaleby) + "px";
        window.document.getElementById("interactCommands").style["paddingRight"] = window.Math.floor(0 * scaleby) + "px";
        window.document.getElementById("craftCommands").style["paddingLeft"] = window.Math.floor(5 * scaleby) + "px";
        window.document.getElementById("craftCommands").style["paddingRight"] = window.Math.floor(18 * scaleby) + "px";
        window.document.getElementById("mapCommands").style["paddingLeft"] = window.Math.floor(6 * scaleby) + "px";
        window.document.getElementById("mapCommands").style["paddingRight"] = window.Math.floor(12 * scaleby) + "px";
        var NwvWV = window.document.getElementById("howtoplayTitle").style;
        SY = window.Math.floor(197 * scaleby) + "px";
        SX = window.Math.floor(23 * scaleby) + "px";
        NwvWV.width = SY;
        NwvWV.height = SX;
        NwvWV.fontSize = window.Math.floor(16 * scaleby) + "px";
        NwvWV["paddingTop"] = window.Math.floor(0 * scaleby) + "px";
        NwvWV["paddingBottom"] = window.Math.floor(13 * scaleby) + "px";
        NwvWV["marginBottom"] = window.Math.floor(6 * scaleby) + "px";
        NwvWV["marginTop"] = window.Math.floor(0 * scaleby) + "px";
        NwvWV["borderRadius"] = ((((((window.Math.floor(5 * scaleby) + "px ") + window.Math.floor(5 * scaleby)) + "px ") + window.Math.floor(0 * scaleby)) + "px ") + window.Math.floor(0 * scaleby)) + "px";
        var vNvVn = window.document.getElementById("howtoplayText").style;
        vNvVn.fontSize = window.Math.floor(11 * scaleby) + "px";
        vNvVn.MNmmV = window.Math.floor(6 * scaleby) + "px";
        vNvVn.height = window.Math.floor(52 * scaleby) + "px";
        var NWmNv = window.document.getElementById("howtoplayCommands").style;
        SY = window.Math.floor(197 * scaleby) + "px";
        SX = window.Math.floor(23 * scaleby) + "px";
        NWmNv.width = SY;
        NWmNv.height = SX;
        NWmNv.fontSize = window.Math.floor(16 * scaleby) + "px";
        NWmNv["paddingTop"] = window.Math.floor(13 * scaleby) + "px";
        NWmNv["paddingBottom"] = window.Math.floor(13 * scaleby) + "px";
        NWmNv["marginBottom"] = window.Math.floor(6 * scaleby) + "px";
        NWmNv["marginTop"] = window.Math.floor(11 * scaleby) + "px";
    };

    function draw() {
        if (MMVwV() === 0) return;
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        Render.VMMWm();
        if (MNw > 0) {
            NNN = mwn(1 - (MNw / WwM));
            if (mwm === 1) NNN = 1 - window.Math.abs(NNN);
            NNN = 1 - NNN;
        }
        ctx.globalAlpha = 0.3 * NNN;
        ctx.fillStyle = "#000000";
        ctx.fillRect(0, 0, screenWidth, screenHeight);
        ctx.globalAlpha = 1;
        if (Home.gameMode === World.__SURVIVAL__) NvW.NNv(vM.Mwn);
        else if (Home.gameMode === World.__BR__) VmwMm.NNv(vM.Mwn);
        else if (Home.gameMode === World.__GHOUL__) vvWWW.NNv(vM.Mwn);
        if (Home.NMMwM === 0) wnm.NNv(vM.Mwn);
        else if (Home.NMMwM === 1) VMm.NNv(vM.Mwn);
        VmV.draw();
        mVwVw.draw();
        playbutt.draw();
        mwvwV.draw();
        mmvWv.draw();
        WWNNV.draw();
        NVn.draw();
        VNWMN.draw();
        VnmWw.draw();
        nMNNN.draw();
        vVNnM.draw();
        NvW.draw();
        vvWWW.draw();
        wnm.draw();
        VMm.draw();
        WMmmM.draw();
        nvWwv.draw();
        WwWvv.draw();
        wvmmM.draw();
        mNVWV.draw();
        privateServer.draw();
        vvmMm.draw();
        if (WnwMN.W === null) {
            WnwMN.W = vM.showtxt((('0.' + versionInf[0]) + '.') + versionInf[1], "'Viga', sans-serif", "#d6ddde", 24, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#2b3c3e", 8);
            WnwMN.W.m = 1;
        }
        CanvasUtils.putonscreen(WnwMN, (VmV.mv.x / scaleby) + 484.5, (VmV.mv.y / scaleby) + 124, 0, 0, 0, 1);
        wvmwM.mv.x = WMmmM.mv.x + (27 * scaleby);
        wvmwM.mv.y = WMmmM.mv.y + (329 * scaleby);
        wvmwM.draw();
        wMMNm.mv.x = WMmmM.mv.x + (34 * scaleby);
        wMMNm.mv.y = WMmmM.mv.y + (399 * scaleby);
        wMMNm.draw();
        Render.vMNVm();
        vWn.nwwnv();
    };

    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                mVwVw.NNv(vM.Wmm);
                vWmNN.display = "none";
                playbutt.NNv(vM.Wmm);
                Wvwwv.display = "none";
                vnmmN.display = "none";
                VNVnM.display = "none";
                wnwvW.display = "none";
                NVn.NNv(vM.Wmm);
                VNWMN.NNv(vM.Wmm);
                VnmWw.NNv(vM.Wmm);
                nMNNN.NNv(vM.Wmm);
                vVNnM.NNv(vM.Wmm);
                NvW.NNv(vM.Wmm);
                VmwMm.NNv(vM.Wmm);
                vvWWW.NNv(vM.Wmm);
                wnm.NNv(vM.Wmm);
                VMm.NNv(vM.Wmm);
                nvWwv.NNv(vM.Wmm);
                WwWvv.NNv(vM.Wmm);
                wvmmM.NNv(vM.Wmm);
                mNVWV.NNv(vM.Wmm);
                vnvmm.display = "none";
                privateServer.NNv(vM.Wmm);
                vvmMm.NNv(vM.Wmm);
                MVwVM.display = "none";
                VwWMv.display = "none";
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                if (World.PLAYER.WMnWN !== 1) MVwVM.display = "inline-block";
                window.document.getElementById("bod").style.backgroundColor = "#46664d";
                MmNNN();
            }
            MNw -= delta;
        }
        return 1;
    };

    function VNn(event) {
        myply.VWv(event, myply.NVMMW);
        var vnm = 0;
        if (mVwVw.mw() === 1) {
            vnm = 1;
        }
        if (playbutt.mw() === 1) {
            vnm = 1;
        }
        if (NVn.mw() === 1) {
            vnm = 1;
        }
        if (VNWMN.mw() === 1) {
            vnm = 1;
        }
        if (VnmWw.mw() === 1) {
            vnm = 1;
        }
        if (nMNNN.mw() === 1) {
            vnm = 1;
        }
        if (vVNnM.mw() === 1) {
            vnm = 1;
        }
        if (NvW.mw() === 1) {
            vnm = 1;
        }
        if (VmwMm.mw() === 1) {
            vnm = 1;
        }
        if (vvWWW.mw() === 1) {
            vnm = 1;
        }
        if (wnm.mw() === 1) {
            vnm = 1;
        }
        if (VMm.mw() === 1) {
            vnm = 1;
        }
        if (nvWwv.mw() === 1) {
            vnm = 1;
        }
        if (WwWvv.mw() === 1) {
            vnm = 1;
        }
        if (wvmmM.mw() === 1) {
            vnm = 1;
        }
        if (mNVWV.mw() === 1) {
            vnm = 1;
        }
        if (privateServer.mw() === 1) {
            vnm = 1;
        }
        if (vvmMm.mw() === 1) {
            vnm = 1;
        }
        wvmwM.mw();
        wMMNm.mw();
    };

    function vNm(event) {
        myply.VWv(event, myply.MnNNW);
        var vnm = 0;
        if (mVwVw.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://iogames.space", "_blank");
        }
        if (playbutt.mw() === 1) {
            vnm = 1;
            joinServer();
            audio.VnV(audio.ww.play, 1, 0);

        }
        if (NVn.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://twitter.com/lapamauve", "_blank");
        }
        if (VNWMN.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open(" https://www.facebook.com/limaxio-571818073000979", "_blank");
        }
        if (VnmWw.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://youtube.com/c/LapaMauve", "_blank");
        }
        if (nMNNN.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://www.reddit.com/r/devastio/", "_blank");
        }
        if (vVNnM.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://discord.gg/V4KXEwr", "_blank");
        }
        if (NvW.mw() === 1) {
            vnm = 1;
            if (Home.gameMode !== 0) {
                if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
                    Home.gameMode = 0;
                    audio.VnV(audio.ww.button, 1, 0);
                    VMm.show();
                    wnm.show();
                    window.document.getElementById("serverList").innerHTML = Home.MnMWn;
                    window.document.getElementById("servers").selectedIndex = Home.WNMNN;
                    update();
                }
            }
        }
        if (VmwMm.mw() === 1) {
            vnm = 1;
            if ((0 && (Home.gameMode !== 1)) && (Home.NMMwM === 1)) {
                if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
                    Home.NwMmw = 0;
                    Home.gameMode = World.__BR__;
                    audio.VnV(audio.ww.button, 1, 0);
                    VMm.vnN();
                    wnm.vnN();
                    Home.MnMWn = window.document.getElementById("serverList").innerHTML;
                    Home.WNMNN = window.document.getElementById("servers").selectedIndex;
                    window.document.getElementById("serverList").innerHTML = Home.htmlBattleRoyale;
                    var j = 0;
                    var vvvNm = 0;
                    for (var i in Home.regions) {
                        if (i === Client.serverList[Home.WNMNN][4]) {
                            Home.NwMmw = window.Math.floor(window.Math.random() * Home.regions[i].length);
                            vvvNm = j;
                            break;
                        }
                        j++;
                    };
                    window.document.getElementById("servers").selectedIndex = vvvNm;
                    update();
                }
            }
        }
        if (vvWWW.mw() === 1) {
            vnm = 1;
            if ((Home.gameMode !== 1) && (Home.NMMwM === 1)) {
                if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
                    Home.NwMmw = 0;
                    Home.gameMode = World.__GHOUL__;
                    audio.VnV(audio.ww.button, 1, 0);
                    VMm.vnN();
                    wnm.vnN();
                    Home.MnMWn = window.document.getElementById("serverList").innerHTML;
                    Home.WNMNN = window.document.getElementById("servers").selectedIndex;
                    window.document.getElementById("serverList").innerHTML = Home.htmlGhoulServer;
                    var vvvNm = window.Math.floor(window.Math.random() * 1);
                    window.document.getElementById("servers").selectedIndex = vvvNm;
                    update();
                }
            }
        }
        if (wnm.mw() === 1) {
            vnm = 1;
            if ((Home.NMMwM !== 0) && (Home.gameMode === 0)) {
                if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
                    Home.NwMmw = 0;
                    Home.NMMwM = 0;
                    audio.VnV(audio.ww.button, 1, 0);
                    NvW.vnN();
                    VmwMm.vnN();
                    vvWWW.vnN();
                    Home.MnMWn = window.document.getElementById("serverList").innerHTML;
                    Home.WNMNN = window.document.getElementById("servers").selectedIndex;
                    window.document.getElementById("serverList").innerHTML = Home.htmlPrivateServer;
                    Home.NwMmw = 0;
                    window.document.getElementById("servers").selectedIndex = 0;
                    update();
                }
            }
        }
        if (VMm.mw() === 1) {
            vnm = 1;
            if ((Home.NMMwM !== 1) && (Home.gameMode === 0)) {
                if (((Client.state & binary.b2) === 0) && ((Client.state & binary.b1) === 0)) {
                    Home.NMMwM = 1;
                    Home.gameMode = 0;
                    audio.VnV(audio.ww.button, 1, 0);
                    NvW.show();
                    vvWWW.show();
                    window.document.getElementById("serverList").innerHTML = Home.MnMWn;
                    window.document.getElementById("servers").selectedIndex = Home.WNMNN;
                    update();
                }
            }
        }
        if (nvWwv.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("http://limax.io", "_blank");
        }
        if (WwWvv.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("http://oib.io", "_blank");
        }
        if (wvmmM.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("http://starve.io", "_blank");
        }
        if (mNVWV.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://nend.io", "_blank");
        }
        if (privateServer.mw() === 1) {
            vnm = 1;
            var MwWMw = window.open("https://devast.io/private-server", "_blank");
        }
        if (vvmMm.mw() === 1) {
            vnm = 1;
            Home.quit(Editor);
            audio.VnV(audio.ww.play, 1, 0);
        }
        if ((wvmwM.mw() === 1) || (wMMNm.mw() === 1)) {
            var MwWMw = window.open(WWNWM.WwWVn, "_blank");
        };
    };

    function wVv(event) {
        myply.VWv(event, myply.wwwmw);
        var vnm = 0;
        if (mVwVw.mw() === 1) {
            vnm = 1;
        }
        if (playbutt.mw() === 1) {
            vnm = 1;
        }
        if (NVn.mw() === 1) {
            vnm = 1;
        }
        if (VNWMN.mw() === 1) {
            vnm = 1;
        }
        if (VnmWw.mw() === 1) {
            vnm = 1;
        }
        if (nMNNN.mw() === 1) {
            vnm = 1;
        }
        if (vVNnM.mw() === 1) {
            vnm = 1;
        }
        if (NvW.mw() === 1) {
            vnm = 1;
        }
        if (VmwMm.mw() === 1) {
            vnm = 1;
        }
        if (vvWWW.mw() === 1) {
            vnm = 1;
        }
        if (wnm.mw() === 1) {
            vnm = 1;
        }
        if (VMm.mw() === 1) {
            vnm = 1;
        }
        if (nvWwv.mw() === 1) {
            vnm = 1;
        }
        if (WwWvv.mw() === 1) {
            vnm = 1;
        }
        if (wvmmM.mw() === 1) {
            vnm = 1;
        }
        if (mNVWV.mw() === 1) {
            vnm = 1;
        }
        if (privateServer.mw() === 1) {
            vnm = 1;
        }
        if (vvmMm.mw() === 1) {
            vnm = 1;
        }
        wvmwM.mw();
        wMMNm.mw();
    };

    function WwW(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            VNn(NWV);
        }
    };

    function nMN(event) {
        vNm(NWV);
    };

    function Www(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            vNm(NWV);
        }
    };

    function vnv(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            wVv(NWV);
        }
    };

    function getClickPos(e)
    {
        setx = rowx;
        sety = rowy;
        console.log('set: ' + rowx + ', ' + rowy)
    };

    function MmNNN() {
        if (mobile === 0) window.addEventListener('contextmenu', function(ev) {
            ev.preventDefault();
            getClickPos();
            return false;
            }, false);
        if (mobile === 0) window.addEventListener('mousedown', VNn, false);
        if (mobile === 0) window.addEventListener('mouseup', vNm, false);
        if (mobile === 0) window.addEventListener('mousemove', wVv, false);
        if (mobile === 1) window.addEventListener('touchstart', WwW, false);
        if (mobile === 1) window.addEventListener('touchend', nMN, false);
        if (mobile === 1) window.addEventListener('touchcancel', Www, false);
        if (mobile === 1) window.addEventListener('touchmove', vnv, false);
    };

    function VVwMW() {
        if (mobile === 0) window.removeEventListener('mousedown', VNn, false);
        if (mobile === 0) window.removeEventListener('mouseup', vNm, false);
        if (mobile === 0) window.removeEventListener('mousemove', wVv, false);
        if (mobile === 1) window.removeEventListener('touchstart', WwW, false);
        if (mobile === 1) window.removeEventListener('touchend', nMN, false);
        if (mobile === 1) window.removeEventListener('touchcancel', Www, false);
        if (mobile === 1) window.removeEventListener('touchmove', vnv, false);
    };
    return {
        quit: quit,
        init: init,
        run: run,
        update: update,
        draw: draw
    };
})();
var Game = (function() {
    function checkstatenull(Mnn) {
        window.console.log("onError", Mnn);
        if (World.gameMode === 1) quit(Rank);
        else quit(Score);
    };

    function NvN() {};

    function Wnmnv() {
        return NmW;
    };

    function MvN() {
        return NmW & craftwin;
    };
    var nMnnm = null;
    var chatvisible = 0;
    var NmW = 0;
    var bordmapwin = 0;
    var settingwin = 0;
    var craftwin = 0;
    var containerwin = 0;
    var teamwin = 0;
    var MNnnv = 0;

    function MVVMv(NWNVm) {
        nVN();
        NmW = 1;
        if (NWNVm === 1) craftwin = 1;
        else if (NWNVm === 2) containerwin = 1; 
    };

    function nVN() {
        NmW = 0;
        closebutt.NNv(vM.Wmm);
        bordmapwin = 0;
        settingwin = 0;
        craftwin = 0;
        containerwin = 0;
        teamwin = 0;
        World.MNNMM();
    };
    var addtimbutt = vM.vMM(63, 28, ["img/addteam-button-out.png", "img/addteam-button-in.png", "img/addteam-button-click.png"]);
    var leavebutt = vM.vMM(44, 33, ["img/leave-button-out.png", "img/leave-button-in.png", "img/leave-button-click.png"]);
    var lockbutt = vM.vMM(44, 33, ["img/lockteam-button-out.png", "img/lockteam-button-in.png", "img/lockteam-button-click.png"]);
    var unlockbutt = vM.vMM(44, 33, ["img/unlockteam-button-out.png", "img/unlockteam-button-in.png", "img/unlockteam-button-click.png"]);
    var deletebutt = vM.vMM(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
    var deletebuttout = vM.vMM(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
    var joinbutt = vM.vMM(44, 33, ["img/join-button-out.png", "img/join-button-in.png", "img/join-button-click.png"]);
    var craftbutt = vM.vMM(71, 46, ["img/craft-button-out.png", "img/craft-button-in.png", "img/craft-button-click.png"]);
    var cancelbutt = vM.vMM(71, 46, ["img/cancel-craft-button-out.png", "img/cancel-craft-button-in.png", "img/cancel-craft-button-click.png"]);
    var unlockbuttout = vM.vMM(71, 46, ["img/unlock-button-out.png", "img/unlock-button-in.png", "img/unlock-button-click.png"]);
    var bagbutt = vM.vMM(64, 63, ["img/bag-button-out.png", "img/bag-button-in.png", "img/bag-button-click.png"]);
    bagbutt.open = 0;
    var wnV = [];
    var craftList = [];
    var nmMMm = 0;
    var closebutt = vM.vMM(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
    var highpartout = [CanvasUtils.loadImage("img/high-particules-out.png"), CanvasUtils.loadImage("img/high-particules-in.png"), CanvasUtils.loadImage("img/high-particules-click.png")];
    var joinbuttout = [CanvasUtils.loadImage("img/join-button-out.png"), CanvasUtils.loadImage("img/join-button-in.png"), CanvasUtils.loadImage("img/join-button-click.png")];
    var removebuttout = [CanvasUtils.loadImage("img/remove-button-out.png"), CanvasUtils.loadImage("img/remove-button-in.png"), CanvasUtils.loadImage("img/remove-button-click.png")];
    var wVwnm = vM.vMM(54, 42, null, highpartout);
    var vWmmV = [CanvasUtils.loadImage("img/low-particules-out.png"), CanvasUtils.loadImage("img/low-particules-in.png"), CanvasUtils.loadImage("img/low-particules-click.png")];
    var VnWMV = vM.vMM(54, 42, null, vWmmV);
    var vVvNM = [CanvasUtils.loadImage("img/no-particules-out.png"), CanvasUtils.loadImage("img/no-particules-in.png"), CanvasUtils.loadImage("img/no-particules-click.png")];
    var wwMwv = vM.vMM(54, 42, null, vVvNM);
    var nwMVN = [CanvasUtils.loadImage("img/fuel-button-out.png"), CanvasUtils.loadImage("img/fuel-button-in.png"), CanvasUtils.loadImage("img/fuel-button-click.png")];
    var VWNWV = vM.vMM(46, 46, null, nwMVN);
    var vnwVW = [CanvasUtils.loadImage("img/fuel1-button-out.png"), CanvasUtils.loadImage("img/fuel1-button-in.png"), CanvasUtils.loadImage("img/fuel1-button-click.png")];
    var WmWwW = vM.vMM(46, 46, null, vnwVW);
    var wnnMw = [CanvasUtils.loadImage("img/energy-cells-button-out.png"), CanvasUtils.loadImage("img/energy-cells-button-in.png"), CanvasUtils.loadImage("img/energy-cells-button-click.png")];
    var WwMvM = vM.vMM(46, 46, null, wnnMw);
    var VVVMw = [CanvasUtils.loadImage("img/high-resolution-out.png"), CanvasUtils.loadImage("img/high-resolution-in.png"), CanvasUtils.loadImage("img/high-resolution-click.png")];
    var wWNnw = vM.vMM(54, 42, null, VVVMw);
    var wmnmv = [CanvasUtils.loadImage("img/medium-resolution-out.png"), CanvasUtils.loadImage("img/medium-resolution-in.png"), CanvasUtils.loadImage("img/medium-resolution-click.png")];
    var nvwMN = vM.vMM(54, 42, null, wmnmv);
    var vmVnn = [CanvasUtils.loadImage("img/low-resolution-out.png"), CanvasUtils.loadImage("img/low-resolution-in.png"), CanvasUtils.loadImage("img/low-resolution-click.png")];
    var MNVVn = vM.vMM(54, 42, null, vmVnn);
    var NwVwn = [CanvasUtils.loadImage("img/azerty-button-out.png"), CanvasUtils.loadImage("img/azerty-button-in.png"), CanvasUtils.loadImage("img/azerty-button-click.png")];
    var VmvmN = vM.vMM(81, 33, null, NwVwn);
    var NMnMN = [CanvasUtils.loadImage("img/qwerty-button-out.png"), CanvasUtils.loadImage("img/qwerty-button-in.png"), CanvasUtils.loadImage("img/qwerty-button-click.png")];
    var WMVVn = vM.vMM(87, 33, null, NMnMN);
    var soundonbutt = [CanvasUtils.loadImage("img/sound-on-out.png"), CanvasUtils.loadImage("img/sound-on-in.png"), CanvasUtils.loadImage("img/sound-on-click.png")];
    var soundoffbutt = [CanvasUtils.loadImage("img/sound-off-out.png"), CanvasUtils.loadImage("img/sound-off-in.png"), CanvasUtils.loadImage("img/sound-off-click.png")];
    var wvNNV = vM.vMM(51, 36, null, soundonbutt);
    var WVnnn = vM.vMM(51, 36, null, soundoffbutt);
    var NmVWV = vM.vMM(51, 36, null, soundonbutt);
    var vVMWm = vM.vMM(51, 36, null, soundoffbutt);
    var MNWwn = [];
    var MmV = -1;
    var NWmNn = -1;
    var emptyinvslot = CanvasUtils.loadImage("img/inv-empty.png");
    var WwvNM = [emptyinvslot, emptyinvslot, emptyinvslot];
    var inventory = [];
    var nvV = [];
    var WVn = [];
    var NMV = [];
    var VnmwN = [];
    var nmMvw = [];
    var WvNMn = [];
    var mwV = [];
    var vwvvm = vM.vMM(58, 58, null, WwvNM);
    var vwn = [];
    var WMn = [];
    var mWM = 0;
    var MWVNw = 0;
    var NVNwm = 0;
    var MMMvM = 0;
    var vmWNW = 0;
    var NnVMv = 0;
    var WNmmw = 0;
    var nvnNv = 0;

    function NnnNW() {
        if ((myply.state === myply.NVMMW) && (World.PLAYER.click === 0)) {
            if (World.PLAYER.wvM === 1) {
                World.PLAYER.click = -1;
                if (World.PLAYER.nwVMm === 1) Client.sendwsmsg(window.JSON.stringify([14, World.PLAYER.nvMwN, World.PLAYER.NNV, World.PLAYER.Vmm]));
            } else {
                World.PLAYER.click = 1;
                World.mvn = -1;
                Client.srvclick();
            }
        } else if (myply.state === myply.MnNNW) {
            if (World.PLAYER.wvM === 1) {
                nmMMm = 0;
                World.PLAYER.click = 0;
            } else if (World.PLAYER.click === 1) {
                nmMMm = 0;
                World.PLAYER.click = 0;
                Client.srvunclick();
            } else if (nmMMm === 1) {
                World.PLAYER.click = 1;
                World.mvn = -1;
                Client.srvclick();
            }
        }
    };

    function vWMVN() {
        Client.update();
        if (delta > 5000) Client.sendwsmsg("[20]");
        if (chatvisible === 0) {
            Client.sendkey();
            Client.srvshift();
        }
        if (myply.state === myply.NVMMW) Client.sendrotation2();
        else Client.sendrotation();
        NnnNW();
    };

    function markposition() {
        if (Nnw > 0) {
            Nnw -= delta;
            if (Nnw > 2500) ctx.globalAlpha = WNW.mWV.vvw((3000 - Nnw) / 500);
            else if (Nnw < 500) ctx.globalAlpha = WNW.mWV.vvw(Nnw / 500);
            ctx.drawImage(VWWvn, copypastebutton.mv.x - (85 * scaleby), copypastebutton.mv.y - (40 * scaleby), VWWvn.Wvw * scaleby, VWWvn.mNm * scaleby);
            ctx.globalAlpha = 1;
        }
        if (NVVNW[World.PLAYER.mmm] === window.undefined) NVVNW[World.PLAYER.mmm] = [];
        if (NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] === window.undefined) NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] = vM.showtxt(((("(" + World.PLAYER.mmm) + ",") + World.PLAYER.NWM) + ")", "'Viga', sans-serif", "#FFFFFF", 30, 300, "#000000", 22, 22, window.undefined, window.undefined, 0.4, window.undefined, "#000000", 15.6);
        var W = NVVNW[World.PLAYER.mmm][World.PLAYER.NWM];
        ctx.drawImage(W, 5 * scaleby, fullscreenimg.mv.y, W.Wvw * scaleby, W.mNm * scaleby);
    };

    var NVVNW = [];


    var gauges;
    var settingbox;
    var chestbox;
    var craftbox;
    var bordermap;
    var minimap;
    var leaderboard;
    var teambox;
    var teammemberbox;
    var fullscreenimg;
    var craftbutton;
    var settingsimg;
    var minimapbutt;
    var teambutt;
    var leaderboardbutt;
    var leaderboardbutt2;
    var chat;
    var mnnNv;
    var NWmmW;        

    function init() {
        VWWvn = vM.showtxt("Copied to clipboard", "'Viga', sans-serif", "#FFFFFF", 40, 350, "#000000", 18, 18, window.undefined, window.undefined, 0.2);
        chatinput = window.document.getElementById("chatInput");
        var wMv = 68;
        var vvv = ENTITIES[INSplayers].vWMvM + 8;
        for (i = 0; i < vvv; i++) inventory.push(vM.vMM(wMv, wMv, null, WwvNM));
        for (i = 0; i < 4; i++) mwV.push(vM.vMM(wMv, wMv, null, WwvNM));
        wMv = 49;
        for (i = 0; i < 35; i++) nvV.push(vM.vMM(wMv, wMv, null, WwvNM));
        wMv = 40;
        for (i = 0; i < 5; i++) WVn.push(vM.vMM(wMv, wMv, null, WwvNM));
        for (i = 0; i < 4; i++) NMV.push(vM.vMM(wMv, wMv, null, WwvNM));
        for (i = 0; i < 3; i++) VnmwN.push(vM.vMM(wMv, wMv, null, WwvNM));
        for (i = 0; i < 9; i++) WvNMn.push(vM.vMM(29, 27, null, removebuttout));
        for (i = 0; i < 18; i++) nmMvw.push(vM.vMM(44, 33, null, joinbuttout));
        Game.closebutt = nVN;
        Game.nwmVV = MVVMv;
        Game.inventory = inventory;
        Game.nvV = nvV;
        Game.WVn = WVn;
        Game.vwvvm = vwvvm;
        Game.NMV = NMV;
        Game.VnmwN = VnmwN;
        Game.mwV = mwV;
        Game.WvNMn = WvNMn;
        Game.join = nmMvw;
        Game.MvN = MvN;
        Game.Wnmnv = Wnmnv;
        Game.WmN = "";
        Game.nVNMM = joinbutt;
        Game.nWvnm = deletebuttout;
        Game.vwn = vwn;
        Game.WMn = WMn;
        Game.mNNwM = 0;
        Game.nNwMM = 0;
        Game.vwVnW = 0;
        Game.mnNnW = 0;
        Game.mmNWn = 0;
        Game.vmwNV = 0;
        wnV[SKILLS.__BUILDING__] = vM.vMM(42, 42, ["img/building-button-out.png", "img/building-button-in.png", "img/building-button-click.png"]);
        wnV[SKILLS.__SKILL__] = vM.vMM(42, 42, ["img/skill-button-out.png", "img/skill-button-in.png", "img/skill-button-click.png"]);
        wnV[SKILLS.__CLOTHE__] = vM.vMM(42, 42, ["img/clothe-button-out.png", "img/clothe-button-in.png", "img/clothe-button-click.png"]);
        wnV[SKILLS.__PLANT__] = vM.vMM(42, 42, ["img/plant-button-out.png", "img/plant-button-in.png", "img/plant-button-click.png"]);
        wnV[SKILLS.__DRUG__] = vM.vMM(42, 42, ["img/medecine-button-out.png", "img/medecine-button-in.png", "img/medecine-button-click.png"]);
        wnV[SKILLS.__MINERAL__] = vM.vMM(42, 42, ["img/resources-button-out.png", "img/resources-button-in.png", "img/resources-button-click.png"]);
        wnV[SKILLS.__SURVIVAL__] = vM.vMM(42, 42, ["img/survival-button-out.png", "img/survival-button-in.png", "img/survival-button-click.png"]);
        wnV[SKILLS.__TOOL__] = vM.vMM(42, 42, ["img/tool-button-out.png", "img/tool-button-in.png", "img/tool-button-click.png"]);
        wnV[SKILLS.__WEAPON__] = vM.vMM(42, 42, ["img/weapon-button-out.png", "img/weapon-button-in.png", "img/weapon-button-click.png"]);
        wnV[SKILLS.__LOGIC__] = vM.vMM(42, 42, ["img/cable-button-out.png", "img/cable-button-in.png", "img/cable-button-click.png"]);
        craftList[AREAS.own] = vM.vMM(42, 42, ["img/own-button-out.png", "img/own-button-in.png", "img/own-button-click.png"]);
        craftList[AREAS.firepart] = vM.vMM(42, 42, ["img/fire-button-out.png", "img/fire-button-in.png", "img/fire-button-click.png"]);
        craftList[AREAS.workbench] = vM.vMM(42, 42, ["img/workbench1-button-out.png", "img/workbench1-button-in.png", "img/workbench1-button-click.png"]);
        craftList[AREAS.bbq] = vM.vMM(42, 42, ["img/bbq-button-out.png", "img/bbq-button-in.png", "img/bbq-button-click.png"]);
        craftList[AREAS.composter] = vM.vMM(42, 42, ["img/composter-button-out.png", "img/composter-button-in.png", "img/composter-button-click.png"]);
        craftList[AREAS.weavingmachine] = vM.vMM(42, 42, ["img/weaving-machine-button-out.png", "img/weaving-machine-button-in.png", "img/weaving-machine-button-click.png"]);
        craftList[AREAS.weldingmachine] = vM.vMM(42, 42, ["img/welding-machine-button-out.png", "img/welding-machine-button-in.png", "img/welding-machine-button-click.png"]);
        craftList[AREAS.researchbench] = vM.vMM(42, 42, ["img/workbench2-button-out.png", "img/workbench2-button-in.png", "img/workbench2-button-click.png"]);
        craftList[AREAS.smelter] = vM.vMM(42, 42, ["img/smelter-button-out.png", "img/smelter-button-in.png", "img/smelter-button-click.png"]);
        craftList[AREAS.teslabench] = vM.vMM(42, 42, ["img/workbench3-button-out.png", "img/workbench3-button-in.png", "img/workbench3-button-click.png"]);
        craftList[AREAS.agitator] = vM.vMM(42, 42, ["img/agitator-button-out.png", "img/agitator-button-in.png", "img/agitator-button-click.png"]);
        craftList[AREAS.extractor] = vM.vMM(42, 42, ["img/extractor-button-out.png", "img/extractor-button-in.png", "img/extractor-button-click.png"]);
        gauges = vM.mVV(255, 174, "img/profile-player2.png");
        settingbox = vM.mVV(269, 267, "img/settings-box.png");
        chestbox = vM.mVV(162, 165, "img/chest-box4.png");
        craftbox = vM.mVV(595, 405, "img/craftbox2.png");
        bordermap = vM.mVV(412, 412, "img/borderBigMinimap2.png");
        minimap = vM.mVV(128, 128, "img/minimap.png");
        leaderboard = vM.mVV(233, 246, "img/leaderboard.png");
        teambox = vM.mVV(516, 275, "img/jointeam-box.png");
        teammemberbox = vM.mVV(513, 150, "img/memberteam-box.png");
        fullscreenimg = vM.vMM(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
        craftbutton = vM.vMM(64, 63, ["img/craftbox-button-out.png", "img/craftbox-button-in.png", "img/craftbox-button-click.png"]);
        settingsimg = vM.vMM(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
        minimapbutt = vM.vMM(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
        teambutt = vM.vMM(40, 40, ["img/team-button-out.png", "img/team-button-in.png", "img/team-button-click.png"]);
        leaderboardbutt = vM.vMM(34, 33, ["img/close-leaderboard-out.png", "img/close-leaderboard-in.png", "img/close-leaderboard-click.png"]);
        leaderboardbutt2 = vM.vMM(34, 33, ["img/open-leaderboard-out.png", "img/open-leaderboard-in.png", "img/open-leaderboard-click.png"]);
        chat = window.document.getElementById("chat");
        mnnNv = chat.style;
        NWmmW = {
            x: 0,
            y: 0
        };
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 2000;
    var WWN = 0;
    var VNvnM = WNW.mWV.wWM;
    var Nmv = 1000;
    var mwm = 0;
    var WVWWm = WNW.mWV.wMn;
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        Client.checkstatenull = checkstatenull;
        Client.NvN = NvN;
        if (localStorage.getItem("showLeaderboard") === "0") {
            leaderboardbutt.vnN();
            leaderboardbutt2.show();
        } else {
            leaderboardbutt2.vnN();
            leaderboardbutt.show();
        }
        window.document.getElementById("bod").style.backgroundColor = "#46664D";
        nmMMm = 0;
        Home.ads++;
        Game.WmN = "";
        Game.WwmNM = 0;
        vWn.nMvWM();
        if (World.gameMode === World.__BR__) {
            teambutt.vnN();
            craftbutton.show();
        } else if (World.PLAYER.ghoul > 0) {
            window.console.log("HERE");
            teambutt.vnN();
            craftbutton.vnN();
        } else {
            teambutt.show();
            craftbutton.show();
        }
        CanvasUtils.MNwmM(Game);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
    };

    function quit(wMN) {
        chatvisible = 0;
        nVN();
        vWn.NvwNv();
        MVv = wMN;
        VVwMW();
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1) MNw = 0;
            if (mwm === 1) vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        gauges.mv.x = window.Math.floor(5 * scaleby) + vMm;
        gauges.mv.y = ((screenHeight - window.Math.floor(174 * scaleby)) + window.Math.floor(-7 * scaleby)) + wwv;
        settingbox.mv.x = (screencenterX - window.Math.floor(134 * scaleby)) + vMm;
        settingbox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(133 * scaleby)) + wwv;
        chestbox.mv.x = (screencenterX - window.Math.floor(81 * scaleby)) + vMm;
        chestbox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(82 * scaleby)) + wwv;
        craftbox.mv.x = (screencenterX - window.Math.floor(297 * scaleby)) + vMm;
        craftbox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(202 * scaleby)) + wwv;
        bordermap.mv.x = (screencenterX - window.Math.floor(206 * scaleby)) + vMm;
        bordermap.mv.y = window.Math.max(0, screencenterY - window.Math.floor(206 * scaleby)) + wwv;
        minimap.mv.x = window.Math.floor(5 * scaleby) - vMm;
        minimap.mv.y = window.Math.floor(5 * scaleby) - wwv;
        leaderboard.mv.x = ((screenWidth - window.Math.floor(233 * scaleby)) + window.Math.floor(-6 * scaleby)) - vMm;
        leaderboard.mv.y = window.Math.floor(5 * scaleby) - wwv;
        teambox.mv.x = (screencenterX - window.Math.floor(258 * scaleby)) - vMm;
        teambox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(137 * scaleby)) - wwv;
        teammemberbox.mv.x = (screencenterX - window.Math.floor(256 * scaleby)) - vMm;
        teammemberbox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(75 * scaleby)) - wwv;
        fullscreenimg.mv.x = minimap.mv.x + window.Math.floor(126 * scaleby);
        fullscreenimg.mv.y = minimap.mv.y;
        craftbutton.mv.x = fullscreenimg.mv.x + window.Math.floor(50 * scaleby);
        craftbutton.mv.y = fullscreenimg.mv.y;
        settingsimg.mv.x = fullscreenimg.mv.x;
        settingsimg.mv.y = fullscreenimg.mv.y + window.Math.floor(44.5 * scaleby);
        minimapbutt.mv.x = settingsimg.mv.x;
        minimapbutt.mv.y = settingsimg.mv.y + window.Math.floor(44.5 * scaleby);
        teambutt.mv.x = minimap.mv.x;
        teambutt.mv.y = minimap.mv.y + window.Math.floor(127 * scaleby);
        leaderboardbutt.mv.x = ((screenWidth - window.Math.floor(34 * scaleby)) + window.Math.floor(-7 * scaleby)) - vMm;
        leaderboardbutt.mv.y = window.Math.floor(5 * scaleby) - wwv;
        leaderboardbutt2.mv.x = leaderboardbutt.mv.x;
        leaderboardbutt2.mv.y = leaderboardbutt.mv.y;
        NWmmW.x = (screencenterX - window.Math.floor(150 * scaleby)) + vMm;
        mnnNv.left = NWmmW.x + "px";
        NWmmW.y = (window.Math.max(0, screencenterY - 12) + window.Math.floor(150 * scaleby)) + wwv;
        mnnNv.top = NWmmW.y + "px";
        var wvnVv = window.document.getElementById("chatInput").style;
        var SY = window.Math.floor(250 * scaleby);
        var SX = window.Math.floor(20 * scaleby);
        var MMM = window.Math.floor(screencenterX - (SY / 2)) + "px";
        var nNV = window.Math.floor(((screencenterY - (SX / 2)) + (scaleby * 85)) + wwv) + "px";
        SX = SX + "px";
        SY = SY + "px";
        mnnNv.width = SY;
        mnnNv.height = SX;
        mnnNv.left = MMM;
        mnnNv.top = nNV;
        wvnVv.width = SY;
        wvnVv.height = SX;
        wvnVv.fontSize = window.Math.floor(14 * scaleby) + "px";
    };

    function draw() {
        if (MMVwV() === 0) return;
        vWMVN();
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        World.NNNMv();
        World.WnMvm();
        Render.VMMWm();
        Render.mvn();
        Render.MnW(gauges.mv.x, gauges.mv.y);
        Render.MvV(minimap.mv.x, minimap.mv.y);
        Render.inventory(vwn, WMn, MmV, bagbutt);
        gauges.draw();
        minimap.draw();
        fullscreenimg.draw();
        craftbutton.draw();
        settingsimg.draw();
        minimapbutt.draw();
        teambutt.draw();
        markposition();
        Render.VnVVN(gauges.mv.x, gauges.mv.y);
        if (World.gameMode !== World.__BR__) {
            if (leaderboardbutt.mv.disable === 0) {
                leaderboard.draw();
                Render.leaderboard(leaderboard.mv.x, leaderboard.mv.y);
                leaderboardbutt.draw();
            } else leaderboardbutt2.draw();
        }
        if (NmW === 1) {
            if (bordmapwin === 1) Render.NNMwm(bordermap, closebutt);
            else if (settingwin === 1) Render.optionsfc(settingbox, wWNnw, nvwMN, MNVVn, VmvmN, WMVVn, wvNNV, WVnnn, NmVWV, vVMWm, closebutt, wVwnm, VnWMV, wwMwv);
            else if (craftwin === 1) Render.craftfc(craftbox, closebutt, wnV, craftbutt, cancelbutt, unlockbuttout, craftList, vwvvm, vwn, WMn, VWNWV, WmWwW, WwMvM, NWmNn);
            else if (containerwin === 1) Render.cncwind(chestbox, closebutt, vwn, WMn);
            else if (teamwin === 1) Render.clan(closebutt, teambox, teammemberbox, leavebutt, addtimbutt, lockbutt, unlockbutt, deletebutt);
        } else if (mobile === 1) {
            if ((((keys.leftgo() + keys.rightgo()) + keys.straightgo()) + keys.downgo()) >= 1) {
                ctx.globalAlpha = 0.3;
                var WX = nvm - (VNwMw * 1.5);
                var WY = MMwnm + (VNwMw / 4);
                CanvasUtils.VWVVm(ctx, WX, WY, 60);
                CanvasUtils.mvWVv(ctx, "#000000");
                CanvasUtils.VWVVm(ctx, WX + ((window.Math.cos(MWVNw) * NVNwm) * scaleby), WY + ((window.Math.sin(MWVNw) * NVNwm) * scaleby), 30);
                CanvasUtils.mvWVv(ctx, "#FFFFFF");
                ctx.globalAlpha = 1;
            }
            if (vmWNW === 1) {
                ctx.globalAlpha = 0.3;
                var WX = nvm + (VNwMw * 1.5);
                var WY = MMwnm + (VNwMw / 4);
                CanvasUtils.VWVVm(ctx, WX, WY, 60);
                CanvasUtils.mvWVv(ctx, "#000000");
                CanvasUtils.VWVVm(ctx, WX + ((window.Math.cos(myply.angle) * 25) * scaleby), WY + ((window.Math.sin(myply.angle) * 25) * scaleby), 30);
                CanvasUtils.mvWVv(ctx, "#FFFFFF");
                ctx.globalAlpha = 1;
            }
        }
        vWn.nwwnv();
    };


    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                fullscreenimg.NNv(vM.Wmm);
                craftbutton.NNv(vM.Wmm);
                settingsimg.NNv(vM.Wmm);
                minimapbutt.NNv(vM.Wmm);
                teambutt.NNv(vM.Wmm);
                leaderboardbutt.NNv(vM.Wmm);
                leaderboardbutt2.NNv(vM.Wmm);
                mnnNv.display = "none";
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                World.PLAYER.VmNwm = window.Date.now();
                MmNNN();
            }
            MNw -= delta;
        }
        return 1;
    };

    function VNn(event) {
        myply.VWv(event, myply.NVMMW);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
        }
        if (craftbutton.mw() === 1) {
            vnm = 1;
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
        }
        if (teambutt.mw() === 1) {
            vnm = 1;
        }
        if (leaderboardbutt.mw() === 1) {
            vnm = 1;
        }
        if (leaderboardbutt2.mw() === 1) {
            vnm = 1;
        }
        if (World.PLAYER.wNw !== 0) {
            if ((joinbutt.mw() === 1) || (deletebuttout.mw() === 1)) vnm = 1;
        }
        if (NmW === 1) {
            closebutt.mw();
            if (settingwin === 1) {
                VmvmN.mw();
                WMVVn.mw();
                wWNnw.mw();
                nvwMN.mw();
                MNVVn.mw();
                wvNNV.mw();
                WVnnn.mw();
                NmVWV.mw();
                vVMWm.mw();
                VnWMV.mw();
                wVwnm.mw();
                wwMwv.mw();
            } else if (craftwin === 1) {
                if (World.PLAYER.nVV === -1) {
                    if ((World.PLAYER.WwVNv === 0) || (World.PLAYER.VVn === 1)) craftbutt.mw();
                    else cancelbutt.mw();
                    if ((((World.PLAYER.Vvw === AREAS.firepart) || (World.PLAYER.Vvw === AREAS.bbq)) || (World.PLAYER.Vvw === AREAS.composter)) && (World.PLAYER.Nn.MNM !== 255)) VWNWV.mw();
                    else if ((((World.PLAYER.Vvw === AREAS.smelter) || (World.PLAYER.Vvw === AREAS.extractor)) || (World.PLAYER.Vvw === AREAS.agitator)) && (World.PLAYER.Nn.MNM !== 255)) WmWwW.mw();
                } else unlockbuttout.mw();
                for (var i = 0; i < wnV.length; i++) wnV[i].mw();
                for (i = 0; i < craftList.length; i++) {
                    if ((World.PLAYER.vWMmW === i) || (i === 0)) craftList[i].mw();
                }
                var vvv = World.PLAYER.MNvMn;
                for (var i = 0; i < vvv; i++) nvV[i].mw();
                vvv = World.PLAYER.nMnmW;
                for (i = 0; i < vvv; i++) WVn[i].mw();
                if (World.PLAYER.VVn === 1) {
                    for (i = 0; i < World.PLAYER.Nn.vvv; i++) NMV[i].mw();
                }
                vvv = World.PLAYER.nWwmM;
                for (i = 0; i < vvv; i++) VnmwN[i].mw();
                vwvvm.mw();
            }
        }

        var invtr = World.PLAYER.inventory;
        var vvv = invtr.length;
        if ((vvv > 10) && (bagbutt.mw() === 1)) vnm = 1;
        for (var i = 0; i < vvv; i++) {
            if (inventory[i].mw() === 1) {
                vnm = 1;
                if (invtr[i][0] !== 0) {
                    var holditem = World.PLAYER.holditem;
                    if (holditem.inclick === 0) {
                        holditem.inclick = 1;
                        holditem.x = myply.x;
                        holditem.y = myply.y;
                        holditem.id = i;
                    }
                }
            } else if (containerwin === 1) {
                var wVMVN = World.PLAYER.mwV;
                for (var nMm = 0; nMm < 4; nMm++) {
                    if (wVMVN[nMm][0] !== 0) mwV[nMm].mw();
                }
            } else if (teamwin === 1) {
                if (World.PLAYER.clan === -1) {
                    addtimbutt.mw();
                    var j = 0;
                    for (var i = 0; i < nmMvw.length; i++) {
                        if (World.clans[i].MvvWw !== 0) {
                            nmMvw[j].mw();
                            j++;
                        }
                    }
                } else if (World.PLAYER.VVvWM === 1) {
                    lockbutt.mw();
                    unlockbutt.mw();
                    deletebutt.mw();
                    var j = 0;
                    var clan = World.clans[World.PLAYER.clan];
                    for (var i = 0; i < World.socket.length; i++) {
                        if (i === World.PLAYER.id) {
                            j++;
                            continue;
                        }
                        var PLAYER = World.socket[i];
                        if ((PLAYER.clan === clan.id) && (PLAYER.wwV === clan.mvN)) {
                            WvNMn[j].mw();
                            j++;
                        }
                    }
                } else leavebutt.mw();
            }
        }
        if ((vnm === 0) && (NmW === 0)) {
            nmMMm = 1;
            if (World.PLAYER.click === -1) World.PLAYER.click = 0;
        } else {
            if (World.PLAYER.click === 0) World.PLAYER.click = -1;
        }
    };

    function vNm(event) {
        myply.VWv(event, myply.MnNNW);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
            if (MNnnv === 0) {
                MNnnv = 1;
                CanvasUtils.fullscreenfunc();
                if (World.nVM === 0) canvas.style.backgroundColor = "#3D5942";
                else canvas.style.backgroundColor = "#0B2129";
                audio.VnV(audio.ww.button, 1, 0);
            } else {
                MNnnv = 0;
                CanvasUtils.exitfullscreenfunc();
                audio.VnV(audio.ww.button, 1, 0);
            }
        }
        if (craftbutton.mw() === 1) {
            vnm = 1;
            if (World.PLAYER.ghoul === 0) {
                if (craftwin === 0) {
                    nVN();
                    NmW = 1;
                    craftwin = 1;
                    World.MwM(AREAS.own);
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
            if (settingwin === 0) {
                nVN();
                NmW = 1;
                settingwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
                return;
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
            if (bordmapwin === 0) {
                nVN();
                NmW = 1;
                bordmapwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
                return;
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
        }
        if (teambutt.mw() === 1) {
            vnm = 1;
            if (teamwin === 0) {
                nVN();
                NmW = 1;
                teamwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
                return;
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
        }
        if (leaderboardbutt.mw() === 1) {
            vnm = 1;
            leaderboardbutt.vnN();
            leaderboardbutt2.show();
            localStorage.setItem("showLeaderboard", "0");
            audio.VnV(audio.ww.button, 1, 0);
            return;
        }
        if (leaderboardbutt2.mw() === 1) {
            vnm = 1;
            leaderboardbutt2.vnN();
            leaderboardbutt.show();
            localStorage.setItem("showLeaderboard", "1");
            audio.VnV(audio.ww.button, 1, 0);
            return;
        }
        var holditem = World.PLAYER.holditem;
        if (World.PLAYER.wNw !== 0) {
            if (joinbutt.mw() === 1) {
                Client.sendwsmsg(window.JSON.stringify([31, World.PLAYER.wNw]));
                audio.VnV(audio.ww.button, 1, 0);
                World.MMVmW();
                return;
            }
            if (deletebuttout.mw() === 1) {
                audio.VnV(audio.ww.button, 1, 0);
                World.MMVmW();
                return;
            }
        }
        if (NmW === 1) {
            if (closebutt.mw() === 1) {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
            if (settingwin === 1) {
                WMVVn.NNv(vM.Wmm);
                VmvmN.NNv(vM.Wmm);
                wWNnw.NNv(vM.Wmm);
                nvwMN.NNv(vM.Wmm);
                MNVVn.NNv(vM.Wmm);
                wvNNV.NNv(vM.Wmm);
                WVnnn.NNv(vM.Wmm);
                NmVWV.NNv(vM.Wmm);
                vVMWm.NNv(vM.Wmm);
                wVwnm.NNv(vM.Wmm);
                VnWMV.NNv(vM.Wmm);
                wwMwv.NNv(vM.Wmm);
                if (VmvmN.mw() === 1) {
                    keys.azer();
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (WMVVn.mw() === 1) {
                    keys.wasd();
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wWNnw.mw() === 1) {
                    CanvasUtils.NmmvM(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (nvwMN.mw() === 1) {
                    CanvasUtils.NmmvM(2);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (MNVVn.mw() === 1) {
                    CanvasUtils.NmmvM(3);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wvNNV.mw() === 1) {
                    audio.Vnwmn(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (WVnnn.mw() === 1) {
                    audio.Vnwmn(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (NmVWV.mw() === 1) {
                    audio.wNnMM(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (vVMWm.mw() === 1) {
                    audio.wNnMM(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (VnWMV.mw() === 1) {
                    Render.wvmnm(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wVwnm.mw() === 1) {
                    Render.wvmnm(2);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wwMwv.mw() === 1) {
                    Render.wvmnm(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                }
                var MMMnn = settingbox.mv;
                if ((((myply.nVm < MMMnn.x) || (myply.nVm > (MMMnn.x + (234 * scaleby)))) || (myply.nmW < MMMnn.y)) || (myply.nmW > (MMMnn.y + (232 * scaleby)))) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            } else if (bordmapwin === 1) {
                var mNMnn = bordermap.mv;
                if ((((myply.nVm < mNMnn.x) || (myply.nVm > (mNMnn.x + (412 * scaleby)))) || (myply.nmW < mNMnn.y)) || (myply.nmW > (mNMnn.y + (412 * scaleby)))) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            } else if (craftwin === 1) {
                if (World.PLAYER.nVV === -1) {
                    if ((World.PLAYER.WwVNv === 0) || (World.PLAYER.VVn === 1)) {
                        if ((World.PLAYER.vVN[World.PLAYER.VNwww] === 1) && (craftbutt.mw() === 1)) {
                            if (World.PLAYER.VVn === 1) {
                                if ((World.PLAYER.Nn.MNM !== 0) && (World.PLAYER.Nn.vvv < 4)) {
                                    Client.sendwsmsg(window.JSON.stringify([18, World.PLAYER.mMvww]));
                                    audio.VnV(audio.ww.nvV, 0.8, 0);
                                }
                            } else {
                                Client.sendwsmsg(window.JSON.stringify([22, World.PLAYER.mMvww]));
                                audio.VnV(audio.ww.nvV, 0.8, 0);
                            }
                            craftbutt.NNv(vM.Wmm);
                        }
                    } else if (cancelbutt.mw() === 1) {
                        Client.sendwsmsg(window.JSON.stringify([23]));
                        World.PLAYER.WwVNv = 0;
                        cancelbutt.NNv(vM.Wmm);
                        audio.VnV(audio.ww.button, 1, 0);
                    }
                } else {
                    if (unlockbuttout.mw() === 1) {
                        if (World.PLAYER.vVN[World.PLAYER.VNwww] === 1) {
                            Client.sendwsmsg(window.JSON.stringify([21, World.PLAYER.mMvww]));
                            audio.VnV(audio.ww.nwVvN, 1, 0);
                        }
                    }
                }
                if (wnV[SKILLS.__SKILL__].mw() === 1) {
                    World.NVM(SKILLS.__SKILL__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__BUILDING__].mw() === 1) {
                    World.NVM(SKILLS.__BUILDING__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__CLOTHE__].mw() === 1) {
                    World.NVM(SKILLS.__CLOTHE__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__PLANT__].mw() === 1) {
                    World.NVM(SKILLS.__PLANT__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__DRUG__].mw() === 1) {
                    World.NVM(SKILLS.__DRUG__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__MINERAL__].mw() === 1) {
                    World.NVM(SKILLS.__MINERAL__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__LOGIC__].mw() === 1) {
                    World.NVM(SKILLS.__LOGIC__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__SURVIVAL__].mw() === 1) {
                    World.NVM(SKILLS.__SURVIVAL__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__TOOL__].mw() === 1) {
                    World.NVM(SKILLS.__TOOL__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (wnV[SKILLS.__WEAPON__].mw() === 1) {
                    World.NVM(SKILLS.__WEAPON__);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.own].mw() === 1) {
                    World.MwM(AREAS.own);
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (((craftList[AREAS.firepart].mw() === 1) || (craftList[AREAS.bbq].mw() === 1)) || (craftList[AREAS.composter].mw() === 1)) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.workbench].mw() === 1) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.weldingmachine].mw() === 1) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.weavingmachine].mw() === 1) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.researchbench].mw() === 1) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (craftList[AREAS.teslabench].mw() === 1) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else if (((craftList[AREAS.smelter].mw() === 1) || (craftList[AREAS.extractor].mw() === 1)) || (craftList[AREAS.agitator].mw() === 1)) {
                    Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                    audio.VnV(audio.ww.button, 1, 0);
                } else {
                    var vvv = World.PLAYER.MNvMn;
                    for (var i = 0; i < vvv; i++) {
                        if (nvV[i].mw() === 1) {
                            World.PLAYER.VNwww = i;
                            World.NvwNN(World.PLAYER.craftList[i]);
                            audio.VnV(audio.ww.button, 1, 0);
                            return;
                        }
                    }
                    vvv = World.PLAYER.nMnmW;
                    for (i = 0; i < vvv; i++) {
                        if (WVn[i].mw() === 1) return;
                    }
                    if (World.PLAYER.VVn === 1) {
                        for (i = 0; i < World.PLAYER.Nn.vvv; i++) {
                            if (NMV[i].mw() === 1) {
                                Client.sendwsmsg(window.JSON.stringify([19, i]));
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                        }
                        if (((World.PLAYER.Vvw === AREAS.firepart) || (World.PLAYER.Vvw === AREAS.bbq)) || (World.PLAYER.Vvw === AREAS.composter)) {
                            if ((World.PLAYER.Nn.MNM !== 255) && (VWNWV.mw() === 1)) {
                                Client.sendwsmsg(window.JSON.stringify([24]));
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                        } else if (((World.PLAYER.Vvw === AREAS.smelter) || (World.PLAYER.Vvw === AREAS.extractor)) || (World.PLAYER.Vvw === AREAS.agitator)) {
                            if ((World.PLAYER.Nn.MNM !== 255) && (WmWwW.mw() === 1)) {
                                Client.sendwsmsg(window.JSON.stringify([24]));
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                        } else if (World.PLAYER.Vvw === AREAS.teslabench) {
                            if ((World.PLAYER.Nn.MNM !== 255) && (WwMvM.mw() === 1)) {
                                Client.sendwsmsg(window.JSON.stringify([24]));
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                        }
                    }
                    var nNMwN = craftbox.mv;
                    if (((holditem.inclick !== 1) && !event.ctrlKey) && ((((myply.nVm < nNMwN.x) || (myply.nVm > (nNMwN.x + (595 * scaleby)))) || (myply.nmW < nNMwN.y)) || (myply.nmW > (nNMwN.y + (325 * scaleby))))) {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                }
            } else if (containerwin === 1) {
                var wVMVN = World.PLAYER.mwV;
                for (var nMm = 0; nMm < 4; nMm++) {
                    if ((wVMVN[nMm][0] !== 0) && (mwV[nMm].mw() === 1)) {
                        Client.sendwsmsg(window.JSON.stringify([27, nMm]));
                        audio.VnV(audio.ww.holditem, 1, 0);
                        return;
                    }
                }
            } else if (teamwin === 1) {
                if (World.PLAYER.clan === -1) {
                    if (((addtimbutt.mw() === 1) && (World.PLAYER.WwmNM === 1)) && ((window.Date.now() - World.PLAYER.mVVmv) > 30500)) {
                        Client.sendwsmsg(window.JSON.stringify([28, Game.WmN]));
                        audio.VnV(audio.ww.button, 1, 0);
                        World.PLAYER.mVVmv = window.Date.now();
                    }
                    if ((window.Date.now() - World.PLAYER.Mwnwv) > 10500) {
                        var j = 0;
                        for (var i = 0; i < nmMvw.length; i++) {
                            if (World.clans[i].MvvWw !== 0) {
                                if (nmMvw[j].mw() === 1) {
                                    Client.sendwsmsg(window.JSON.stringify([30, i]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    World.PLAYER.Mwnwv = window.Date.now();
                                }
                                j++;
                            }
                        }
                    }
                } else if (World.PLAYER.VVvWM === 1) {
                    if ((lockbutt.mw() === 1) && (World.PLAYER.WnNvv === 0)) {
                        Client.sendwsmsg(window.JSON.stringify([33]));
                        World.PLAYER.WnNvv = 1;
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                    if ((unlockbutt.mw() === 1) && (World.PLAYER.WnNvv === 1)) {
                        Client.sendwsmsg(window.JSON.stringify([34]));
                        World.PLAYER.WnNvv = 0;
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                    if (deletebutt.mw() === 1) {
                        Client.sendwsmsg(window.JSON.stringify([29]));
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                    var j = 0;
                    var clan = World.clans[World.PLAYER.clan];
                    for (var i = 0; i < World.socket.length; i++) {
                        if (i === World.PLAYER.id) {
                            j++;
                            continue;
                        }
                        var PLAYER = World.socket[i];
                        if ((PLAYER.clan === clan.id) && (PLAYER.wwV === clan.mvN)) {
                            if (WvNMn[j].mw() === 1) {
                                Client.sendwsmsg(window.JSON.stringify([32, PLAYER.id]));
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                            j++;
                        }
                    }
                } else {
                    if (leavebutt.mw() === 1) {
                        Client.sendwsmsg(window.JSON.stringify([35, World.PLAYER.id]));
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                }
            }
        };
        var invtr = World.PLAYER.inventory;
        var vvv = invtr.length;
        var mnWNv = 0;
        if ((vvv > 10) && (bagbutt.mw() === 1)) {
            bagbutt.open = (bagbutt.open + 1) % 2;
            if (bagbutt.open === 1) audio.VnV(audio.ww.NwMWW, 0.08, 0);
            else audio.VnV(audio.ww.NwmVN, 0.08, 0);
        }
        for (var i = 0; i < vvv; i++) {
            if ((i > 9) && (bagbutt.open === 0)) break;
            if (inventory[i].mw() === 1) {
                mnWNv = 1;
                var idd = invtr[i][0];
                var nM = invtr[i][1];
                var vmM = invtr[i][2];
                var wvmvw = invtr[i][3];
                var vV = items[idd];
                if (holditem.inclick === 1) {
                    if (holditem.id !== i) {
                        if (invtr[i][0] === invtr[holditem.id][0]) {
                            if ((vV.stack > invtr[i][1]) && (vV.stack > invtr[holditem.id][1])) {
                                Client.sendwsmsg(window.JSON.stringify([10, invtr[holditem.id][0], invtr[holditem.id][1], invtr[holditem.id][2], invtr[i][1], invtr[i][2]]));
                                World.PLAYER.holditem.inclick = 0;
                                audio.VnV(audio.ww.holditem, 1, 0);
                                return;
                            }
                        }
                        invtr[i][0] = invtr[holditem.id][0];
                        invtr[i][1] = invtr[holditem.id][1];
                        invtr[i][2] = invtr[holditem.id][2];
                        invtr[i][3] = invtr[holditem.id][3];
                        invtr[holditem.id][0] = idd;
                        invtr[holditem.id][1] = nM;
                        invtr[holditem.id][2] = vmM;
                        invtr[holditem.id][3] = wvmvw;
                        if (idd !== 0) Game.inventory[holditem.id].MVN(items[idd].img.src, items[idd].img.W);
                        Game.inventory[i].MVN(items[invtr[i][0]].img.src, items[invtr[i][0]].img.W);
                        World.PLAYER.holditem.inclick = 0;
                        audio.VnV(audio.ww.holditem, 1, 0);
                        return;
                    }
                    World.PLAYER.holditem.inclick = 0;
                }
                if (idd !== 0) {
                    if ((containerwin === 1) && (event.which !== 3)) {
                        Client.sendwsmsg(window.JSON.stringify([26, idd, nM, vmM, wvmvw]));
                        audio.VnV(audio.ww.holditem, 1, 0);
                    } else if (event.which === 3) {
                        Client.sendwsmsg(window.JSON.stringify([9, idd, nM, vmM, wvmvw]));
                        audio.VnV(audio.ww.wWwnM, 1, 0);
                    } else {
                        if (event.ctrlKey) {
                            audio.VnV(audio.ww.holditem, 0.6, 0);
                            Client.sendwsmsg(window.JSON.stringify([11, idd, nM, vmM]));
                        } else Client.sendwsmsg(window.JSON.stringify([8, idd, nM, vmM, wvmvw]));
                    }
                }
            }
        }
        if ((containerwin === 1) && (mnWNv === 0)) {
            var NnVVw = chestbox.mv;
            if ((((myply.nVm < NnVVw.x) || (myply.nVm > (NnVVw.x + (161 * scaleby)))) || (myply.nmW < NnVVw.y)) || (myply.nmW > (NnVVw.y + (165 * scaleby)))) {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
            }
        }
        if (holditem.inclick === 1) {
            var i = holditem.id;
            Client.sendwsmsg(window.JSON.stringify([9, invtr[i][0], invtr[i][1], invtr[i][2], invtr[i][3]]));
            audio.VnV(audio.ww.wWwnM, 1, 0);
        }
        holditem.inclick = 0;
    };

    function wVv(event) {
        myply.VWv(event, myply.wwwmw);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
        }
        if (craftbutton.mw() === 1) {
            vnm = 1;
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
        }
        if (teambutt.mw() === 1) {
            vnm = 1;
        }
        if (leaderboardbutt.mw() === 1) {
            vnm = 1;
        }
        if (leaderboardbutt2.mw() === 1) {
            vnm = 1;
        }
        if (World.PLAYER.wNw !== 0) {
            joinbutt.mw();
            deletebuttout.mw();
        }
        if (NmW === 1) {
            closebutt.mw();
            if (settingwin === 1) {
                VmvmN.mw();
                WMVVn.mw();
                wWNnw.mw();
                nvwMN.mw();
                MNVVn.mw();
                wvNNV.mw();
                WVnnn.mw();
                NmVWV.mw();
                vVMWm.mw();
                VnWMV.mw();
                wVwnm.mw();
                wwMwv.mw();
            } else if (craftwin === 1) {
                if (World.PLAYER.nVV === -1) {
                    if ((World.PLAYER.WwVNv === 0) || (World.PLAYER.VVn === 1)) craftbutt.mw();
                    else cancelbutt.mw();
                } else unlockbuttout.mw();
                for (var i = 0; i < wnV.length; i++) wnV[i].mw();
                for (i = 0; i < craftList.length; i++) {
                    if ((World.PLAYER.vWMmW === i) || (i === 0)) craftList[i].mw();
                }
                var vvv = World.PLAYER.MNvMn;
                for (var i = 0; i < vvv; i++) nvV[i].mw();
                NWmNn = -1;
                vvv = World.PLAYER.nMnmW;
                for (i = 0; i < vvv; i++) {
                    if (WVn[i].mw() === 1) NWmNn = i;
                }
                if (World.PLAYER.VVn === 1) {
                    for (i = 0; i < World.PLAYER.Nn.vvv; i++) NMV[i].mw();
                    if ((((World.PLAYER.Vvw === AREAS.firepart) || (World.PLAYER.Vvw === AREAS.bbq)) || (World.PLAYER.Vvw === AREAS.composter)) && (World.PLAYER.Nn.MNM !== 255)) VWNWV.mw();
                    else if ((((World.PLAYER.Vvw === AREAS.smelter) || (World.PLAYER.Vvw === AREAS.extractor)) || (World.PLAYER.Vvw === AREAS.agitator)) && (World.PLAYER.Nn.MNM !== 255)) WmWwW.mw();
                }
                vvv = World.PLAYER.nWwmM;
                for (i = 0; i < vvv; i++) VnmwN[i].mw();
                vwvvm.mw();
            } else if (containerwin === 1) {
                var wVMVN = World.PLAYER.mwV;
                for (var nMm = 0; nMm < 4; nMm++) {
                    if (wVMVN[nMm][0] !== 0) mwV[nMm].mw();
                }
            } else if (teamwin === 1) {
                if (World.PLAYER.clan === -1) {
                    addtimbutt.mw();
                    var j = 0;
                    for (var i = 0; i < nmMvw.length; i++) {
                        if (World.clans[i].MvvWw !== 0) {
                            nmMvw[j].mw();
                            j++;
                        }
                    }
                } else if (World.PLAYER.VVvWM === 1) {
                    lockbutt.mw();
                    unlockbutt.mw();
                    deletebutt.mw();
                    var j = 0;
                    var clan = World.clans[World.PLAYER.clan];
                    for (var i = 0; i < World.socket.length; i++) {
                        if (i === World.PLAYER.id) {
                            j++;
                            continue;
                        }
                        var PLAYER = World.socket[i];
                        if ((PLAYER.clan === clan.id) && (PLAYER.wwV === clan.mvN)) {
                            WvNMn[j].mw();
                            j++;
                        }
                    }
                } else leavebutt.mw();
            }
        }
        var invtr = World.PLAYER.inventory;
        var vvv = invtr.length;
        MmV = -1;
        if (vvv > 10) bagbutt.mw();
        for (var i = 0; i < vvv; i++) {
            if ((i > 9) && (bagbutt.open === 0)) break;
            if (invtr[i][0] !== 0) {
                if (inventory[i].mw() === 1) MmV = i;
            }
        }
    };

    function NmN(event) {
        keys.WvMvV(event);
        if ((teamwin === 1) && (World.PLAYER.clan === -1)) {
            if ((event.keyCode === 8) && (Game.WmN.length > 0)) {
                Game.WmN = Game.WmN.substring(0, Game.WmN.length - 1);
                event.preventDefault();
                return;
            } else if (((event.keyCode >= 65) && (event.keyCode <= 90)) || ((event.keyCode >= 48) && (event.keyCode <= 57))) {
                if (Game.WmN.length < 5) Game.WmN += window.String.fromCharCode(event.keyCode);
            }
        } else if ((chatvisible === 1) && (event.keyCode === 27)) {
            chatvisible = 0;
            mnnNv.display = "none";
        } else if (event.keyCode === 13) {
            if (chatvisible === 1) {
                if (chatinput.value.length > 0) {
                    if ((World.PLAYER.WMnWN === 1) && (chatinput.value[0] === '!')) {
                        if (chatinput.value === '!pos') World.socket[World.PLAYER.id].text.push((window.Math.floor(World.PLAYER.x / 100) + ":") + window.Math.floor(World.PLAYER.y / 100));
                        if (chatinput.value === '!crash') Client.sendcrash(chatinput.value);
                        if (chatinput.value === '!new') Client.newstorage(chatinput.value);
                        if (chatinput.value === '!spam') Client.sendspam(chatinput.value);
                        if (chatinput.value === '!afk') Client.sendafk(chatinput.value);
                        else {
                            var mNvMM = chatinput.value.split('!');
                            for (var i = 1; i < mNvMM.length; i++) {
                                var nwNVn = "!" + mNvMM[i];
                                if (nwNVn.indexOf("public") === -1) nwNVn = nwNVn.split(" ").join("");
                                Client.sendchat(nwNVn);
                                if (i <= 20) World.socket[World.PLAYER.id].text.push(nwNVn);
                            }
                        }
                    } else if (chatinput.value[0] === '[') {
                        Client.sendmodchat(chatinput.value)
                    } else if (chatinput.value[0] === '/') {
                        var num = (chatinput.value[1] + chatinput.value[2] + chatinput.value[3] + chatinput.value[4])
                    Client.sendlamp(num)
                } else {
                        var mN = Client.sendchat(chatinput.value);
                        if (mN !== 0) World.socket[World.PLAYER.id].text.push(("I am muted during " + window.Math.floor(mN / 1000)) + " seconds");
                        else World.socket[World.PLAYER.id].text.push(chatinput.value);
                    }
                }
                chatvisible = 0;
                chatinput.value = "";
                mnnNv.display = "none";
            } else {
                chatvisible = 1;
                mnnNv.display = "inline-block";
                chatinput.focus();
            }
        } else if (chatvisible === 0) {
            if (event.keyCode === 77) {
                if (bordmapwin === 0) {
                    nVN();
                    NmW = 1;
                    bordmapwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                }
            } else if ((event.keyCode === 69) || (event.keyCode === 32)) {
                switch (World.PLAYER.mvn) {
                    case 0:
                        Client.sendwsmsg(window.JSON.stringify([12, World.PLAYER.lootsrvID]));
                        break;
                    case 2:
                        Client.sendwsmsg(window.JSON.stringify([World.PLAYER.NnN, World.PLAYER.MnMwn, World.PLAYER.MNMvN]));
                        break;
                }
            } else if (event.keyCode === 70) {
                if (World.PLAYER.mwMmN === 1) Client.sendwsmsg(window.JSON.stringify([12, World.PLAYER.lootsrvID]));
            } else if (event.keyCode === 82) {
                if (World.PLAYER.wvM === 1) World.PLAYER.nvMwN = (World.PLAYER.nvMwN + 1) % 4;
                else Client.sendwsmsg(window.JSON.stringify([13]));
            } else if ((event.keyCode >= 49) && (event.keyCode <= 57)) {
                if (World.PLAYER.holditem.inclick !== 1) {
                    var i = event.keyCode - 49;
                    var invtr = World.PLAYER.inventory;
                    if (i < invtr.length) {
                        var idd = invtr[i][0];
                        var nM = invtr[i][1];
                        var vmM = invtr[i][2];
                        var wvmvw = invtr[i][3];
                        if (event.altKey) {
                            Client.sendwsmsg(window.JSON.stringify([9, idd, nM, vmM, wvmvw]));
                            audio.VnV(audio.ww.wWwnM, 1, 0);
                        } else {
                            if (event.ctrlKey) {
                                audio.VnV(audio.ww.holditem, 0.6, 0);
                                Client.sendwsmsg(window.JSON.stringify([11, idd, nM, vmM]));
                            } else Client.sendwsmsg(window.JSON.stringify([8, idd, nM, vmM, wvmvw]));
                        }
                    }
                }
            } else if ((event.keyCode === 67) && (World.PLAYER.ghoul === 0)) {
                if (craftwin === 0) {
                    nVN();
                    NmW = 1;
                    craftwin = 1;
                    World.MwM(AREAS.own);
                    audio.VnV(audio.ww.open, 1, 0);
                } else {
                    audio.VnV(audio.ww.open, 1, 0);
                    nVN();
                }
            } else if ((event.keyCode === 27) && (NmW === 1)) {
                audio.VnV(audio.ww.open, 1, 0);
                nVN();
            }
        }
    };

    function vnW(event) {
        keys.mwMVV(event);
        if ((((event.keyCode === 37) || (event.keyCode === 38)) || (event.keyCode === 39)) || (event.keyCode === 40)) {
            event.preventDefault();
            return false;
        }
    };

    function WwW(event) {
        var NVN = 0;
        for (var wVV = 0; wVV < event.touches.length; wVV++) {
            myply.VWn(NWV, event, event.touches[wVV]);
            if (bagbutt.open !== 0) {
                var MVvmv = myply.state;
                myply.VWv(NWV, myply.NVMMW);
                myply.state = MVvmv;
                var invtr = World.PLAYER.inventory;
                var NwvVw = 0;
                for (var i = 10; i < invtr.length; i++) {
                    if (invtr[i][0] !== 0) {
                        if (inventory[i].mw() === 1) {
                            NwvVw = 1;
                            break;
                        }
                    }
                }
                if (NwvVw === 1) {
                    VNn(NWV);
                    continue;
                }
            }
            if ((World.PLAYER.holditem.inclick === 0) && (NmW === 0)) {
                var nVm = window.Math.floor(NWV.clientX * CanvasUtils.options.MMw);
                var nmW = window.Math.floor(NWV.clientY * CanvasUtils.options.WWvvm);
                switch (World.PLAYER.mvn) {
                    case 2:
                        if (((((World.PLAYER.mwMmN === 1) && (nVm > Game.mmNWn)) && (nmW > Game.vmwNV)) && (nVm < (Game.mmNWn + Game.vwVnW))) && (nmW < (Game.vmwNV + Game.mnNnW))) {
                            nvnNv = 1;
                            nNw.keyCode = 70;
                            nNw.charCode = 70;
                            NmN(nNw);
                            continue;
                        }
                        case 0:
                            if ((((nVm > Game.mNNwM) && (nmW > Game.nNwMM)) && (nVm < (Game.mNNwM + Game.vwVnW))) && (nmW < (Game.nNwMM + Game.mnNnW))) {
                                nvnNv = 1;
                                nNw.keyCode = 69;
                                nNw.charCode = 69;
                                NmN(nNw);
                                continue;
                            }
                            break;
                }
                if (nmW < (screenHeight - (70 * scaleby))) {
                    var WMm = mWmwm * 1.5;
                    var nmV = mWmwm / 4;
                    if (nVm < screencenterX) {
                        var MVM = 30 * scaleby;
                        MWVNw = checkspos.angle(screencenterX - WMm, screencenterY + nmV, nVm, nmW);
                        NVNwm = window.Math.min(checkspos.mappos(nVm, nmW, screencenterX - WMm, screencenterY + nmV), 25);
                        if (nVm < ((screencenterX - WMm) - MVM)) {
                            mWM |= 1;
                            nNw.charCode = 37;
                            nNw.keyCode = 37;
                            vnW(nNw);
                        } else if (nVm > ((screencenterX - WMm) + MVM)) {
                            mWM |= 2;
                            nNw.charCode = 39;
                            nNw.keyCode = 39;
                            vnW(nNw);
                        }
                        if (nmW < ((screencenterY + nmV) - MVM)) {
                            mWM |= 4;
                            nNw.charCode = 38;
                            nNw.keyCode = 38;
                            vnW(nNw);
                        } else if (nmW > ((screencenterY + nmV) + MVM)) {
                            mWM |= 8;
                            nNw.charCode = 40;
                            nNw.keyCode = 40;
                            vnW(nNw);
                        }
                    } else if ((nVm < (screenWidth - (40 * scaleby))) || (nmW > (40 * scaleby))) {
                        NVN = 1;
                        NWV.clientX -= WMm / CanvasUtils.options.MMw;
                        NWV.clientY -= nmV / CanvasUtils.options.MMw;
                        if (World.PLAYER.wvM === 1) {
                            var vVMmn = window.Date.now();
                            if ((vVMmn - MMMvM) < 1000) {
                                vmWNW = 1;
                                NnVMv = NWV.clientX;
                                WNmmw = NWV.clientY;
                                VNn(NWV);
                            }
                            MMMvM = vVMmn;
                        } else {
                            vmWNW = 1;
                            NnVMv = NWV.clientX;
                            WNmmw = NWV.clientY;
                            VNn(NWV);
                        }
                    }
                    continue;
                }
            }
            if ((NVN === 0) && (mWM === 0)) {
                VNn(NWV);
                NVN = 1;
            }
        }
    };

    function nMN(event) {
        var nVm = window.Math.floor(event.changedTouches[0].clientX * CanvasUtils.options.MMw);
        var nmW = window.Math.floor(event.changedTouches[0].clientY * CanvasUtils.options.WWvvm);
        if (nvnNv === 1) nvnNv = 0;
        else if (NmW === 1) vNm(NWV);
        else if ((vmWNW === 1) && (nVm >= screencenterX)) {
            vmWNW = 0;
            NWV.clientX = NnVMv;
            NWV.clientY = WNmmw;
            vNm(NWV);
            return;
        } else if (((World.PLAYER.holditem.inclick === 0) && (nVm < screencenterX)) && (nmW < (screenHeight - (70 * scaleby)))) {
            if ((nVm < (240 * scaleby)) && (nmW < (160 * scaleby))) vNm(NWV);
        } else vNm(NWV);
        if (mWM !== 0) {
            if (mWM & 1) {
                nNw.charCode = 37;
                NmN(nNw);
            }
            if (mWM & 2) {
                nNw.charCode = 39;
                NmN(nNw);
            }
            if (mWM & 4) {
                nNw.charCode = 38;
                NmN(nNw);
            }
            if (mWM & 8) {
                nNw.charCode = 40;
                NmN(nNw);
            }
            mWM = 0;
        }
    };

    function Www(event) {};

    function vnv(event) {
        var NVN = 0;
        var mWVWv = 0;
        for (var wVV = 0; wVV < event.touches.length; wVV++) {
            myply.VWn(NWV, event, event.touches[wVV]);
            if (bagbutt.open !== 0) {
                var invtr = World.PLAYER.inventory;
                var NwvVw = 0;
                for (var i = 10; i < invtr.length; i++) {
                    if (invtr[i][0] !== 0) {
                        if (inventory[i].mw() === 1) {
                            NwvVw = 1;
                            break;
                        }
                    }
                }
                if (NwvVw === 1) {
                    wVv(NWV);
                    continue;
                }
            }
            if ((World.PLAYER.holditem.inclick === 0) && (NmW === 0)) {
                var nVm = window.Math.floor(NWV.clientX * CanvasUtils.options.MMw);
                var nmW = window.Math.floor(NWV.clientY * CanvasUtils.options.WWvvm);
                if (nmW < (screenHeight - (70 * scaleby))) {
                    var WMm = mWmwm * 1.5;
                    var nmV = mWmwm / 4;
                    if (nVm < screencenterX) {
                        mWVWv = 1;
                        var VNM = 0;
                        var MVM = 30 * scaleby;
                        MWVNw = checkspos.angle(screencenterX - WMm, screencenterY + nmV, nVm, nmW);
                        NVNwm = window.Math.min(checkspos.mappos(nVm, nmW, screencenterX - WMm, screencenterY + nmV), 25);
                        if (nVm < ((screencenterX - WMm) - MVM)) VNM |= 1;
                        else if (nVm > ((screencenterX - WMm) + MVM)) VNM |= 2;
                        if (nmW < ((screencenterY + nmV) + -MVM)) VNM |= 4;
                        else if (nmW > ((screencenterY + nmV) + MVM)) VNM |= 8;
                        if (((VNM & 1) === 1) && ((mWM & 1) !== 1)) {
                            nNw.charCode = 37;
                            vnW(nNw);
                        } else if (((VNM & 1) !== 1) && ((mWM & 1) === 1)) {
                            nNw.charCode = 37;
                            NmN(nNw);
                        }
                        if (((VNM & 2) === 2) && ((mWM & 2) !== 2)) {
                            nNw.charCode = 39;
                            vnW(nNw);
                        } else if (((VNM & 2) !== 2) && ((mWM & 2) === 2)) {
                            nNw.charCode = 39;
                            NmN(nNw);
                        }
                        if (((VNM & 4) === 4) && ((mWM & 4) !== 4)) {
                            nNw.charCode = 38;
                            vnW(nNw);
                        } else if (((VNM & 4) !== 4) && ((mWM & 4) === 4)) {
                            nNw.charCode = 38;
                            NmN(nNw);
                        }
                        if (((VNM & 8) === 8) && ((mWM & 8) !== 8)) {
                            nNw.charCode = 40;
                            vnW(nNw);
                        } else if (((VNM & 8) !== 8) && ((mWM & 8) === 8)) {
                            nNw.charCode = 40;
                            NmN(nNw);
                        }
                        mWM = VNM;
                        continue;
                    } else if ((nVm < (screenWidth - (40 * scaleby))) || (nmW > (40 * scaleby))) {
                        NVN = 1;
                        NWV.clientX -= WMm / CanvasUtils.options.MMw;
                        NWV.clientY -= nmV / CanvasUtils.options.MMw;
                        NnVMv = NWV.clientX;
                        WNmmw = NWV.clientY;
                        wVv(NWV);
                    }
                }
            }
            if ((NVN === 0) && (mWM === 0)) {
                wVv(NWV);
                NVN = 1;
            }
        }
        if ((mWVWv === 0) && (mWM !== 0)) {
            if (mWM & 1) {
                nNw.charCode = 37;
                NmN(nNw);
            }
            if (mWM & 2) {
                nNw.charCode = 39;
                NmN(nNw);
            }
            if (mWM & 4) {
                nNw.charCode = 38;
                NmN(nNw);
            }
            if (mWM & 8) {
                nNw.charCode = 40;
                NmN(nNw);
            }
            mWM = 0;
        }
    };

    function MouseWheelHandler(e)
    {
        var e = window.event || e;
            Render.scale += (e.wheelDelta / 5000);
        return false;
    };

    function MmNNN() {
        if (mobile === 0) window.addEventListener("wheel", MouseWheelHandler, false);
        if (mobile === 0) window.addEventListener('mousedown', VNn, false);
        if (mobile === 0) window.addEventListener('mouseup', vNm, false);
        if (mobile === 0) window.addEventListener('mousemove', wVv, false);
        if (mobile === 0) window.addEventListener('keyup', NmN, false);
        if (mobile === 0) window.addEventListener('keydown', vnW, false);
        if (mobile === 1) window.addEventListener('touchstart', WwW, false);
        if (mobile === 1) window.addEventListener('touchend', nMN, false);
        if (mobile === 1) window.addEventListener('touchcancel', Www, false);
        if (mobile === 1) window.addEventListener('touchmove', vnv, false);
    };

    function VVwMW() {
        if (mobile === 0) window.addEventListener("wheel", MouseWheelHandler, false);
        if (mobile === 0) window.removeEventListener('mousedown', VNn, false);
        if (mobile === 0) window.removeEventListener('mouseup', vNm, false);
        if (mobile === 0) window.removeEventListener('mousemove', wVv, false);
        if (mobile === 0) window.removeEventListener('keyup', NmN, false);
        if (mobile === 0) window.removeEventListener('keydown', vnW, false);
        if (mobile === 1) window.removeEventListener('touchstart', WwW, false);
        if (mobile === 1) window.removeEventListener('touchend', nMN, false);
        if (mobile === 1) window.removeEventListener('touchcancel', Www, false);
        if (mobile === 1) window.removeEventListener('touchmove', vnv, false);
    };
    return {
        quit: quit,
        init: init,
        run: run,
        update: update,
        draw: draw
    };
})();
var Score = (function() {
    function checkstatenull(Mnn) {};

    function NvwNv() {
        quit(Game);
    };

    function NvN() {
        NvwNv();
    };
    var NNN = 0;
    var nMwNn = {
        src: "img/adblocker-msg.png",
        W: {
            m: 0
        }
    };
    var VmVNw = 0;
    var VwvVv = -1;
    var WwwvV = null;
    var WMwMN = {
        W: null
    };
    var wNnwN = null;
    var nwWMv = {
        W: null
    };
    var WMWVW = -1;
    var MnvWv = {
        W: null
    };
    var MNn = null;
    var vvWmM = -1;
    var VMnMw = null;
    var vMMnW = {
        W: null
    };

    function nmNnw() {
        var WX = mNw.mv.x;
        var WY = mNw.mv.y;
        var wVw = WX / scaleby;
        var VVm = WY / scaleby;
        if ((MNn === null) || (WMWVW !== World.PLAYER.exp)) {
            WMWVW = World.PLAYER.exp;
            MNn = vM.showtxt(WMWVW + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            MnvWv.W = MNn;
            MnvWv.W.m = 1;
        }
        CanvasUtils.putonscreen(MnvWv, wVw + 280, VVm + 117, 0, 0, 0, 1);
        if ((WwwvV === null) || (VwvVv !== World.PLAYER.level)) {
            VwvVv = World.PLAYER.level;
            WwwvV = vM.showtxt(VwvVv + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            wNnwN = vM.showtxt(window.Math.floor(VwvVv / 2), "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            WMwMN.W = WwwvV;
            WMwMN.W.m = 1;
            nwWMv.W = wNnwN;
            nwWMv.W.m = 1;
        }
        CanvasUtils.putonscreen(WMwMN, wVw + 108, VVm + 117, 0, 0, 0, 1);
        CanvasUtils.putonscreen(nwWMv, wVw + 288, VVm + 147, 0, 0, 0, 1);
        if ((VMnMw === null) || (vvWmM !== World.PLAYER.nWwnN)) {
            vvWmM = World.PLAYER.nWwnN;
            VMnMw = vM.showtxt(vvWmM + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            vMMnW.W = VMnMw;
            vMMnW.W.m = 1;
        }
        CanvasUtils.putonscreen(vMMnW, wVw + 453, VVm + 117, 0, 0, 0, 1);
        var inventory = Game.inventory;
        var invtr = World.PLAYER.inventory;
        var vvv = invtr.length;
        var MVM = 50 * scaleby;
        var inmapy = WY + (182 * scaleby);
        var inmapx = WX + (80 * scaleby);
        var WnVvn = scaleby;
        scaleby = scaleby - (0.3 * scaleby);
        for (var i = 0; i < vvv; i++) {
            var wm = inventory[i];
            if (invtr[i][0] !== 0) Render.vmmMn(wm, invtr[i], inmapx, inmapy, Game.vwn, Game.WMn);
            inmapx += MVM;
        }
        scaleby = WnVvn;
        if (Home.adblocker === 1) {
            var Vw = WNW.mWV.vvw((VmVNw > 500) ? ((1000 - VmVNw) / 500) : (VmVNw / 500));
            ctx.globalAlpha = 0.7;
            CanvasUtils.putonscreen(nMwNn, wVw + 288, VVm + 193, 0, 0, 0, 1 + (0.04 * Vw));
            ctx.globalAlpha = 1;
            VmVNw = (VmVNw + delta) % 1000;
        }
    };
    var waitAds = 0;
    var mNw;
    var playagainbutt;
    var vWv;

    function init() {
        mNw = vM.mVV(541, 324, "img/scoreboardnew.png");
        playagainbutt = vM.vMM(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
        vWv = vM.vMM(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 500;
    var WWN = 0;
    var VNvnM = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.wWM, 0.05);
    };
    var Nmv = 500;
    var mwm = 0;
    var WVWWm = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.wMn, 0.05);
    };
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        Client.checkstatenull = checkstatenull;
        Client.NvN = NvN;
        World.PLAYER.wvM = 0;
        World.PLAYER.id = 0;
        Render.vVwvn(0);
        Render.NvwNm();
        for (var i = 0; i < World.PLAYER.inventory.length; i++) {
            for (var j = 0; j < 4; j++) World.PLAYER.inventory[i][j] = 0;
        }
        var MWMwV = mvv[window.Math.min(mvv.length - 1, World.PLAYER.level)];
        for (var i = 0; i < MWMwV.length; i++) {
            var idd = MWMwV[i];
            if (idd.id !== 0) Game.inventory[i].MVN(items[idd.id].img.src, items[idd.id].img.W);
            var invtr = World.PLAYER.inventory[i];
            invtr[1] = idd.nM;
            invtr[2] = 0;
            invtr[3] = idd.health;
            invtr[0] = idd.id;
        }
        waitAds = 5000;
        if (Loader.getURLData("admin") === null) {
            window["YMPB"]["refresh"]();
        }
        CanvasUtils.MNwmM(Score);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
    };

    function quit(wMN) {
        Home.MVwVM.display = "none";
        MVv = wMN;
        VVwMW();
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1) MNw = 0;
            if (mwm === 1) vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        mNw.mv.x = (screencenterX - window.Math.floor(270 * scaleby)) - vMm;
        mNw.mv.y = window.Math.max(0, (screencenterY - window.Math.floor(162 * scaleby)) + window.Math.floor(-135 * scaleby)) - wwv;
        playagainbutt.mv.x = ((screencenterX - window.Math.floor(61 * scaleby)) + window.Math.floor(-100 * scaleby)) - vMm;
        playagainbutt.mv.y = window.Math.max(0, (screencenterY - window.Math.floor(17 * scaleby)) + window.Math.floor(-35 * scaleby)) - wwv;
        vWv.mv.x = ((screencenterX - window.Math.floor(99 * scaleby)) + window.Math.floor(100 * scaleby)) - vMm;
        vWv.mv.y = playagainbutt.mv.y;
        var mVvwv = window.Math.min(scaleby, 1);
        window.document.getElementById("trevda").style.top = window.Math.floor((screencenterY - 125) + (140 * mVvwv)) + "px";
        window.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
        window.document.getElementById("trevda").style.left = window.Math.floor(screencenterX - (325 * mVvwv)) + "px";
    };

    function draw() {
        if (MMVwV() === 0) return;
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        Render.VMMWm();
        if (MNw > 0) {
            NNN = mwn(1 - (MNw / WwM));
            if (mwm === 1) NNN = 1 - window.Math.abs(NNN);
            NNN = 1 - NNN;
        }
        ctx.globalAlpha = 0.3 * NNN;
        ctx.fillStyle = "#000000";
        ctx.fillRect(0, 0, screenWidth, screenHeight);
        ctx.globalAlpha = 1;
        mNw.draw();
        vWv.draw();
        nmNnw();
        Render.vMNVm();
        vWn.nwwnv();
        if (waitAds > 0) {
            waitAds = window.Math.max(0, waitAds - delta);
            CanvasUtils.putonscreen(adswait[window.Math.floor(waitAds / 1000)], (playagainbutt.mv.x / scaleby) + 61.5, (playagainbutt.mv.y / scaleby) + 17.75, 0, 0, 0, 1);
        } else playagainbutt.draw();
    };

    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                playagainbutt.NNv(vM.Wmm);
                vWv.NNv(vM.Wmm);
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                if (World.PLAYER.WMnWN !== 1) Home.MVwVM.display = "inline-block";
                window.document.getElementById("bod").style.backgroundColor = "#46664d";
                MmNNN();
            }
            MNw -= delta;
        }
        return 1;
    };

    function VNn(event) {
        myply.VWv(event, myply.NVMMW);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
        }
    };

    function vNm(event) {
        myply.VWv(event, myply.MnNNW);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
            if (waitAds <= 0) {
                Home.joinServer();
                audio.VnV(audio.ww.play, 1, 0);
            }
            return;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
            if (((Client.state & Client.binary.b2) === 0) && ((Client.state & Client.binary.b1) === 0)) {
                quit(Home);
                audio.VnV(audio.ww.button, 1, 0);
                return;
            }
        }
    };

    function wVv(event) {
        myply.VWv(event, myply.wwwmw);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
        }
    };

    function WwW(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            VNn(NWV);
        }
    };

    function nMN(event) {
        vNm(NWV);
    };

    function Www(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            vNm(NWV);
        }
    };

    function vnv(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            wVv(NWV);
        }
    };

    function MmNNN() {
        if (mobile === 0) window.addEventListener('mousedown', VNn, false);
        if (mobile === 0) window.addEventListener('mouseup', vNm, false);
        if (mobile === 0) window.addEventListener('mousemove', wVv, false);
        if (mobile === 1) window.addEventListener('touchstart', WwW, false);
        if (mobile === 1) window.addEventListener('touchend', nMN, false);
        if (mobile === 1) window.addEventListener('touchcancel', Www, false);
        if (mobile === 1) window.addEventListener('touchmove', vnv, false);
    };

    function VVwMW() {
        if (mobile === 0) window.removeEventListener('mousedown', VNn, false);
        if (mobile === 0) window.removeEventListener('mouseup', vNm, false);
        if (mobile === 0) window.removeEventListener('mousemove', wVv, false);
        if (mobile === 1) window.removeEventListener('touchstart', WwW, false);
        if (mobile === 1) window.removeEventListener('touchend', nMN, false);
        if (mobile === 1) window.removeEventListener('touchcancel', Www, false);
        if (mobile === 1) window.removeEventListener('touchmove', vnv, false);
    };
    return {
        quit: quit,
        init: init,
        run: run,
        update: update,
        draw: draw
    };
})();
var Rank = (function() {
    function checkstatenull(Mnn) {};

    function NvwNv() {
        quit(Game);
    };

    function NvN() {
        NvwNv();
    };
    var NNN = 0;
    var vWvVM = -1;
    var VmvNV = null;
    var vnvvM = {
        W: null
    };
    var mvNVM = -1;
    var mmvMV = {
        W: null
    };
    var NmwnM = null;
    var vvWmM = -1;
    var VMnMw = null;
    var vMMnW = {
        W: null
    };

    function nmNnw() {
        var WX = mNw.mv.x;
        var WY = mNw.mv.y;
        var wVw = WX / scaleby;
        var VVm = WY / scaleby;
        if ((NmwnM === null) || (mvNVM !== World.WVw)) {
            mvNVM = World.WVw;
            NmwnM = vM.showtxt("#" + window.Math.max(mvNVM, 1), "'Viga', sans-serif", "#FFFFFF", 60, 140, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            mmvMV.W = NmwnM;
            mmvMV.W.m = 1;
        }
        CanvasUtils.putonscreen(mmvMV, wVw + 207, VVm + 93, 0, 0, 0, 1);
        if ((VmvNV === null) || (vWvVM !== World.PLAYER.VmNwm)) {
            vWvVM = World.PLAYER.VmNwm;
            var vMWwM = window.Math.floor((window.Date.now() - World.PLAYER.VmNwm) / 1000);
            var wWvWM = window.Math.floor(vMWwM / 60);
            var NNvMn = vMWwM % 60;
            VmvNV = vM.showtxt((((((wWvWM < 10) ? "0" : "") + wWvWM) + ":") + ((NNvMn < 10) ? "0" : "")) + NNvMn, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            vnvvM.W = VmvNV;
            vnvvM.W.m = 1;
        }
        CanvasUtils.putonscreen(vnvvM, wVw + 110, VVm + 100, 0, 0, 0, 1);
        if ((VMnMw === null) || (vvWmM !== World.PLAYER.nWwnN)) {
            vvWmM = World.PLAYER.nWwnN;
            VMnMw = vM.showtxt(vvWmM + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            vMMnW.W = VMnMw;
            vMMnW.W.m = 1;
        }
        CanvasUtils.putonscreen(vMMnW, wVw + 309, VVm + 100, 0, 0, 0, 1);
    };
    var waitAds = 0;
    var mNw;
    var playagainbutt;
    var vWv;

    function init() {
        mNw = vM.mVV(414, 207, "img/scoreboard-br.png");
        playagainbutt = vM.vMM(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
        vWv = vM.vMM(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 500;
    var WWN = 0;
    var VNvnM = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.wWM, 0.05);
    };
    var Nmv = 500;
    var mwm = 0;
    var WVWWm = function(mMn) {
        return WNW.mWV.MWnmm(mMn, WNW.mWV.wMn, 0.05);
    };
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        Client.checkstatenull = checkstatenull;
        Client.NvN = NvN;
        World.PLAYER.wvM = 0;
        World.PLAYER.id = 0;
        Render.vVwvn(0);
        Render.NvwNm();
        waitAds = 5000;
        window["YMPB"]["refresh"]();
        CanvasUtils.MNwmM(Rank);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
    };

    function quit(wMN) {
        Home.MVwVM.display = "none";
        MVv = wMN;
        VVwMW();
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1) MNw = 0;
            if (mwm === 1) vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        mNw.mv.x = (screencenterX - window.Math.floor(207 * scaleby)) - vMm;
        mNw.mv.y = window.Math.max(0, (screencenterY - window.Math.floor(103 * scaleby)) + window.Math.floor(-135 * scaleby)) - wwv;
        playagainbutt.mv.x = ((screencenterX - window.Math.floor(61 * scaleby)) + window.Math.floor(-100 * scaleby)) - vMm;
        playagainbutt.mv.y = window.Math.max(0, (screencenterY - window.Math.floor(17 * scaleby)) + window.Math.floor(-70 * scaleby)) - wwv;
        vWv.mv.x = ((screencenterX - window.Math.floor(99 * scaleby)) + window.Math.floor(70 * scaleby)) - vMm;
        vWv.mv.y = playagainbutt.mv.y;
        var mVvwv = scaleby;
        window.document.getElementById("trevda").style.top = window.Math.floor((screencenterY - 125) + (130 * mVvwv)) + "px";
        window.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
    };

    function draw() {
        if (MMVwV() === 0) return;
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        Render.VMMWm();
        if (MNw > 0) {
            NNN = mwn(1 - (MNw / WwM));
            if (mwm === 1) NNN = 1 - window.Math.abs(NNN);
            NNN = 1 - NNN;
        }
        ctx.globalAlpha = 0.3 * NNN;
        ctx.fillStyle = "#000000";
        ctx.fillRect(0, 0, screenWidth, screenHeight);
        ctx.globalAlpha = 1;
        mNw.draw();
        vWv.draw();
        nmNnw();
        Render.vMNVm();
        vWn.nwwnv();
        if (waitAds > 0) {
            waitAds = window.Math.max(0, waitAds - delta);
            CanvasUtils.putonscreen(adswait[window.Math.floor(waitAds / 1000)], (playagainbutt.mv.x / scaleby) + 61.5, (playagainbutt.mv.y / scaleby) + 17.75, 0, 0, 0, 1);
        } else playagainbutt.draw();
    };

    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                playagainbutt.NNv(vM.Wmm);
                vWv.NNv(vM.Wmm);
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                Home.MVwVM.display = "inline-block";
                window.document.getElementById("bod").style.backgroundColor = "#46664d";
                MmNNN();
            }
            MNw -= delta;
        }
        return 1;
    };

    function VNn(event) {
        myply.VWv(event, myply.NVMMW);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
        }
    };

    function vNm(event) {
        myply.VWv(event, myply.MnNNW);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
            if (waitAds <= 0) {
                Home.joinServer();
                audio.VnV(audio.ww.play, 1, 0);
            }
            return;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
            if (((Client.state & Client.binary.b2) === 0) && ((Client.state & Client.binary.b1) === 0)) {
                quit(Home);
                audio.VnV(audio.ww.button, 1, 0);
                return;
            }
        }
    };

    function wVv(event) {
        myply.VWv(event, myply.wwwmw);
        var vnm = 0;
        if (playagainbutt.mw() === 1) {
            vnm = 1;
        }
        if (vWv.mw() === 1) {
            vnm = 1;
        }
    };

    function WwW(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            VNn(NWV);
        }
    };

    function nMN(event) {
        vNm(NWV);
    };

    function Www(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            vNm(NWV);
        }
    };

    function vnv(event) {
        if (event.touches.length > 0) {
            myply.VWn(NWV, event, event.touches[0]);
            wVv(NWV);
        }
    };

    function MmNNN() {
        if (mobile === 0) window.addEventListener('mousedown', VNn, false);
        if (mobile === 0) window.addEventListener('mouseup', vNm, false);
        if (mobile === 0) window.addEventListener('mousemove', wVv, false);
        if (mobile === 1) window.addEventListener('touchstart', WwW, false);
        if (mobile === 1) window.addEventListener('touchend', nMN, false);
        if (mobile === 1) window.addEventListener('touchcancel', Www, false);
        if (mobile === 1) window.addEventListener('touchmove', vnv, false);
    };

    function VVwMW() {
        if (mobile === 0) window.removeEventListener('mousedown', VNn, false);
        if (mobile === 0) window.removeEventListener('mouseup', vNm, false);
        if (mobile === 0) window.removeEventListener('mousemove', wVv, false);
        if (mobile === 1) window.removeEventListener('touchstart', WwW, false);
        if (mobile === 1) window.removeEventListener('touchend', nMN, false);
        if (mobile === 1) window.removeEventListener('touchcancel', Www, false);
        if (mobile === 1) window.removeEventListener('touchmove', vnv, false);
    };
    return {
        quit: quit,
        init: init,
        run: run,
        update: update,
        draw: draw
    };
})();

function exportmapfunc() {
    if (Nnw <= 0) Nnw = 3000;
    else if (Nnw <= 500) Nnw = 3000 - Nnw;
    else if (Nnw <= 2500) Nnw = 2500;
    var NvV = "";
    NvV += wMNww(wNnwm);
    NvV += wMNww(nnvNN);
    NvV += wMNww(NWWvM);
    NvV += wMNww(MNvmw);
    var vMV = window.document.createElement('textarea');
    vMV["value"] = NvV;
    window.document["body"]["appendChild"](vMV);
    vMV["select"]();
    window.document["execCommand"]('copy');
    window.document["body"]["removeChild"](vMV);
};

var Nnw = 0;

function wMNww(vV) {
    var NvV = "";
    var Nvw = Entitie.Wvm[vV];
    var wWv = Entitie.border[vV];
    var wVN = wWv.border;
    for (i = 0; i < wVN; i++) {
        var player = Nvw[wWv.nnN[i]];
        var idd = items[player.nNN >> 7];
        NvV += ("!b=" + idd.id) + ":";
        if (idd.nvN !== 0) NvV += player.nvN + ":";
        NvV += (((player.j + ":") + player.i) + ":") + ((player.nNN >> 5) & 3);
    }
    return NvV;
};

var Editor = (function() {
    var NmW = 0;
    var bordmapwin = 0;
    var settingwin = 0;
    var MNnnv = 0;
    var emptyinvslot = CanvasUtils.loadImage("img/inv-empty.png");
    var WwvNM = [emptyinvslot, emptyinvslot, emptyinvslot];
    var Wnw = [];
    var NWw = 0;

    function MVWMn() {
        World.PLAYER.id = 1;
        World.playerNumber = 2;
        World.gameMode = 0;
        World.PLAYER.canvasH = 0;
        World.PLAYER.Wvv[i] = 0;
        World.PLAYER.wvM = 1;
        World.PLAYER.wNw = 0;
        World.PLAYER.vVVnm = [
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1]
        ];
        World.MnW.MWw.value = World.MnW.MWw.WWw;
        World.MnW.MWw.vww = -1;
        World.VwvMN([0, window.document.getElementById("nicknameInput").value]);
        World.MVMwn(0, 0);
        Render.reset(window.undefined, 0, 0.07);
        Render.scale = 0;
        Entitie.NWnwm();
        World.PLAYER.nvMwN = 0;
        World.PLAYER.putableimg = 0;
        vmV = 0;
        mnnMn(1, INSplayers, 550, 550, 21 << 8, 0);
    };

    function MVVMv(NWNVm) {
        nVN();
        NmW = 1;
        if (NWNVm === 1) craftwin = 1;
        else if (NWNVm === 2) containerwin = 1;
    };

    function nVN() {
        NmW = 0;
        closebutt.NNv(vM.Wmm);
        bordmapwin = 0;
        settingwin = 0;
        craftwin = 0;
        containerwin = 0;
        teamwin = 0;
        World.MNNMM();
    };
    var nmMMm = 0;
    var closebutt = vM.vMM(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
    var highpartout = [CanvasUtils.loadImage("img/high-particules-out.png"), CanvasUtils.loadImage("img/high-particules-in.png"), CanvasUtils.loadImage("img/high-particules-click.png")];
    var wVwnm = vM.vMM(54, 42, null, highpartout);
    var vWmmV = [CanvasUtils.loadImage("img/low-particules-out.png"), CanvasUtils.loadImage("img/low-particules-in.png"), CanvasUtils.loadImage("img/low-particules-click.png")];
    var VnWMV = vM.vMM(54, 42, null, vWmmV);
    var vVvNM = [CanvasUtils.loadImage("img/no-particules-out.png"), CanvasUtils.loadImage("img/no-particules-in.png"), CanvasUtils.loadImage("img/no-particules-click.png")];
    var wwMwv = vM.vMM(54, 42, null, vVvNM);
    var VVVMw = [CanvasUtils.loadImage("img/high-resolution-out.png"), CanvasUtils.loadImage("img/high-resolution-in.png"), CanvasUtils.loadImage("img/high-resolution-click.png")];
    var wWNnw = vM.vMM(54, 42, null, VVVMw);
    var wmnmv = [CanvasUtils.loadImage("img/medium-resolution-out.png"), CanvasUtils.loadImage("img/medium-resolution-in.png"), CanvasUtils.loadImage("img/medium-resolution-click.png")];
    var nvwMN = vM.vMM(54, 42, null, wmnmv);
    var vmVnn = [CanvasUtils.loadImage("img/low-resolution-out.png"), CanvasUtils.loadImage("img/low-resolution-in.png"), CanvasUtils.loadImage("img/low-resolution-click.png")];
    var MNVVn = vM.vMM(54, 42, null, vmVnn);
    var NwVwn = [CanvasUtils.loadImage("img/azerty-button-out.png"), CanvasUtils.loadImage("img/azerty-button-in.png"), CanvasUtils.loadImage("img/azerty-button-click.png")];
    var VmvmN = vM.vMM(81, 33, null, NwVwn);
    var NMnMN = [CanvasUtils.loadImage("img/qwerty-button-out.png"), CanvasUtils.loadImage("img/qwerty-button-in.png"), CanvasUtils.loadImage("img/qwerty-button-click.png")];
    var WMVVn = vM.vMM(87, 33, null, NMnMN);
    var soundonbutt = [CanvasUtils.loadImage("img/sound-on-out.png"), CanvasUtils.loadImage("img/sound-on-in.png"), CanvasUtils.loadImage("img/sound-on-click.png")];
    var soundoffbutt = [CanvasUtils.loadImage("img/sound-off-out.png"), CanvasUtils.loadImage("img/sound-off-in.png"), CanvasUtils.loadImage("img/sound-off-click.png")];
    var wvNNV = vM.vMM(51, 36, null, soundonbutt);
    var WVnnn = vM.vMM(51, 36, null, soundoffbutt);
    var NmVWV = vM.vMM(51, 36, null, soundonbutt);
    var vVMWm = vM.vMM(51, 36, null, soundoffbutt);
    var mWM = 0;
    var MWVNw = 0;
    var NVNwm = 0;
    var MMMvM = 0;
    var vmWNW = 0;
    var NnVMv = 0;
    var WNmmw = 0;
    var nvnNv = 0;
    var vmV = 0;

    function mnnMn(socketid, vV, WX, WY, nNN, Mnn) {
        var MW = Entitie.get(socketid, vmV, vmV, vV);
        mvMMV(MW, socketid, vmV, vmV, vV, WX, WY, WX, WY, nNN, 0, Mnn);
        vmV++;
    };

    function wwMmV(MWwVN) {
        MVWMn();
        MWwVN = MWwVN.split("!b=");
        MWwVN.shift();
        for (var i = 0; i < MWwVN.length; i++) {
            var Nn = MWwVN[i].split(":");
            if (Nn.length > 4) Vnvmv(Nn[0], Nn[1], Nn[3], Nn[2], Nn[4]);
            else Vnvmv(Nn[0], 0, Nn[2], Nn[1], Nn[3]);
        }
    };

    function Vnvmv(NNWVv, nvN, i, j, Rot) {
        NNWVv = window.Number(NNWVv) >>> 0;
        nvN = window.Number(nvN) >>> 0;
        i = window.Number(i) >>> 0;
        j = window.Number(j) >>> 0;
        Rot = window.Number(Rot) >>> 0;
        if (((Rot > 3) || (i >= nmn.height)) || (j >= nmn.height)) return;
        var Nn = items[NNWVv];
        if (((Nn === window.undefined) || (Nn.nvN === window.undefined)) || ((Nn.nvN > 0) && (Nn.Nn.length <= nvN))) return;
        var Rot = (Nn.Mvw === 1) ? 0 : Rot;
        var WX = (Nn.Wwv[Rot] + 50) + (100 * j);
        var WY = (Nn.nWn[Rot] + 50) + (100 * i);
        var vV = 0;
        switch ((Nn.nvN === 0) ? Nn.WvV : Nn.nvN[nvN].WvV) {
            case 0:
                vV = wNnwm;
                break;
            case 1:
                vV = nnvNN;
                break;
            case 2:
                vV = NWWvM;
                break;
            default:
                vV = MNvmw;
                break;
        }
        nWMWn(1, vV, WX, WY, Rot, 1 + ((Nn.nvN === 0) ? 0 : (nvN << 5)), Nn.id);
    };

    function nWMWn(socketid, vV, WX, WY, Rot, Mnn, nvN) {
        var MW = Entitie.get(socketid, vmV, vmV, vV);
        mvMMV(MW, socketid, vmV, vmV, vV, WX, WY, WX, WY, (nvN << 7) + (Rot << 5), 0, Mnn);
        var update = ENTITIES[vV].update;
        if (update !== window.undefined) update(MW, WX, WY);
        vmV++;
    };

    function wMNww(vV) {
        var NvV = "";
        var Nvw = Entitie.Wvm[vV];
        var wWv = Entitie.border[vV];
        var wVN = wWv.border;
        for (i = 0; i < wVN; i++) {
            var player = Nvw[wWv.nnN[i]];
            var idd = items[player.nNN >> 7];
            NvV += ("!b=" + idd.id) + ":";
            if (idd.nvN !== 0) NvV += player.nvN + ":";
            NvV += (((player.j + ":") + player.i) + ":") + ((player.nNN >> 5) & 3);
        }
        return NvV;
    };

    function nwmMw(vV, WX, WY) {
        var Nvw = Entitie.Wvm[vV];
        var wWv = Entitie.border[vV];
        var wVN = wWv.border;
        for (i = 0; i < wVN; i++) {
            var Nn = Nvw[wWv.nnN[i]];
            if ((((Nn.x >= WX) && (Nn.x <= (WX + 100))) && (Nn.y >= WY)) && (Nn.y <= (WY + 100))) {
                Entitie.remove(Nn.socketid, Nn.id, Nn.mvN, vV, Nn.nNN);
                return;
            }
        }
    };
    

    function vnMVv() {
        if ((myply.state === myply.NVMMW) && (World.PLAYER.click === 0)) {
            if (World.PLAYER.wvM === 1) {
                World.PLAYER.click = -1;
                if (World.PLAYER.nwVMm === 1) {
                    if ((((World.PLAYER.Vmm !== -1) && (World.PLAYER.NNV !== -1)) && (World.PLAYER.Vmm !== nmn.width)) && (World.PLAYER.NNV !== nmn.height)) Vnvmv(World.PLAYER.putableimg, World.PLAYER.mWmnv, World.PLAYER.NNV, World.PLAYER.Vmm, World.PLAYER.nvMwN);
                } else {
                    var WX = 100 * World.PLAYER.Vmm;
                    var WY = 100 * World.PLAYER.NNV;
                    nwmMw(wNnwm, WX, WY);
                    nwmMw(nnvNN, WX, WY);
                    nwmMw(NWWvM, WX, WY);
                    nwmMw(MNvmw, WX, WY);
                }
            }
        } else if (myply.state === myply.MnNNW) {
            if (World.PLAYER.wvM === 1) {
                nmMMm = 0;
                World.PLAYER.click = 0;
            }
        }
    };
    var NnMMn = window.Math.sqrt(2) / 2;

    function nNvvV() {
        var nn = 0;
        if (keys.leftgo() === 1) nn |= 1;
        if (keys.rightgo() === 1) nn |= 2;
        if (keys.downgo() === 1) nn |= 4;
        if (keys.straightgo() === 1) nn |= 8;
        if (nn > 0) {
            var socketid = World.socket[1].nnmnv;
            if (socketid === -1) return;
            var PLAYER = Entitie.Wvm[INSplayers][socketid];
            WvvVn = (((nn & 3) && (nn & 12)) ? NnMMn : 1) * ((keys.shiftgo() === 0) ? (delta * 1.5) : (delta * 11));
            if (nn & 1) PLAYER.rx = PLAYER.x - WvvVn;
            else if (nn & 2) PLAYER.rx = PLAYER.x + WvvVn;
            if (nn & 8) PLAYER.ry = PLAYER.y - WvvVn;
            else if (nn & 4) PLAYER.ry = PLAYER.y + WvvVn;
            PLAYER.rx = window.Math.max(0, window.Math.min(PLAYER.rx, nmn.width * 100));
            PLAYER.ry = window.Math.max(0, window.Math.min(PLAYER.ry, nmn.height * 100));
            PLAYER.wnw = PLAYER.rx;
            PLAYER.WVM = PLAYER.ry;
        }
    };

    function wWNmN() {
        var WX = mapbuildingbutton.mv.x - (5 * scaleby);
        var WY = mapbuildingbutton.mv.y + (74 * scaleby);
        var MVM = 45 * scaleby;
        for (var i = 0; i < NWw; i++) {
            var wm = Wnw[i];
            wm.mv.x = WX + ((i % 8) * MVM);
            wm.mv.y = WY + (window.Math.floor(i / 8) * MVM);
            wm.draw();
        }
    };

    function exportmapfunc() {
        if (Nnw <= 0) Nnw = 3000;
        else if (Nnw <= 500) Nnw = 3000 - Nnw;
        else if (Nnw <= 2500) Nnw = 2500;
        var NvV = "";
        NvV += wMNww(wNnwm);
        NvV += wMNww(nnvNN);
        NvV += wMNww(NWWvM);
        NvV += wMNww(MNvmw);
        var vMV = window.document.createElement('textarea');
        vMV["value"] = NvV;
        window.document["body"]["appendChild"](vMV);
        vMV["select"]();
        window.document["execCommand"]('copy');
        window.document["body"]["removeChild"](vMV);
    };

    function markposition() {
        if (Nnw > 0) {
            Nnw -= delta;
            if (Nnw > 2500) ctx.globalAlpha = WNW.mWV.vvw((3000 - Nnw) / 500);
            else if (Nnw < 500) ctx.globalAlpha = WNW.mWV.vvw(Nnw / 500);
            ctx.drawImage(VWWvn, copypastebutton.mv.x - (85 * scaleby), copypastebutton.mv.y - (40 * scaleby), VWWvn.Wvw * scaleby, VWWvn.mNm * scaleby);
            ctx.globalAlpha = 1;
        }
        if (NVVNW[World.PLAYER.mmm] === window.undefined) NVVNW[World.PLAYER.mmm] = [];
        if (NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] === window.undefined) NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] = vM.showtxt(((("(" + World.PLAYER.mmm) + ",") + World.PLAYER.NWM) + ")", "'Viga', sans-serif", "#FFFFFF", 52, 455, "#000000", 22, 22, window.undefined, window.undefined, 0.4, window.undefined, "#000000", 15.6);
        var W = NVVNW[World.PLAYER.mmm][World.PLAYER.NWM];
        ctx.drawImage(W, 5 * scaleby, zoombutton.mv.y - (42 * scaleby), W.Wvw * scaleby, W.mNm * scaleby);
    };

    function markposition() {
        if (Nnw > 0) {
            Nnw -= delta;
            if (Nnw > 2500) ctx.globalAlpha = WNW.mWV.vvw((3000 - Nnw) / 500);
            else if (Nnw < 500) ctx.globalAlpha = WNW.mWV.vvw(Nnw / 500);
            ctx.drawImage(VWWvn, copypastebutton.mv.x - (85 * scaleby), copypastebutton.mv.y - (40 * scaleby), VWWvn.Wvw * scaleby, VWWvn.mNm * scaleby);
            ctx.globalAlpha = 1;
        }
        if (NVVNW[World.PLAYER.mmm] === window.undefined) NVVNW[World.PLAYER.mmm] = [];
        if (NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] === window.undefined) NVVNW[World.PLAYER.mmm][World.PLAYER.NWM] = vM.showtxt(((("(" + World.PLAYER.mmm) + ",") + World.PLAYER.NWM) + ")", "'Viga', sans-serif", "#FFFFFF", 52, 455, "#000000", 22, 22, window.undefined, window.undefined, 0.4, window.undefined, "#000000", 15.6);
        var W = NVVNW[World.PLAYER.mmm][World.PLAYER.NWM];
        ctx.drawImage(W, 5 * scaleby, zoombutton.mv.y - (42 * scaleby), W.Wvw * scaleby, W.mNm * scaleby);
    };
    var VWWvn = null;
    var VWWvn = null;
    var Nnw = 0;
    var NVVNW = [];
    var vVnNn = 0;
    var settingbox;
    var bordermap;
    var minimap;
    var fullscreenimg;
    var settingsimg;
    var minimapbutt;
    var logicbutton;
    var mapexplobutton;
    var maproadbutton;
    var mapfurniturebutton;
    var mapbuildingbutton;
    var zoombutton;
    var unzoombutton;
    var mapdeletebutton;
    var importbutton;
    var copypastebutton;
    var homebutton;
    var zoombutton;
    var unzoombutton;

    function init() {
        VWWvn = vM.showtxt("Copied to clipboard", "'Viga', sans-serif", "#FFFFFF", 40, 350, "#000000", 18, 18, window.undefined, window.undefined, 0.6);
        for (i = 0; i < 64; i++) Wnw.push(vM.vMM(40, 40, null, WwvNM));
        settingbox = vM.mVV(269, 267, "img/settings-box.png");
        bordermap = vM.mVV(412, 412, "img/borderBigMinimap2.png");
        minimap = vM.mVV(128, 128, "img/minimap.png");
        fullscreenimg = vM.vMM(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
        settingsimg = vM.vMM(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
        minimapbutt = vM.vMM(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
        logicbutton = vM.vMM(67, 67, ["img/logic-button-out.png", "img/logic-button-in.png", "img/logic-button-click.png"]);
        mapexplobutton = vM.vMM(67, 67, ["img/map-explosive-button-out.png", "img/map-explosive-button-in.png", "img/map-explosive-button-click.png"]);
        maproadbutton = vM.vMM(67, 67, ["img/map-road-button-out.png", "img/map-road-button-in.png", "img/map-road-button-click.png"]);
        mapfurniturebutton = vM.vMM(67, 67, ["img/map-furniture-button-out.png", "img/map-furniture-button-in.png", "img/map-furniture-button-click.png"]);
        mapbuildingbutton = vM.vMM(67, 67, ["img/map-building-button-out.png", "img/map-building-button-in.png", "img/map-building-button-click.png"]);
        zoombutton = vM.vMM(46.5, 46.5, ["img/zoom-button-out.png", "img/zoom-button-in.png", "img/zoom-button-click.png"]);
        unzoombutton = vM.vMM(46.5, 46.5, ["img/unzoom-button-out.png", "img/unzoom-button-in.png", "img/unzoom-button-click.png"]);
        mapdeletebutton = vM.vMM(40, 40, ["img/map-delete-button-out.png", "img/map-delete-button-in.png", "img/map-delete-button-click.png"]);
        importbutton = vM.vMM(46.5, 46.5, ["img/import-button-out.png", "img/import-button-in.png", "img/import-button-click.png"]);
        copypastebutton = vM.vMM(46.5, 46.5, ["img/copy-paste-button-out.png", "img/copy-paste-button-in.png", "img/copy-paste-button-click.png"]);
        homebutton = vM.vMM(60, 60, ["img/home-button-out.png", "img/home-button-in.png", "img/home-button-click.png"]);
    };
    var MVv;
    var NWV = new myply.vNnMv;
    var nNw = new keys.VmwWV;
    var VWm = 1000;
    var WWN = 0;
    var VNvnM = WNW.mWV.wWM;
    var Nmv = 1000;
    var mwm = 0;
    var WVWWm = WNW.mWV.wMn;
    var WwM = 0;
    var MNw = 0;
    var mwn = window.undefined;

    function run() {
        window.document.getElementById("bod").style.backgroundColor = "#46664D";
        nmMMm = 0;
        vWn.nMvWM();
        if (vVnNn === 0) {
            vVnNn = 1;
            var vnvwV = items[item.NvMvM].nvN;
            for (var i = 0; i < vnvwV.length; i++) {
                var idd = vnvwV[i];
                idd.img = {
                    src: [idd.Nn.src, "img/useless.png", "img/useless.png"],
                    W: [{
                        m: 0
                    }, {
                        m: 0
                    }, {
                        m: 0
                    }]
                };
            }
            var vnvwV = items[item.MMnVW].nvN;
            for (var i = 0; i < vnvwV.length; i++) {
                var idd = vnvwV[i];
                idd.img = {
                    src: [idd.Nn.src, "img/useless.png", "img/useless.png"],
                    W: [{
                        m: 0
                    }, {
                        m: 0
                    }, {
                        m: 0
                    }]
                };
            }
        }
        MVWMn();
        CanvasUtils.MNwmM(Editor);
        MNw = Nmv;
        WwM = Nmv;
        mwn = WVWWm;
        mwm = 1;
        update();
    };

    function quit(wMN) {
        nVN();
        vWn.NvwNv();
        MVv = wMN;
        VVwMW();
        MNw = VWm;
        WwM = VWm;
        mwn = VNvnM;
        WWN = 1;
    };

    function update() {
        var vMm = 0;
        var wwv = 0;
        if (MNw > 0) {
            wwv = screenHeight;
            var vnw = mwn(1 - (MNw / WwM));
            if (vnw === 1) MNw = 0;
            if (mwm === 1) vnw = 1 - window.Math.abs(vnw);
            vMm *= vnw;
            wwv *= vnw;
        }
        settingbox.mv.x = (screencenterX - window.Math.floor(134 * scaleby)) + vMm;
        settingbox.mv.y = window.Math.max(0, screencenterY - window.Math.floor(133 * scaleby)) + wwv;
        bordermap.mv.x = (screencenterX - window.Math.floor(206 * scaleby)) + vMm;
        bordermap.mv.y = window.Math.max(0, screencenterY - window.Math.floor(206 * scaleby)) + wwv;
        minimap.mv.x = window.Math.floor(5 * scaleby) - vMm;
        minimap.mv.y = window.Math.floor(5 * scaleby) - wwv;
        fullscreenimg.mv.x = minimap.mv.x + window.Math.floor(126 * scaleby);
        fullscreenimg.mv.y = minimap.mv.y;
        settingsimg.mv.x = fullscreenimg.mv.x;
        settingsimg.mv.y = fullscreenimg.mv.y + window.Math.floor(44.5 * scaleby);
        minimapbutt.mv.x = settingsimg.mv.x;
        minimapbutt.mv.y = settingsimg.mv.y + window.Math.floor(44.5 * scaleby);
        logicbutton.mv.x = ((screenWidth - window.Math.floor(67 * scaleby)) + window.Math.floor(-5 * scaleby)) - vMm;
        logicbutton.mv.y = window.Math.floor(5 * scaleby) - wwv;
        mapexplobutton.mv.x = logicbutton.mv.x + window.Math.floor(-70 * scaleby);
        mapexplobutton.mv.y = window.Math.floor(5 * scaleby) - wwv;
        maproadbutton.mv.x = mapexplobutton.mv.x + window.Math.floor(-70 * scaleby);
        maproadbutton.mv.y = window.Math.floor(5 * scaleby) - wwv;
        mapfurniturebutton.mv.x = maproadbutton.mv.x + window.Math.floor(-70 * scaleby);
        mapfurniturebutton.mv.y = window.Math.floor(5 * scaleby) - wwv;
        mapbuildingbutton.mv.x = mapfurniturebutton.mv.x + window.Math.floor(-70 * scaleby);
        mapbuildingbutton.mv.y = window.Math.floor(5 * scaleby) - wwv;
        zoombutton.mv.x = window.Math.floor(5 * scaleby);
        zoombutton.mv.y = (screenHeight - window.Math.floor(46.5 * scaleby)) + window.Math.floor(-5 * scaleby);
        unzoombutton.mv.x = zoombutton.mv.x + window.Math.floor(50 * scaleby);
        unzoombutton.mv.y = (screenHeight - window.Math.floor(46.5 * scaleby)) + window.Math.floor(-5 * scaleby);
        mapdeletebutton.mv.x = minimap.mv.x + window.Math.floor(89 * scaleby);
        mapdeletebutton.mv.y = minimap.mv.y + window.Math.floor(126 * scaleby);
        importbutton.mv.x = (screenWidth - window.Math.floor(46.5 * scaleby)) + window.Math.floor(-5 * scaleby);
        importbutton.mv.y = (screenHeight - window.Math.floor(46.5 * scaleby)) + window.Math.floor(-5 * scaleby);
        copypastebutton.mv.x = importbutton.mv.x + window.Math.floor(-50 * scaleby);
        copypastebutton.mv.y = (screenHeight - window.Math.floor(46.5 * scaleby)) + window.Math.floor(-5 * scaleby);
        homebutton.mv.x = minimap.mv.x;
        homebutton.mv.y = minimap.mv.y + window.Math.floor(126 * scaleby);
    };

    function draw() {
        if (MMVwV() === 0) return;
        vnMVv();
        nNvvV();
        ctx.clearRect(0, 0, screenWidth, screenHeight);
        World.NNNMv();
        Render.VMMWm();
        Render.MvV(minimap.mv.x, minimap.mv.y);
        minimap.draw();
        fullscreenimg.draw();
        settingsimg.draw();
        minimapbutt.draw();
        logicbutton.draw();
        mapexplobutton.draw();
        maproadbutton.draw();
        mapfurniturebutton.draw();
        mapbuildingbutton.draw();
        zoombutton.draw();
        unzoombutton.draw();
        mapdeletebutton.draw();
        importbutton.draw();
        copypastebutton.draw();
        homebutton.draw();
        markposition();
        wWNmN();
        if (NmW === 1) {
            if (bordmapwin === 1) Render.NNMwm(bordermap, closebutt);
            else if (settingwin === 1) Render.optionsfc(settingbox, wWNnw, nvwMN, MNVVn, VmvmN, WMVVn, wvNNV, WVnnn, NmVWV, vVMWm, closebutt, wVwnm, VnWMV, wwMwv);
        } else if (mobile === 1) {
            if ((((keys.leftgo() + keys.rightgo()) + keys.straightgo()) + keys.downgo()) >= 1) {
                ctx.globalAlpha = 0.3;
                var WX = nvm - (VNwMw * 1.5);
                var WY = MMwnm + (VNwMw / 4);
                CanvasUtils.VWVVm(ctx, WX, WY, 60);
                CanvasUtils.mvWVv(ctx, "#000000");
                CanvasUtils.VWVVm(ctx, WX + ((window.Math.cos(MWVNw) * NVNwm) * scaleby), WY + ((window.Math.sin(MWVNw) * NVNwm) * scaleby), 30);
                CanvasUtils.mvWVv(ctx, "#FFFFFF");
                ctx.globalAlpha = 1;
            }
            if (vmWNW === 1) {
                ctx.globalAlpha = 0.3;
                var WX = nvm + (VNwMw * 1.5);
                var WY = MMwnm + (VNwMw / 4);
                CanvasUtils.VWVVm(ctx, WX, WY, 60);
                CanvasUtils.mvWVv(ctx, "#000000");
                CanvasUtils.VWVVm(ctx, WX + ((window.Math.cos(myply.angle) * 25) * scaleby), WY + ((window.Math.sin(myply.angle) * 25) * scaleby), 30);
                CanvasUtils.mvWVv(ctx, "#FFFFFF");
                ctx.globalAlpha = 1;
            }
        }
        vWn.nwwnv();
    };

    function MMVwV() {
        if (WWN === 1) {
            update();
            if (MNw < 0) {
                WWN = 0;
                fullscreenimg.NNv(vM.Wmm);
                settingsimg.NNv(vM.Wmm);
                minimapbutt.NNv(vM.Wmm);
                logicbutton.NNv(vM.Wmm);
                mapexplobutton.NNv(vM.Wmm);
                maproadbutton.NNv(vM.Wmm);
                mapfurniturebutton.NNv(vM.Wmm);
                mapbuildingbutton.NNv(vM.Wmm);
                zoombutton.NNv(vM.Wmm);
                unzoombutton.NNv(vM.Wmm);
                mapdeletebutton.NNv(vM.Wmm);
                importbutton.NNv(vM.Wmm);
                copypastebutton.NNv(vM.Wmm);
                homebutton.NNv(vM.Wmm);
                MVv.run();
                return 0;
            }
            MNw -= delta;
        } else if (mwm === 1) {
            update();
            if (MNw < 0) {
                mwm = 0;
                MmNNN();
            }
            MNw -= delta;
        }
        return 1;
    };


    function VNn(event) {
        myply.VWv(event, myply.NVMMW);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
        }
        if (logicbutton.mw() === 1) {
            vnm = 1;
        }
        if (mapexplobutton.mw() === 1) {
            vnm = 1;
        }
        if (maproadbutton.mw() === 1) {
            vnm = 1;
        }
        if (mapfurniturebutton.mw() === 1) {
            vnm = 1;
        }
        if (mapbuildingbutton.mw() === 1) {
            vnm = 1;
        }
        if (zoombutton.mw() === 1) {
            vnm = 1;
        }
        if (unzoombutton.mw() === 1) {
            vnm = 1;
        }
        if (mapdeletebutton.mw() === 1) {
            vnm = 1;
        }
        if (importbutton.mw() === 1) {
            vnm = 1;
        }
        if (homebutton.mw() === 1) {
            vnm = 1;
        }
        if (NmW === 1) {
            closebutt.mw();
            if (settingwin === 1) {
                VmvmN.mw();
                WMVVn.mw();
                wWNnw.mw();
                nvwMN.mw();
                MNVVn.mw();
                wvNNV.mw();
                WVnnn.mw();
                NmVWV.mw();
                vVMWm.mw();
                VnWMV.mw();
                wVwnm.mw();
                wwMwv.mw();
            }
        } else {
            for (var i = 0; i < NWw; i++) {
                if (Wnw[i].mw() === 1) vnm = 1;
            }
        }
        if ((vnm === 0) && (NmW === 0)) {
            nmMMm = 1;
            if (World.PLAYER.click === -1) World.PLAYER.click = 0;
        } else {
            if (World.PLAYER.click === 0) World.PLAYER.click = -1;
        }
    };

    function vNm(event) {
        myply.VWv(event, myply.MnNNW);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
            if (MNnnv === 0) {
                MNnnv = 1;
                CanvasUtils.fullscreenfunc();
                if (World.nVM === 0) canvas.style.backgroundColor = "#3D5942";
                else canvas.style.backgroundColor = "#0B2129";
                audio.VnV(audio.ww.button, 1, 0);
            } else {
                MNnnv = 0;
                CanvasUtils.exitfullscreenfunc();
                audio.VnV(audio.ww.button, 1, 0);
            }
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
            if (settingwin === 0) {
                nVN();
                NmW = 1;
                settingwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
                return;
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
            if (bordmapwin === 0) {
                nVN();
                NmW = 1;
                bordmapwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
                return;
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
        }
        if (logicbutton.mw() === 1) {
            vnm = 1;
            NWw = 0;
            for (var i = 1; i < items.length; i++) {
                var idd = items[i];
                if (idd.behavior === BEHAVIOR.__LOGIC__) {
                    Wnw[NWw].MVN(idd.img.src, idd.img.W);
                    Wnw[NWw].vmM = idd.id;
                    NWw++;
                }
            }
            audio.VnV(audio.ww.button, 1, 0);
        }
        if (mapexplobutton.mw() === 1) {
            vnm = 1;
            NWw = 0;
            for (var i = 1; i < items.length; i++) {
                var idd = items[i];
                if ((((idd.id === item.landmine) || (idd.id === item.c4bomb)) || (idd.id === item.woodespike)) || (idd.id === item.dynamite)) {
                    Wnw[NWw].MVN(idd.img.src, idd.img.W);
                    Wnw[NWw].vmM = idd.id;
                    NWw++;
                }
            }
            audio.VnV(audio.ww.button, 1, 0);
        }
        if (maproadbutton.mw() === 1) {
            vnm = 1;
            NWw = 0;
            var vnvwV = items[item.NvMvM].nvN;
            for (var i = 0; i < vnvwV.length; i++) {
                var idd = vnvwV[i];
                Wnw[NWw].MVN(idd.img.src, idd.img.W);
                Wnw[NWw].vmM = item.NvMvM;
                Wnw[NWw].nVWnM = i;
                NWw++;
            }
            audio.VnV(audio.ww.button, 1, 0);
        }
        if (mapfurniturebutton.mw() === 1) {
            vnm = 1;
            NWw = 0;
            var vnvwV = items[item.MMnVW].nvN;
            for (var i = 0; i < vnvwV.length; i++) {
                var idd = vnvwV[i];
                Wnw[NWw].MVN(idd.img.src, idd.img.W);
                Wnw[NWw].vmM = item.MMnVW;
                Wnw[NWw].nVWnM = i;
                NWw++;
            }
            audio.VnV(audio.ww.button, 1, 0);
        }
        if (mapbuildingbutton.mw() === 1) {
            vnm = 1;
            NWw = 0;
            for (var i = 1; i < items.length; i++) {
                var idd = items[i];
                if (((((idd.Mvw === 1) || (idd.VWN === 1)) || (idd.WNv === 1)) || (idd.mwV === 1)) || (idd.VVmmM === 1)) {
                    Wnw[NWw].MVN(idd.img.src, idd.img.W);
                    Wnw[NWw].vmM = idd.id;
                    NWw++;
                }
            }
            audio.VnV(audio.ww.button, 1, 0);
        }

        if (zoombutton.mw() === 1) {
            vnm = 1;
            if (Render.scale < 1.5) {
                Render.scale += 0.1;
                audio.VnV(audio.ww.button, 1, 0);
                unzoombutton.show();
                if (Render.scale >= 1.5) zoombutton.vnN();
            }
        }
        if (unzoombutton.mw() === 1) {
            vnm = 1;
            if (Render.scale > -0.95) {
                if (Render.scale < 0) Render.scale -= 0.05;
                else Render.scale -= 0.1;
                audio.VnV(audio.ww.button, 1, 0);
                zoombutton.show();
                if (Render.scale <= -0.95) unzoombutton.vnN();
            }
        }


        if (mapdeletebutton.mw() === 1) {
            vnm = 1;
            MVWMn();
            audio.VnV(audio.ww.button, 1, 0);
        }
        if (importbutton.mw() === 1) {
            vnm = 1;
            audio.VnV(audio.ww.open, 1, 0);
            var MWwVN = window["prompt"]("Please enter your code here", "");
            audio.VnV(audio.ww.open, 1, 0);
            if ((MWwVN != null) && (MWwVN != "")) wwMmV(MWwVN);
        }
        if (copypastebutton.mw() === 1) {
            vnm = 1;
            audio.VnV(audio.ww.button, 1, 0);
            exportmapfunc();
        }
        if (homebutton.mw() === 1) {
            vnm = 1;
            Editor.quit(Home);
            audio.VnV(audio.ww.play, 1, 0);
        }
        if (NmW === 1) {
            if (closebutt.mw() === 1) {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
                return;
            }
            if (settingwin === 1) {
                WMVVn.NNv(vM.Wmm);
                VmvmN.NNv(vM.Wmm);
                wWNnw.NNv(vM.Wmm);
                nvwMN.NNv(vM.Wmm);
                MNVVn.NNv(vM.Wmm);
                wvNNV.NNv(vM.Wmm);
                WVnnn.NNv(vM.Wmm);
                NmVWV.NNv(vM.Wmm);
                vVMWm.NNv(vM.Wmm);
                wVwnm.NNv(vM.Wmm);
                VnWMV.NNv(vM.Wmm);
                wwMwv.NNv(vM.Wmm);
                if (VmvmN.mw() === 1) {
                    keys.azer();
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (WMVVn.mw() === 1) {
                    keys.wasd();
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wWNnw.mw() === 1) {
                    CanvasUtils.NmmvM(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (nvwMN.mw() === 1) {
                    CanvasUtils.NmmvM(2);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (MNVVn.mw() === 1) {
                    CanvasUtils.NmmvM(3);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wvNNV.mw() === 1) {
                    audio.Vnwmn(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (WVnnn.mw() === 1) {
                    audio.Vnwmn(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (NmVWV.mw() === 1) {
                    audio.wNnMM(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (vVMWm.mw() === 1) {
                    audio.wNnMM(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (VnWMV.mw() === 1) {
                    Render.wvmnm(1);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wVwnm.mw() === 1) {
                    Render.wvmnm(2);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                } else if (wwMwv.mw() === 1) {
                    Render.wvmnm(0);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                }
                var MMMnn = settingbox.mv;
                if ((((myply.nVm < MMMnn.x) || (myply.nVm > (MMMnn.x + (234 * scaleby)))) || (myply.nmW < MMMnn.y)) || (myply.nmW > (MMMnn.y + (232 * scaleby)))) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            } else if (bordmapwin === 1) {
                var mNMnn = bordermap.mv;
                if ((((myply.nVm < mNMnn.x) || (myply.nVm > (mNMnn.x + (412 * scaleby)))) || (myply.nmW < mNMnn.y)) || (myply.nmW > (mNMnn.y + (412 * scaleby)))) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
        } else {
            for (var i = 0; i < NWw; i++) {
                if (Wnw[i].mw() === 1) {
                    audio.VnV(audio.ww.button, 1, 0);
                    World.PLAYER.putableimg = Wnw[i].vmM;
                    World.PLAYER.mWmnv = Wnw[i].nVWnM;
                    if (World.PLAYER.putableimg === item.NvMvM) World.PLAYER.nvMwN = 0;
                }
            }
        }
    };




    function wVv(event) {
        myply.VWv(event, myply.wwwmw);
        var vnm = 0;
        if (fullscreenimg.mw() === 1) {
            vnm = 1;
        }
        if (settingsimg.mw() === 1) {
            vnm = 1;
        }
        if (minimapbutt.mw() === 1) {
            vnm = 1;
        }
        if (logicbutton.mw() === 1) {
            vnm = 1;
        }
        if (mapexplobutton.mw() === 1) {
            vnm = 1;
        }
        if (maproadbutton.mw() === 1) {
            vnm = 1;
        }
        if (mapfurniturebutton.mw() === 1) {
            vnm = 1;
        }
        if (mapbuildingbutton.mw() === 1) {
            vnm = 1;
        }
        if (zoombutton.mw() === 1) {
            vnm = 1;
        }
        if (unzoombutton.mw() === 1) {
            vnm = 1;
        }
        if (mapdeletebutton.mw() === 1) {
            vnm = 1;
        }
        if (importbutton.mw() === 1) {
            vnm = 1;
        }
        if (copypastebutton.mw() === 1) {
            vnm = 1;
        }
        if (homebutton.mw() === 1) {
            vnm = 1;
        }
        if (NmW === 1) {
            closebutt.mw();
            if (settingwin === 1) {
                VmvmN.mw();
                WMVVn.mw();
                wWNnw.mw();
                nvwMN.mw();
                MNVVn.mw();
                wvNNV.mw();
                WVnnn.mw();
                NmVWV.mw();
                vVMWm.mw();
                VnWMV.mw();
                wVwnm.mw();
                wwMwv.mw();
            }
        } else {
            for (var i = 0; i < NWw; i++) Wnw[i].mw();
        }
    };

    function NmN(event) {
        keys.WvMvV(event);
        if (event.keyCode === 77) {
            if (bordmapwin === 0) {
                nVN();
                NmW = 1;
                bordmapwin = 1;
                audio.VnV(audio.ww.open, 1, 0);
            } else {
                nVN();
                audio.VnV(audio.ww.open, 1, 0);
            }
        } else if ((event.keyCode === 27) && (NmW === 1)) {
            audio.VnV(audio.ww.open, 1, 0);
            nVN();
        } else if (event.keyCode === 82) {
            if ((World.PLAYER.wvM === 1) && (World.PLAYER.putableimg !== item.NvMvM)) World.PLAYER.nvMwN = (World.PLAYER.nvMwN + 1) % 4;
        }
    };

    function vnW(event) {
        keys.mwMVV(event);
        if ((((event.keyCode === 37) || (event.keyCode === 38)) || (event.keyCode === 39)) || (event.keyCode === 40)) {
            event.preventDefault();
            return false;
        }
    };

    function WwW(event) {
        var NVN = 0;
        for (var wVV = 0; wVV < event.touches.length; wVV++) {
            myply.VWn(NWV, event, event.touches[wVV]);
            if (NmW === 0) {
                var nVm = window.Math.floor(NWV.clientX * CanvasUtils.options.MMw);
                var nmW = window.Math.floor(NWV.clientY * CanvasUtils.options.WWvvm);
                if (nmW < (screenHeight - (70 * scaleby))) {
                    var WMm = mWmwm * 1.5;
                    var nmV = mWmwm / 4;
                    if (nVm < screencenterX) {
                        var MVM = 30 * scaleby;
                        MWVNw = checkspos.angle(screencenterX - WMm, screencenterY + nmV, nVm, nmW);
                        NVNwm = window.Math.min(checkspos.mappos(nVm, nmW, screencenterX - WMm, screencenterY + nmV), 25);
                        if (nVm < ((screencenterX - WMm) - MVM)) {
                            mWM |= 1;
                            nNw.charCode = 37;
                            nNw.keyCode = 37;
                            vnW(nNw);
                        } else if (nVm > ((screencenterX - WMm) + MVM)) {
                            mWM |= 2;
                            nNw.charCode = 39;
                            nNw.keyCode = 39;
                            vnW(nNw);
                        }
                        if (nmW < ((screencenterY + nmV) - MVM)) {
                            mWM |= 4;
                            nNw.charCode = 38;
                            nNw.keyCode = 38;
                            vnW(nNw);
                        } else if (nmW > ((screencenterY + nmV) + MVM)) {
                            mWM |= 8;
                            nNw.charCode = 40;
                            nNw.keyCode = 40;
                            vnW(nNw);
                        }
                    } else if ((nVm < (screenWidth - (40 * scaleby))) || (nmW > (40 * scaleby))) {
                        NVN = 1;
                        NWV.clientX -= WMm / CanvasUtils.options.MMw;
                        NWV.clientY -= nmV / CanvasUtils.options.MMw;
                        if (World.PLAYER.wvM === 1) {
                            var vVMmn = window.Date.now();
                            if ((vVMmn - MMMvM) < 1000) {
                                vmWNW = 1;
                                NnVMv = NWV.clientX;
                                WNmmw = NWV.clientY;
                                VNn(NWV);
                            }
                            MMMvM = vVMmn;
                        } else {
                            vmWNW = 1;
                            NnVMv = NWV.clientX;
                            WNmmw = NWV.clientY;
                            VNn(NWV);
                        }
                    }
                    continue;
                }
            }
            if ((NVN === 0) && (mWM === 0)) {
                VNn(NWV);
                NVN = 1;
            }
        }
    };

    function nMN(event) {};

    function Www(event) {
        var nVm = window.Math.floor(event.changedTouches[0].clientX * CanvasUtils.options.MMw);
        var nmW = window.Math.floor(event.changedTouches[0].clientY * CanvasUtils.options.WWvvm);
        if (nvnNv === 1) nvnNv = 0;
        else if (NmW === 1) vNm(NWV);
        else if ((vmWNW === 1) && (nVm >= screencenterX)) {
            vmWNW = 0;
            NWV.clientX = NnVMv;
            NWV.clientY = WNmmw;
            vNm(NWV);
            return;
        } else if (((World.PLAYER.holditem.inclick === 0) && (nVm < screencenterX)) && (nmW < (screenHeight - (70 * scaleby)))) {
            if ((nVm < (240 * scaleby)) && (nmW < (160 * scaleby))) vNm(NWV);
        } else vNm(NWV);
        if (mWM !== 0) {
            if (mWM & 1) {
                nNw.charCode = 37;
                NmN(nNw);
            }
            if (mWM & 2) {
                nNw.charCode = 39;
                NmN(nNw);
            }
            if (mWM & 4) {
                nNw.charCode = 38;
                NmN(nNw);
            }
            if (mWM & 8) {
                nNw.charCode = 40;
                NmN(nNw);
            }
            mWM = 0;
        }
    };

    function vnv(event) {
        var NVN = 0;
        var mWVWv = 0;
        for (var wVV = 0; wVV < event.touches.length; wVV++) {
            myply.VWn(NWV, event, event.touches[wVV]);
            if ((World.PLAYER.holditem.inclick === 0) && (NmW === 0)) {
                var nVm = window.Math.floor(NWV.clientX * CanvasUtils.options.MMw);
                var nmW = window.Math.floor(NWV.clientY * CanvasUtils.options.WWvvm);
                if (nmW < (screenHeight - (70 * scaleby))) {
                    var WMm = mWmwm * 1.5;
                    var nmV = mWmwm / 4;
                    if (nVm < screencenterX) {
                        mWVWv = 1;
                        var VNM = 0;
                        var MVM = 30 * scaleby;
                        MWVNw = checkspos.angle(screencenterX - WMm, screencenterY + nmV, nVm, nmW);
                        NVNwm = window.Math.min(checkspos.mappos(nVm, nmW, screencenterX - WMm, screencenterY + nmV), 25);
                        if (nVm < ((screencenterX - WMm) - MVM)) VNM |= 1;
                        else if (nVm > ((screencenterX - WMm) + MVM)) VNM |= 2;
                        if (nmW < ((screencenterY + nmV) + -MVM)) VNM |= 4;
                        else if (nmW > ((screencenterY + nmV) + MVM)) VNM |= 8;
                        if (((VNM & 1) === 1) && ((mWM & 1) !== 1)) {
                            nNw.charCode = 37;
                            vnW(nNw);
                        } else if (((VNM & 1) !== 1) && ((mWM & 1) === 1)) {
                            nNw.charCode = 37;
                            NmN(nNw);
                        }
                        if (((VNM & 2) === 2) && ((mWM & 2) !== 2)) {
                            nNw.charCode = 39;
                            vnW(nNw);
                        } else if (((VNM & 2) !== 2) && ((mWM & 2) === 2)) {
                            nNw.charCode = 39;
                            NmN(nNw);
                        }
                        if (((VNM & 4) === 4) && ((mWM & 4) !== 4)) {
                            nNw.charCode = 38;
                            vnW(nNw);
                        } else if (((VNM & 4) !== 4) && ((mWM & 4) === 4)) {
                            nNw.charCode = 38;
                            NmN(nNw);
                        }
                        if (((VNM & 8) === 8) && ((mWM & 8) !== 8)) {
                            nNw.charCode = 40;
                            vnW(nNw);
                        } else if (((VNM & 8) !== 8) && ((mWM & 8) === 8)) {
                            nNw.charCode = 40;
                            NmN(nNw);
                        }
                        mWM = VNM;
                        continue;
                    } else if ((nVm < (screenWidth - (40 * scaleby))) || (nmW > (40 * scaleby))) {
                        NVN = 1;
                        NWV.clientX -= WMm / CanvasUtils.options.MMw;
                        NWV.clientY -= nmV / CanvasUtils.options.MMw;
                        NnVMv = NWV.clientX;
                        WNmmw = NWV.clientY;
                        wVv(NWV);
                    }
                }
            }
            if ((NVN === 0) && (mWM === 0)) {
                wVv(NWV);
                NVN = 1;
            }
        }
        if ((mWVWv === 0) && (mWM !== 0)) {
            if (mWM & 1) {
                nNw.charCode = 37;
                NmN(nNw);
            }
            if (mWM & 2) {
                nNw.charCode = 39;
                NmN(nNw);
            }
            if (mWM & 4) {
                nNw.charCode = 38;
                NmN(nNw);
            }
            if (mWM & 8) {
                nNw.charCode = 40;
                NmN(nNw);
            }
            mWM = 0;
        }
    };

    function MmNNN() {
        if (mobile === 0) window.addEventListener('mousedown', VNn, false);
        if (mobile === 0) window.addEventListener('mouseup', vNm, false);
        if (mobile === 0) window.addEventListener('mousemove', wVv, false);
        if (mobile === 0) window.addEventListener('keyup', NmN, false);
        if (mobile === 0) window.addEventListener('keydown', vnW, false);
        if (mobile === 1) window.addEventListener('touchstart', WwW, false);
        if (mobile === 1) window.addEventListener('touchend', nMN, false);
        if (mobile === 1) window.addEventListener('touchcancel', Www, false);
        if (mobile === 1) window.addEventListener('touchmove', vnv, false);
    };

    function VVwMW() {
        if (mobile === 0) window.removeEventListener('mousedown', VNn, false);
        if (mobile === 0) window.removeEventListener('mouseup', vNm, false);
        if (mobile === 0) window.removeEventListener('mousemove', wVv, false);
        if (mobile === 0) window.removeEventListener('keyup', NmN, false);
        if (mobile === 0) window.removeEventListener('keydown', vnW, false);
        if (mobile === 1) window.removeEventListener('touchstart', WwW, false);
        if (mobile === 1) window.removeEventListener('touchend', nMN, false);
        if (mobile === 1) window.removeEventListener('touchcancel', Www, false);
        if (mobile === 1) window.removeEventListener('touchmove', vnv, false);
    };
    return {
        quit: quit,
        init: init,
        run: run,
        update: update,
        draw: draw
    };
})();


var NMW = 1;
var wMM = {};
wMM.MMvVn = NMW++;
wMM.vwWVn = NMW++;
wMM.VWwWM = NMW++;
wMM.Vwmwn = NMW++;
wMM.wNWmV = NMW++;
wMM.vnvMn = NMW++;
wMM.MwwMM = NMW++;
wMM.wvMWm = NMW++;
wMM.NWnVN = NMW++;
wMM.vWWNm = NMW++;
wMM.VnWMW = NMW++;
wMM.nmWVN = NMW++;
wMM.MvVmM = NMW++;
wMM.WmvMn = NMW++;
wMM.VWVNW = NMW++;
var NVwvn = [{}, {
    id: wMM.MMvVn,
    src: "img/road-T0B0L0R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 0,
        y: 0,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ],
    alt: [wMM.MMvVn]
}, {
    id: wMM.vwWVn,
    src: "img/road-T0B0L1R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 28,
        y: 0,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ],
    alt: [wMM.vVNmn, wMM.VvNnM]
}, {
    id: wMM.VWwWM,
    src: "img/road-T0B0L1R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 56,
        y: 0,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ],
    alt: [wMM.wNMVw, wMM.VNVvm, wMM.mWvMm, wMM.MNvnM, wMM.VvnnVWm, wMM.NmwnW, wMM.mvMWN, wMM.NVwVw]
}, {
    id: wMM.Vwmwn,
    src: "img/road-T0B1L0R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 84,
        y: 0,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ],
    alt: [wMM.vwmNN, wMM.nmWNV]
}, {
    id: wMM.wNWmV,
    src: "img/road-T0B1L0R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 56,
        y: 28,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.vnvMn,
    src: "img/road-T0B1L1R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 0,
        y: 56,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.MwwMM,
    src: "img/road-T0B1L1R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 112,
        y: 0,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.wvMWm,
    src: "img/road-T1B0L0R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 28,
        y: 28,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.NWnVN,
    src: "img/road-T1B0L0R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 56,
        y: 56,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.vWWNm,
    src: "img/road-T1B0L1R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 84,
        y: 56,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.VnWMW,
    src: "img/road-T1B0L1R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 84,
        y: 28,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.nmWVN,
    src: "img/road-T1B1L0R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 112,
        y: 56,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.MvVmM,
    src: "img/road-T1B1L0R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 112,
        y: 28,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.WmvMn,
    src: "img/road-T1B1L1R0.png",
    W: {
        m: 0
    },
    MvV: {
        x: 0,
        y: 28,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ]
}, {
    id: wMM.VWVNW,
    src: "img/road-T1B1L1R1.png",
    W: {
        m: 0
    },
    MvV: {
        x: 28,
        y: 56,
        WVv: 28,
        w: 28
    },
    Mww: [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]
    ],
    alt: [wMM.wmMVw, wMM.vnWNW]
}];
try {
    if (VwM !== window.undefined) {
        VwM.wMM = wMM;
        VwM.NVwvn = NVwvn;
    }
} catch (error) {}

    var Render = (function() {
        var wmn = 100;      
        var nwn = wmn / 2; 
        var VNvvM = 1;
        var NVmMW = 13;
        var WnWvv = 9;
        var WwmVw = 100;
        var WMNWw = 0.025; 
        var NMmmm = 0; 
        var VmNmN = 0.01;
        var NmMvvvN = 0.008;
        var NMv = 0;
        var WMwnW = 0;
        var mmVNm = 0;
        var wWw = 0;
        var NnvWw = 3;
        var nwMnv = 0;
        var vnvWWnW = 0;
        var vvVMV = 0;
        var VnvWV = 0;
        var vvNWNnN = 450;
        var vWw = 410;
        var wvNVM = vWw;
        var wVNMN = 412 / 8;
        var NnWnv = 0;
        var bordermapbig = "img/borderBigMinimap2.png";
        var maparrowicon = "img/arrow-minimap.png";
        var maparrowicon2 = "img/arrow-minimap2.png";
        var houseicon = "img/house-icon.png";
        var cityicon = "img/city-icon.png";
        var emptyinventoryicon = "img/inv-empty.png";
        var looticon = "img/loot.png";
        var lootmobileicon = "img/loot-mobile.png";
        var loot2icon = "img/loot2.png";
        var timericon = "img/timer.png";
        var craftgrid = "img/craft-grid.png";
        var timerarrow = "img/timer-arrow.png";
        var timerlights = "img/timer-lights.png";
        var hintrotate = "img/hint-rotate.png";
        var useicon = "img/day-unusable.png";
        var MMVnVmV = "img/day-unusable.png";
        var dayclock = "img/day-clock.png";
        var nightclock = "img/night-clock.png";
        var clockhand = "img/clock-hand.png";
        var clockhandrad = "img/clock-hand-radiation.png";
        var dayclockhand = "img/day-clock-hand.png";
        var craftgauge = "img/craft-gauge.png";
        var strokebonus = "img/stroke-bonus.png";
        var wrongtool = "img/wrong-tool.png";
        var handtool = "img/hand-tool.png";
        var arrowcraft = "img/arrow-craft.png";
        var unlockskill = "img/unlock-skills.png";
        var serverfull = "img/server-full.png";
        var serverold = "img/server-old.png";
        var clientold = "img/client-old.png";
        var serverwrong = "img/server-wrong.png";
        var invbox = "img/invitation-box.png";
        var timebox = "img/time-box.png";
        var rankbox = "img/rank-box.png";
        var toxicalert = "img/toxic-alert.png";
        var radalert = "img/radiation-alert.png";
        var Mvvwv = 500;
        var mVmWm = 256;
        var NNmnW = mVmWm * 2;
        var mMmvV = 500;
        var WWn = window.Math.floor(mVmWm / 2);
        var nWWwM = window.Math.floor(WWn / 2);
        var NVvVm = "img/alert";
        var Vwwmw = 699;
        var nvnwM = 738;
        var lightgreen = "#70BD56";
        var orange = "#e58833";
        var lightblue = "#55B7BC";
        var yellow = "#d7c83a";
        var white = "#FFFFFF";
        var Mvnwm = 3000;
        var mmWWw = 500;
        var WWMnN = 2500;
        var WNVNM = window.Math.PI * 2;
        var Mwwnm = 165 * (window.Math.PI / 180);
        var PIby2 = window.Math.PI / 2;
        var mWvNn = window.Math.PI / World.Mnvww;
        var key_a = 1;
        var key_d = 2;
        var key_w = 4;
        var key_s = 8;
        var MMn = 16;
        var nNn = 32;
        var Nvn = 64;
        var nwM = 128;
        var mMwmm = 0;
        var NVW = 1;
        var mWn = 2;
        var WMN = 4;
        var wwm = 8;
        var MwnMm = 0;
        var NNvnn = 1;
        var MnVmm = 2;
        var WnmmN = 3;
        var vNw = [
            [],
            [],
            [],
            []
        ];
        vNw[MwnMm][mMwmm] = 0;
        vNw[MwnMm][NVW] = 3;
        vNw[MwnMm][mWn] = 6;
        vNw[MwnMm][WMN | wwm] = 9;
        vNw[MwnMm][WMN] = 4;
        vNw[MwnMm][wwm] = 5;
        vNw[MwnMm][NVW | WMN] = 27;
        vNw[MwnMm][NVW | wwm] = 20;
        vNw[MwnMm][mWn | WMN] = 7;
        vNw[MwnMm][mWn | wwm] = 28;
        vNw[MwnMm][(NVW | WMN) | wwm] = 24;
        vNw[MwnMm][(mWn | WMN) | wwm] = 29;
        vNw[MnVmm][mMwmm] = 0;
        vNw[MnVmm][NVW] = 3;
        vNw[MnVmm][mWn] = 6;
        vNw[MnVmm][WMN | wwm] = 9;
        vNw[MnVmm][WMN] = 4;
        vNw[MnVmm][wwm] = 5;
        vNw[MnVmm][NVW | WMN] = 27;
        vNw[MnVmm][NVW | wwm] = 20;
        vNw[MnVmm][mWn | WMN] = 7;
        vNw[MnVmm][mWn | wwm] = 28;
        vNw[MnVmm][(NVW | WMN) | wwm] = 24;
        vNw[MnVmm][(mWn | WMN) | wwm] = 29;
        vNw[NNvnn][mMwmm] = 11;
        vNw[NNvnn][NVW] = 12;
        vNw[NNvnn][mWn] = 17;
        vNw[NNvnn][WMN | wwm] = 10;
        vNw[NNvnn][WMN] = 19;
        vNw[NNvnn][wwm] = 18;
        vNw[NNvnn][NVW | WMN] = 34;
        vNw[NNvnn][NVW | wwm] = 22;
        vNw[NNvnn][mWn | WMN] = 23;
        vNw[NNvnn][mWn | wwm] = 33;
        vNw[NNvnn][(NVW | WMN) | wwm] = 35;
        vNw[NNvnn][(mWn | WMN) | wwm] = 32;
        vNw[WnmmN][mMwmm] = 11;
        vNw[WnmmN][NVW] = 15;
        vNw[WnmmN][mWn] = 14;
        vNw[WnmmN][WMN | wwm] = 10;
        vNw[WnmmN][WMN] = 19;
        vNw[WnmmN][wwm] = 18;
        vNw[WnmmN][NVW | WMN] = 37;
        vNw[WnmmN][NVW | wwm] = 16;
        vNw[WnmmN][mWn | WMN] = 23;
        vNw[WnmmN][mWn | wwm] = 38;
        vNw[WnmmN][(NVW | WMN) | wwm] = 36;
        vNw[WnmmN][(mWn | WMN) | wwm] = 39;
        var WMV = [];
        WMV[0] = 0;
        WMV[key_a] = 3;
        WMV[key_d] = 4;
        WMV[key_w] = 2;
        WMV[key_s] = 1;
        WMV[key_a | key_w] = 17;
        WMV[key_a | key_d] = 5;
        WMV[key_a | key_s] = 18;
        WMV[key_d | key_w] = 16;
        WMV[key_d | key_s] = 19;
        WMV[key_w | key_s] = 6;
        WMV[(key_a | key_w) | key_s] = 10;
        WMV[(key_a | key_w) | key_d] = 9;
        WMV[(key_s | key_w) | key_d] = 11;
        WMV[(key_a | key_s) | key_d] = 8;
        WMV[((key_a | key_w) | key_d) | key_s] = 7;
        WMV[(key_s | key_d) | MMn] = 12;
        WMV[(key_s | key_a) | nNn] = 13;
        WMV[(key_w | key_a) | nwM] = 14;
        WMV[(key_w | key_d) | Nvn] = 15;
        WMV[((key_w | key_s) | key_d) | MMn] = 20;
        WMV[(((key_w | key_s) | key_d) | key_a) | MMn] = 21;
        WMV[((key_a | key_s) | key_d) | MMn] = 22;
        WMV[(((key_w | key_s) | key_d) | key_a) | Nvn] = 23;
        WMV[((key_a | key_w) | key_d) | Nvn] = 24;
        WMV[((key_w | key_s) | key_d) | Nvn] = 25;
        WMV[((key_w | key_s) | key_a) | nwM] = 26;
        WMV[(((key_w | key_s) | key_d) | key_a) | nwM] = 27;
        WMV[((key_w | key_d) | key_a) | nwM] = 28;
        WMV[((key_s | key_d) | key_a) | nNn] = 29;
        WMV[(((key_w | key_s) | key_d) | key_a) | nNn] = 30;
        WMV[((key_w | key_s) | key_a) | nNn] = 31;
        WMV[((((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | nwM) | Nvn] = 32;
        WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | nwM] = 33;
        WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | MMn] = 34;
        WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | Nvn] = 35;
        WMV[((((key_w | key_s) | key_d) | key_a) | MMn) | nwM] = 36;
        WMV[((((key_w | key_s) | key_d) | key_a) | Nvn) | MMn] = 37;
        WMV[((((key_w | key_s) | key_d) | key_a) | Nvn) | nwM] = 38;
        WMV[(((key_w | key_s) | key_d) | Nvn) | MMn] = 39;
        WMV[(((key_w | key_s) | key_a) | nwM) | nNn] = 40;
        WMV[(((key_d | key_s) | key_a) | MMn) | nNn] = 41;
        WMV[(((key_d | key_w) | key_a) | Nvn) | nwM] = 42;
        WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | nwM) | Nvn] = 43;
        WMV[(((((key_w | key_s) | key_d) | key_a) | MMn) | nwM) | Nvn] = 44;
        WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | Nvn] = 45;
        WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | nwM] = 46;
        var vMNWw = 0;
        var wVmnN = 1;
        var nWNMn = 2;
        var wnNWM = 600;
        var i, j;
        var vertst = 0;
        var horist = 0;
        var NmM = 0;
        var WWV = 0;
        var NVVWM = 0;
        var WVNMV = 0;
        var vvWnv = 0;
        var Nvmmn = 0;
        var vwMWM = VmNmN;
        var WvmnV = 0;
        var wWWNM = 0;
        var vMnmV = [];
        for (i = 0; i < 20; i++) vMnmV[i] = {
            m: 0
        };
        var NwMVW = nWNMn;
        var vMnnw = [];
        var matrix = [];
        var wWmnn = NVmMW;
        var VmvVW = WnWvv;
        var NwVwM = NVmMW * wmn;
        var wNwMv = WnWvv * wmn;
        var NmWnM = [];
        var nNMVM = {
            m: 0
        };
        var NvwMN = {
            m: 0
        };
        var wnW = {
            nn: 0,
            WMw: 0,
            src: arrowcraft,
            W: {
                m: 0
            }
        };
        var wvV = {
            nn: 0,
            WMw: 0,
            src: unlockskill,
            W: {
                m: 0
            }
        };
        var timeleft = {
            src: timebox,
            W: {
                m: 0
            }
        };
        var WvWnV = {
            src: rankbox,
            W: {
                m: 0
            }
        };
        var WWmMW = {
            src: toxicalert,
            W: {
                m: 0
            }
        };
        var MvvNN = 0;
        var VmWNN = {
            src: radalert,
            W: {
                m: 0
            }
        };
        var WNmVW = 0;
        var econtainericon = {
            src: "img/e-furniture.png",
            W: {
                m: 0
            }
        };
        var vMnmm = CanvasUtils.loadImage("img/toxic-area2.png");
        var VmnwN = CanvasUtils.loadImage("img/toxic-area3.png");
        var wVVVn = [];
        var WVw = [];
        var wmvVw = {
            m: 0
        };
        var arv = {
            m: 0
        };
        var nMWVv = {
            m: 0
        };
        var VWvVN = {
            m: 0
        };
        var NNmMN = [0, 0, 0, 0];
        var WwmVM = NMmmm;
        var WvnvV = [];
        var pplonscr = 0;
        var timer = {
            m: 0
        };
        var arrow = {
            m: 0
        };
        var lights = {
            m: 0
        };
        var WMWvN = mMmvV;
        var wWNmv = {
            m: 0
        };
        var wNvNm = {
            m: 0
        };
        var vvNWN = {
            src: strokebonus,
            W: {
                m: 0
            }
        };
        var VnwNw = 0;
        var NmWvw = {
            src: wrongtool,
            W: {
                m: 0
            }
        };
        var vwnWv = {
            src: handtool,
            W: {
                m: 0
            }
        };
        var vnVmM = 12000;
        var wMVMm = 12000;
        var wVMNN = [];
        for (i = 0; i < 10; i++) {
            wVMNN[i] = [];
            for (j = 0; j < 3; j++) wVMNN[i][j] = {
                m: 0
            };
        };
        var WMw = [];
        for (i = 0; i < 8; i++) {
            WMw[i] = [];
            for (j = 0; j < 2; j++) WMw[i][j] = {
                m: 0
            };
        }
        var arrowiconmap2 = {
            src: maparrowicon,
            W: {
                m: 0
            }
        };
        var arrowiconmap = {
            src: maparrowicon2,
            W: {
                m: 0
            }
        };
        var MvV = {
            m: 0
        };
        var houseiconmap = {
            src: houseicon,
            W: {
                m: 0
            }
        };
        var cityiconmap = {
            src: cityicon,
            W: {
                m: 0
            }
        };
        var WmVNn = {
            src: nightclock,
            W: {
                m: 0
            }
        };
        var nvvVW = {
            src: dayclock,
            W: {
                m: 0
            }
        };
        var nMmvV = {
            src: clockhand,
            W: {
                m: 0
            }
        };
        var VWmVV = {
            src: dayclockhand,
            W: {
                m: 0
            }
        };
        var wmmvv = {
            src: clockhandrad,
            W: {
                m: 0
            }
        };
        var MnNnW = {
            src: serverfull,
            W: {
                m: 0
            }
        };
        var VVvnW = {
            src: serverold,
            W: {
                m: 0
            }
        };
        var WWwmW = {
            src: clientold,
            W: {
                m: 0
            }
        };
        var nWvvv = {
            src: serverwrong,
            W: {
                m: 0
            }
        };
        var teambox = {
            m: 0
        };
        var wwvmV = [];
        for (i = 0; i < 20; i++) wwvmV.push({
            m: 0
        });
        var canvasZ = window.document.createElement('canvas');
        var context2dZ = canvasZ.getContext('2d');
        canvasZ.width = vWw;
        canvasZ.height = wvNVM;
        canvasZ.m = 1;
        canvasZ.Wvw = canvasZ.width / 2;
        canvasZ.mNm = canvasZ.height / 2;
        var MWNMV = {
            W: canvasZ
        };
        var canvasD = window.document.createElement('canvas');
        var context2dD = canvasD.getContext('2d');
        canvasD.width = vWw;
        canvasD.height = wvNVM;
        canvasD.m = 1;
        canvasD.Wvw = canvasZ.width / 2;
        canvasD.mNm = canvasZ.height / 2;
        var MMvWn = {
            W: canvasD
        };
        var mWWwn = 0;

        function mwNmN() {
            if (World.PLAYER.wMwmv === 8) {
                context2dZ.clearRect(0, 0, vWw, wvNVM);
                context2dD.clearRect(0, 0, vWw, wvNVM);
                for (var i = 0; i < 8; i++) {
                    for (var j = 0; j < 8; j++) {
                        var wVvnN = World.PLAYER.Mwwnw[i][j];
                        if (wVvnN === 7) context2dZ.drawImage(vMnmm, 2 + (j * wVNMN), (i * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                        else context2dZ.drawImage(VmnwN, 2 + (j * wVNMN), (i * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                    }
                }
            } else {
                context2dZ.drawImage(canvasD, 0, 0);
                context2dD.clearRect(0, 0, vWw, wvNVM);
                for (var nMm = 0; nMm < 12; nMm++) {
                    var MWW = World.PLAYER.vVVnm[nMm];
                    var i = MWW[0];
                    var j = MWW[1];
                    if (i === -1) continue;
                    context2dD.drawImage(vMnmm, 2 + (j * wVNMN), (i * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                }
            };
        };
        var canvasF = window.document.createElement('canvas');
        var context2dF = canvasF.getContext('2d');
        canvasF.width = Vwwmw;
        canvasF.height = nvnwM;
        WMnvM = [];
        for (var i = 0; i < 9; i++) WMnvM[i] = 0;
        var MNW = 0;
        for (i = 0; i < WnWvv; i++) {
            vMnnw[i] = [];
            for (var j = 0; j < NVmMW; j++) vMnnw[i][j] = 0;
        }
        var canvasG = window.document.createElement("canvas");
        var context2dG = canvasG.getContext("2d");
        canvasG.width = 280;
        canvasG.height = 148;
        var mwwNm = -1;
        var wmvMm = [];
        var nmMMW = [];
        var canvasH = window.document.createElement("canvas");
        var context2H = canvasH.getContext("2d");
        canvasH.width = 280;
        canvasH.height = 50;
        var wmmVm = -1;
        var canvasJ = window.document.createElement("canvas");
        var context2J = canvasJ.getContext("2d");
        canvasJ.width = 420;
        canvasJ.height = 148;
        var MMNWW = -1;

        function MmmnN() {
            this.mVN = 0;
            this.MMNVm = 0;
            this.MmvNw = 0;
            this.NMn = 0;
            this.Mvw = 0;
            this.MNW = 0;
            this.nNNwM = 0;
            this.socketid = 0;
            this.wMV = 0;
            this.nww = 0;
            this.i = 0;
            this.b = [];
            this.rotate = 0;
            for (var i = 0; i < 3; i++) this.b.push({
                type: 0,
                nnN: 0
            });
        };

        function wmNMv(player, Rot) {
            if ((player.Mmm > 0) || (player.vwW !== 0)) return 0;
            var i = player.i;
            var j = player.j;
            var vV = player.nNN >> 7;
            var Wn = 0;
            switch (Rot) {
                case 0:
                    if ((i + 1) < wWw) {
                        var VMV = matrix[i + 1][j];
                        if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                            if (VMV.rotate === 1) Wn += NVW;
                            else if (VMV.rotate === 3) Wn += mWn;
                        }
                    }
                    if ((j - 1) >= 0) {
                        var VMV = matrix[i][j - 1];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 3) || (VMV.rotate === 0))) Wn += WMN;
                    }
                    if ((j + 1) < NMv) {
                        var VMV = matrix[i][j + 1];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 1) || (VMV.rotate === 0))) Wn += wwm;
                    }
                    break;
                case 1:
                    if ((j - 1) >= 0) {
                        var VMV = matrix[i][j - 1];
                        if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                            if (VMV.rotate === 0) Wn += mWn;
                            else if (VMV.rotate === 2) Wn += NVW;
                        }
                    }
                    if ((i - 1) >= 0) {
                        var VMV = matrix[i - 1][j];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 0) || (VMV.rotate === 1))) Wn += WMN;
                    }
                    if ((i + 1) < wWw) {
                        var VMV = matrix[i + 1][j];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 2) || (VMV.rotate === 1))) Wn += wwm;
                    }
                    break;
                case 2:
                    if ((i - 1) >= 0) {
                        var VMV = matrix[i - 1][j];
                        if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                            if (VMV.rotate === 1) Wn += mWn;
                            else if (VMV.rotate === 3) Wn += NVW;
                        }
                    }
                    if ((j - 1) >= 0) {
                        var VMV = matrix[i][j - 1];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 3) || (VMV.rotate === 2))) Wn += wwm;
                    }
                    if ((j + 1) < NMv) {
                        var VMV = matrix[i][j + 1];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 1) || (VMV.rotate === 2))) Wn += WMN;
                    }
                    break;
                case 3:
                    if ((j + 1) < NMv) {
                        var VMV = matrix[i][j + 1];
                        if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                            if (VMV.rotate === 0) Wn += NVW;
                            else if (VMV.rotate === 2) Wn += mWn;
                        }
                    }
                    if ((i - 1) >= 0) {
                        var VMV = matrix[i - 1][j];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 0) || (VMV.rotate === 3))) Wn += wwm;
                    }
                    if ((i + 1) < wWw) {
                        var VMV = matrix[i + 1][j];
                        if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 2) || (VMV.rotate === 3))) Wn += WMN;
                    }
                    break;
            }
            return vNw[Rot][Wn];
        };

        function Wwmwm(player) {
            if ((player.Mmm > 0) || (player.vwW !== 0)) return 0; 
            var i = player.i;
            var j = player.j;
            var vV = player.nNN >> 7;
            var Wn = 0;
            var N = 0,
                mMn = 0,
                M = 0,
                MNMWN = 0;
            if ((i - 1) >= 0) {
                var VMV = matrix[i - 1][j];
                if (VMV.MMNVm === MNW) {
                    mMn = 1;
                    Wn += key_w;
                }
            }
            if ((i + 1) < wWw) {
                var VMV = matrix[i + 1][j];
                if (VMV.MMNVm === MNW) {
                    Wn += key_s;
                    M = 1;
                }
            }
            if ((j - 1) >= 0) {
                var VMV = matrix[i][j - 1];
                if (VMV.MMNVm === MNW) {
                    Wn += key_a;
                    MNMWN = 1;
                }
            }
            if ((j + 1) < NMv) {
                var VMV = matrix[i][j + 1];
                if (VMV.MMNVm === MNW) {
                    Wn += key_d;
                    N = 1;
                }
            }
            if ((N + mMn) === 2) {
                var VMV = matrix[i - 1][j + 1];
                if (VMV.MMNVm === MNW) Wn += Nvn;
            }
            if ((MNMWN + mMn) === 2) {
                var VMV = matrix[i - 1][j - 1];
                if (VMV.MMNVm === MNW) Wn += nwM;
            }
            if ((M + N) === 2) {
                var VMV = matrix[i + 1][j + 1];
                if (VMV.MMNVm === MNW) Wn += MMn;
            }
            if ((M + MNMWN) === 2) {
                var VMV = matrix[i + 1][j - 1];
                if (VMV.MMNVm === MNW) Wn += nNn;
            }
            console.log(player.i);
            return WMV[Wn];
        };

        function WwmwN(player) {
            if ((player.Mmm > 0) || (player.vwW !== 0)) return 0;
            var i = player.i;
            var j = player.j;
            var Mvw = items[player.nNN >> 7];
            var vV = Mvw.vVwVM;
            var Wn = 0;
            var N = 0,
                mMn = 0,
                M = 0,
                MNMWN = 0;
            if ((i - 1) >= 0) {
                var VMV = matrix[i - 1][j];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                    mMn = 1;
                    Wn += key_w;
                }
            }
            if ((i + 1) < wWw) {
                var VMV = matrix[i + 1][j];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                    Wn += key_s;
                    M = 1;
                }
            }
            if ((j - 1) >= 0) {
                var VMV = matrix[i][j - 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                    Wn += key_a;
                    MNMWN = 1;
                }
            }
            if ((j + 1) < NMv) {
                var VMV = matrix[i][j + 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                    Wn += key_d;
                    N = 1;
                }
            }
            if ((N + mMn) === 2) {
                var VMV = matrix[i - 1][j + 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += Nvn;
            }
            if ((MNMWN + mMn) === 2) {
                var VMV = matrix[i - 1][j - 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += nwM;
            }
            if ((M + N) === 2) {
                var VMV = matrix[i + 1][j + 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += MMn;
            }
            if ((M + MNMWN) === 2) {
                var VMV = matrix[i + 1][j - 1];
                if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += nNn;
            }
            var Wn = WMV[Wn];
            matrix[i][j].MmvNw = Mvw.MmvNw[Wn];
            return Wn;
        };

        function smallwallsfusion(player) {
            var vV = player.nNN >> 7;
            if (((items[vV].VWN !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
            var VMV = matrix[player.i][player.j];
            VMV.mVN = MNW;
            VMV.Mvw = vV;
            VMV.rotate = (player.nNN >> 5) & 3;
        };

        function bigwallsfusion(player) {
            var vV = player.nNN >> 7;
            if (((items[vV].Mvw !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
            var VMV = matrix[player.i][player.j];
            VMV.mVN = MNW;
            VMV.Mvw = items[vV].vVwVM;
            if (World.PLAYER.mmm === player.j) {
                var mappos = window.Math.max(1, window.Math.abs(World.PLAYER.NWM - player.i));
                if (World.PLAYER.NWM < player.i) NNmMN[0] = WwmVM / mappos;
                else NNmMN[1] = WwmVM / mappos;
            } else if (World.PLAYER.NWM === player.i) {
                var mappos = window.Math.max(1, window.Math.abs(World.PLAYER.mmm - player.j));
                if (World.PLAYER.mmm < player.j) NNmMN[2] = WwmVM / mappos;
                else NNmMN[3] = WwmVM / mappos;
            }
        };

        function floorsfusion(player) {
            var vV = player.nNN >> 7;
            if (((items[vV].Mvw !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
            var VMV = matrix[player.i][player.j];
            VMV.MMNVm = MNW;
        };

        function MmnMv(player, nnN) {
            var i = player.i;
            var j = player.j;
            var VMV = matrix[i][j];
            if (VMV.MNW === MNW) {
                if (VMV.i < 3) {
                    var M = VMV.b[VMV.i];
                    VMV.i += 1;
                    M.type = player.type;
                    M.nnN = nnN;
                }
            } else {
                VMV.MNW = MNW;
                var M = VMV.b[0];
                VMV.i = 1;
                M.type = player.type;
                M.nnN = nnN;
            }
        };

        function vision(wVNwM, MMnVM, VmNwV) {
            bodOnResize = window.document.getElementById("bod").onresize;
            if (World.gameMode === World.__BR__) {
                context2dZ.clearRect(0, 0, vWw, vWw);
                context2dD.clearRect(0, 0, vWw, vWw);
                MvvNN = 0;
            }
            WNmVW = 0;
            Render.nwNWm = 0;
            Render.shake = 0;
            if (wVNwM !== window.undefined) WMWvN = 0;
            else WMWvN = mMmvV;
            if (VmNwV !== window.undefined) vwMWM = VmNwV;
            else vwMWM = VmNmN;
            if (MMnVM !== window.undefined) WwmVM = MMnVM;
            else WwmVM = NMmmm;
            NmM = 0;
            WWV = 0;
            World.PLAYER.x = 0;
            World.PLAYER.y = 0;
            World.PLAYER.NWM = 0;
            World.PLAYER.mmm = 0;
            wnW.WMw = 0;
            wnW.nn = 0;
            wvV.WMw = 0;
            wvV.nn = 0;
            VwmMm.id = -1;
            VwmMm.mvN = -1;
            var vW = localStorage.getItem("particles");
            if (vW !== null) NwMVW = window.Number(vW);
            WmN = "";
            nNmVw = null;
            nmn.width = 150;
            nmn.height = 150;
            Render.nnmMW = (nmn.width * 100) / 255;
            NMv = nmn.width;
            wWw = nmn.height;
            WMwnW = wmn * NMv;
            mmVNm = wmn * wWw;
            nwMnv = 824 / WMwnW;
            vvVMV = 824 - mVmWm;
            VnvWV = vvVMV + WWn;
            NnWnv = WMwnW / 8;
            World.mmMMM(NMv, wWw);
            for (var i = 0; i < wWw; i++) {
                matrix[i] = [];
                for (var j = 0; j < NMv; j++) matrix[i][j] = new MmmnN;
            }
            var vvv = Entitie.Wvm[0].length;
            for (i = 0; i < vvv; i++) WvnvV[i] = null;
        };


        function textnumberitem(wm, invtr, WX, WY, vwn, WMn) {
            wm.mv.x = WX;
            wm.mv.y = WY;
            wm.draw();
            var idd = items[invtr[0]];
            var nM = invtr[1];
            if (nM > 1) {
                if (vwn[nM] === window.undefined) {
                    vwn[nM] = {
                        W: vM.showtxt("x" + nM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, window.undefined, 15, 12, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12)
                    };
                    vwn[nM].W.m = 1;
                }
                CanvasUtils.putonscreen(vwn[nM], (WX / scaleby) + 53, (WY / scaleby) + 55, -0.5, 0, 0, 1);
            }
            if ((idd.vMv !== window.undefined) && (idd.mMVwm === window.undefined)) {
                var nM = invtr[3];
                if (WMn[nM] === window.undefined) {
                    WMn[nM] = {
                        W: vM.showtxt("x" + nM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, window.undefined, 15, 12, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12)
                    };
                    WMn[nM].W.m = 1;
                }
                CanvasUtils.putonscreen(WMn[nM], (WX / scaleby) + 53, (WY / scaleby) + 55, -0.5, 0, 0, 1);
            }
            if (idd.vWVMV !== window.undefined) {
                var VWNwv = window.Math.floor(invtr[3] / 12.8);
                var W = wwvmV[VWNwv];
                if (W.m !== 1) {
                    wwvmV[VWNwv] = CanvasUtils.loadImage(("img/rotten" + VWNwv) + ".png", W);
                } else ctx.drawImage(W, WX + (0.5 * scaleby), WY, (scaleby * W.width) / 2, (scaleby * W.height) / 2);
            }
        };

        function NMMwN(Wn, WX, WY) {
            if (wmvMm[Wn] === window.undefined) {
                wmvMm[Wn] = window.document.createElement("canvas");
                nmMMW[Wn] = wmvMm[Wn].getContext("2d");
                var mWwVV = wmvMm[Wn];
                var Nvmwn = nmMMW[Wn];
                mWwVV.width = 400;
                mWwVV.height = 148;
                Nvmwn.clearRect(0, 0, 400, 148);
                CanvasUtils.vWNWw(Nvmwn, 0, 0, 400, 148, 10);
                Nvmwn.fillStyle = "#000000";
                Nvmwn.globalAlpha = 0.5;
                Nvmwn.fill();
                Nvmwn.globalAlpha = 1;
                itemstatsfunc(nmMMW[Wn], Wn);
            }
            var SX = scaleby * 74;
            ctx.drawImage(wmvMm[Wn], WX, WY, scaleby * 190, SX);
        };

        function inventoryfunc(vwn, WMn, MmV, bagbutt) {
            //if (World.PLAYER.ghoul !== 0) return;
            var inventory = Game.inventory;
            if (nNMVM.m !== 1) {
                nNMVM = CanvasUtils.loadImage(emptyinventoryicon, nNMVM);
                return;
            } 
            var invtr = World.PLAYER.inventory;
            var vvv = invtr.length;
            var SY = (nNMVM.width * scaleby) / 2;
            var SX = (nNMVM.height * scaleby) / 2;
            var inmapx = window.Math.max(300 * scaleby, (screenWidth - (SY * vvv)) / 2);
            var inmapy = (screenHeight - SX) - (5 * scaleby);
            var WX = inmapx;
            var WY = inmapy;
            var MVM = (5 * scaleby) + SY;
            if (vvv > 10) {
                bagbutt.mv.x = screenWidth - (69 * scaleby);
                bagbutt.mv.y = screenHeight - (68 * scaleby);
                bagbutt.draw();
                if (bagbutt.open === 0) vvv = 10;
            }
            for (var i = 0; i < vvv; i++) {
                var wm = inventory[i];
                if (invtr[i][0] === 0) {
                    wm.mv.x = WX;
                    wm.mv.y = WY;
                    ctx.drawImage(nNMVM, WX, WY, SY, SX);
                } else textnumberitem(wm, invtr[i], WX, WY, vwn, WMn);
                if (i === 9) {
                    WX = bagbutt.mv.x - (5 * scaleby);
                    WY = bagbutt.mv.y - MVM;
                } else if (i === 12) {
                    WX -= MVM;
                    WY = bagbutt.mv.y - MVM;
                } else if (i > 9) WY -= MVM;
                else WX += MVM;
            }
            var holditem = World.PLAYER.holditem;
            if (((holditem.inclick === 1) && (myply.state === myply.NVMMW)) && (checkspos.mappos(holditem.x, holditem.y, myply.x, myply.y) > (4 * scaleby))) {
                var idd = invtr[holditem.id][0];
                if (idd > 0) {
                    var W = items[idd].img.W[0];
                    if (W.m === 0) W = NWVnn[idd].img.W[0];
                    ctx.globalAlpha = 0.7;
                    var SY = 68 * scaleby;
                    ctx.drawImage(W, (myply.x * scaleby) - (SY / 2), (myply.y * scaleby) - (SY / 2), SY, SY);
                    ctx.globalAlpha = 1;
                }
            } else if ((MmV !== -1) && (invtr[MmV][0] !== 0)) {
                if (MmV < 10) NMMwN(invtr[MmV][0], inmapx + (MVM * MmV), inmapy - (79 * scaleby));
                else if (MmV < 13) NMMwN(invtr[MmV][0], bagbutt.mv.x - (200 * scaleby), bagbutt.mv.y + (MVM * (-1 + ((10 - MmV) % 3))));
                else NMMwN(invtr[MmV][0], (bagbutt.mv.x - (200 * scaleby)) - MVM, bagbutt.mv.y + (MVM * (-1 + ((10 - MmV) % 3))));
            }
        };

        function levelingaunge(WX, WY) {
            var vMN = World.PLAYER.level;
            if (NmWnM[vMN] === window.undefined) {
                NmWnM[vMN] = {
                    W: vM.showtxt("" + vMN, "'Black Han Sans', sans-serif", "#ffffff", 44, 250, window.undefined, 18, 15, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 15)
                };
                NmWnM[vMN].W.m = 1;
            }
            CanvasUtils.putonscreen(NmWnM[vMN], (WX / scaleby) + 234, (WY / scaleby) + 79, 0, 0, 0, 1);
            var MWw = World.MnW.MWw;
            var vW = 1 - (MWw.nnw / MWw.WWw);
            CanvasUtils.putonscreen(wmmvv, 38 + (WX / scaleby), 37 + (WY / scaleby), window.Math.PI * vW, 0, 0, 1);
        };

        function wmMMm(WX, WY) {
            var health = World.MnW.health;
            var vW = health.nnw / health.WWw;
            CanvasUtils.fillRect(ctx, (WX / scaleby) + 14, (WY / scaleby) + 71, vW * 189, 16, lightgreen);
            var vVv = World.MnW.vVv;
            var vW = vVv.nnw / vVv.WWw;
            CanvasUtils.fillRect(ctx, (WX / scaleby) + 13, (WY / scaleby) + 162, 54, -vW * 63, orange);
            var vNN = World.MnW.vNN;
            var vW = vNN.nnw / vNN.WWw;
            CanvasUtils.fillRect(ctx, (WX / scaleby) + 81, (WY / scaleby) + 162, 54, -vW * 63, lightblue);
            var nvv = World.MnW.nvv;
            var vW = nvv.nnw / nvv.WWw;
            CanvasUtils.fillRect(ctx, (WX / scaleby) + 150, (WY / scaleby) + 162, 54, -vW * 63, yellow);
            var mMv = World.MnW.mMv;
            var vW = mMv.nnw / mMv.WWw;
            CanvasUtils.fillRect(ctx, (WX / scaleby) + 226, (WY / scaleby) + 172, 16, -vW * 77, white);
            var wVnVV = World.NvVVW();
            var W;
            var wnvmV;
            if (wVnVV >= 10000000) {
                if (WmVNn.m !== 1) {
                    WmVNn = CanvasUtils.loadImage(nightclock, WmVNn);
                    return;
                }
                wVnVV -= 10000000;
                W = WmVNn;
                wnvmV = nMmvV;
            } else {
                if (nvvVW.m !== 1) {
                    nvvVW = CanvasUtils.loadImage(dayclock, nvvVW);
                    return;
                }
                W = nvvVW;
                wnvmV = VWmVV;
            }
            var SY = (scaleby * W.width) / 2;
            var SX = (scaleby * W.height) / 2;
            ctx.drawImage(W, WX + (100 * scaleby), WY + (14 * scaleby), SY, SX);
            CanvasUtils.putonscreen(wnvmV, 144.5 + (WX / scaleby), (WY / scaleby) + 56, wVnVV * mWvNn, 0, 0, 1);
        };


        function WnnwN(WX, WY) {
            var leaderboard = World.leaderboard;
            var socket = World.socket;
            var nWnWm = -1;
            if (World.WnNNv === 1) {
                nWnWm = 1;
                World.WnNNv = 0;
                context2dF.clearRect(0, 0, Vwwmw, nvnwM);
                for (var i = 0;
                    (i < leaderboard.length) && (leaderboard[i] !== 0); i++) {
                    var PLAYER = socket[leaderboard[i]];
                    if (World.PLAYER.id === leaderboard[i]) nWnWm = 0;
                    if (PLAYER.nick === 0) break;
                    if (PLAYER.vMNnW === null) {
                        if (PLAYER.id === World.PLAYER.id) PLAYER.vMNnW = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#D6C823", 40, 350, window.undefined, 0, 12);
                        else PLAYER.vMNnW = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#ffffff", 40, 350, window.undefined, 0, 12);
                    }
                    if (PLAYER.MNn === null) {
                        if (PLAYER.id === World.PLAYER.id) PLAYER.MNn = vM.showtxt(PLAYER.wMWWv, "'Viga', sans-serif", "#D6C823", 40, 150, window.undefined, 5, 12);
                        else PLAYER.MNn = vM.showtxt(PLAYER.wMWWv, "'Viga', sans-serif", "#ffffff", 40, 150, window.undefined, 5, 12);
                    }
                    if ((PLAYER.vMNnW.width !== 0) && (PLAYER.vMNnW.height !== 0)) context2dF.drawImage(PLAYER.vMNnW, 90, 114 + (i * 50), PLAYER.vMNnW.width, PLAYER.vMNnW.height);
                    context2dF.drawImage(PLAYER.MNn, 484, 114 + (i * 50), PLAYER.MNn.width, PLAYER.MNn.height);
                    var W = karma[PLAYER.VwVVw].W;
                    if (W.m === 1) context2dF.drawImage(W, 612, 114 + (i * 50), W.width, W.height);
                }
                World.PLAYER.MnWnn = nWnWm;
                if (nWnWm === 1) {
                    var W = karma[World.PLAYER.VwVVw].W;
                    if (W.m === 1) context2dF.drawImage(W, 375, 645, W.width * 1.5, W.height * 1.5);
                }
            }
            var mW = World.PLAYER.exp;
            if ((nWnWm === 1) || ((World.PLAYER.MnWnn === 1) && (mW !== World.PLAYER.WMWVW))) {
                var PLAYER = socket[World.PLAYER.id];
                context2dF.clearRect(480, 657, 112, 60);
                if (mW !== World.PLAYER.WMWVW) {
                    World.PLAYER.WMWVW = mW;
                    PLAYER.MNn = vM.showtxt(WNW.nVvNM(mW), "'Viga', sans-serif", "#ffffff", 40, 150, window.undefined, 5, 12);
                }
                context2dF.drawImage(PLAYER.MNn, 484, 662, PLAYER.MNn.width, PLAYER.MNn.height);
            }
            ctx.drawImage(canvasF, WX, WY, (Vwwmw / 3) * scaleby, (nvnwM / 3) * scaleby);
        };


        function mapfunc(vWvWN, closebutt) {        
            var SY = vWw * scaleby;
            var SX = wvNVM * scaleby;
            var WX = screencenterX - (SY / 2);
            var WY = window.Math.max(screencenterY - (SX / 2), 0);
            var wVw = WX / scaleby;
            var VVm = WY / scaleby;
            var mvMnV = vWw / WMwnW;
            var textnumberitem = wvNVM / mmVNm;
            closebutt.mv.x = window.Math.floor((WX + SY) + (0 * scaleby));
            closebutt.mv.y = window.Math.floor(WY + (0 * scaleby));
            vWvWN.draw();



            var wmWvV = World.PLAYER.wmWvV;
            var vvv = wmWvV.length / 2;
            if (vvv > 0) {
                inmapy = window.Math.floor((WY / scaleby) + window.Math.min(window.Math.max(10, wmWvV[0] * textnumberitem), 400));
                inmapx = window.Math.floor((WX / scaleby) + window.Math.min(window.Math.max(10, wmWvV[1] * mvMnV), 400));
                CanvasUtils.putonscreen(cityiconmap, inmapx, inmapy, 0, 0, 0, 1);
                for (var i = 1; i < vvv; i++) {
                    inmapy = window.Math.floor((WY / scaleby) + window.Math.min(window.Math.max(10, wmWvV[i * 2] * textnumberitem), 400));
                    inmapx = window.Math.floor((WX / scaleby) + window.Math.min(window.Math.max(10, wmWvV[1 + (i * 2)] * mvMnV), 400));
                    CanvasUtils.putonscreen(houseiconmap, inmapx, inmapy, 0, 0, 0, 1);
                }
            }

            if (World.gameMode === World.__BR__) {
                var wwwmm = wVw + (vWw / 2);
                var vnvWw = VVm + (wvNVM / 2);
                CanvasUtils.putonscreen(MWNMV, wwwmm, vnvWw, 0, 0, 0, 2);
                ctx.globalAlpha = (mWWwn > 600) ? WNW.mWV.vvw((1200 - mWWwn) / 600) : WNW.mWV.vvw(mWWwn / 600);
                CanvasUtils.putonscreen(MMvWn, wwwmm, vnvWw, 0, 0, 0, 2);
                ctx.globalAlpha = 1;
            }
            
            closebutt.draw();

            if ((World.PLAYER.clan !== -1) || (World.PLAYER.ghoul !== 0) && (World.WVw < 6)) {
                var socket = Entitie.Wvm[INSplayers];
                for (var i = 0; i < World.PLAYER.nnnVN; i++) {
                    var nmmvN = World.PLAYER.MVmNm[i];
                    if (nmmvN.wmWMV < 0) continue;
                    var PLAYER = World.socket[nmmvN.id];
                    var inmapx = window.Math.floor(wVw + window.Math.min(window.Math.max(10, PLAYER.rx * mvMnV), 400));
                    var inmapy = window.Math.floor(VVm + window.Math.min(window.Math.max(10, PLAYER.ry * mvMnV), 400));
                    var wW;
                    if (MNW === (PLAYER.MNW + 1)) wW = socket[PLAYER.nnmnv].angle;
                    else wW = PLAYER.x % WNVNM;
                    CanvasUtils.putonscreen(arrowiconmap, inmapx, inmapy, wW, 0, 0, 1);
                }
            }

            var inmapx = window.Math.floor((WX / scaleby) + window.Math.min(window.Math.max(10, NmM * mvMnV), 400));
            var inmapy = window.Math.floor((WY / scaleby) + window.Math.min(window.Math.max(10, WWV * textnumberitem), 400));
            CanvasUtils.putonscreen(arrowiconmap2, inmapx, inmapy, myply.angle, 0, 0, 1);

            if (World.PLAYER.VvWnm > 0) {
                var PLAYER = World.socket[World.PLAYER.karmaplayerid];
                CanvasUtils.putonscreen(karma[PLAYER.VwVVw], window.Math.floor(wVw + window.Math.min(window.Math.max(10, PLAYER.rx * mvMnV), 400)), window.Math.floor(VVm + window.Math.min(window.Math.max(10, PLAYER.ry * mvMnV), 400)), 0, 0, 0, 1.25);
            }
            

        };



        function MMWWn() {
            if (Home.VNVVN > 0) {
                if (Home.VNVVN > 2500) ctx.globalAlpha = WNW.mWV.vvw((3000 - Home.VNVVN) / 500);
                else if (Home.VNVVN > 500) ctx.globalAlpha = 1;
                else ctx.globalAlpha = WNW.mWV.vvw(Home.VNVVN / 500);
                if (Home.MWMMv === 0) CanvasUtils.putonscreen(WWwmW, nvm, WWwmW.W.mNm / 2, 0, 0, 0, 1);
                else if (Home.MWMMv === 1) CanvasUtils.putonscreen(VVvnW, nvm, VVvnW.W.mNm / 2, 0, 0, 0, 1);
                else if (Home.MWMMv === 2) CanvasUtils.putonscreen(MnNnW, nvm, MnNnW.W.mNm / 2, 0, 0, 0, 1);
                else if (Home.MWMMv === 3) CanvasUtils.putonscreen(nWvvv, nvm, nWvvv.W.mNm / 2, 0, 0, 0, 1);
                ctx.globalAlpha = 1;
                Home.VNVVN -= delta;
            }
        };

        function nmwmn(WX, WY) {
            if (teambox.m !== 1) {
                teambox = CanvasUtils.loadImage(invbox, teambox);
                return;
            }
            Game.nVNMM.mv.x = WX + (241 * scaleby);
            Game.nVNMM.mv.y = WY + (6 * scaleby);
            Game.nWvnm.mv.x = WX + (290 * scaleby);
            Game.nWvnm.mv.y = WY + (6 * scaleby);
            if ((World.PLAYER.wNw !== 0) || (World.PLAYER.wMnNv > 0)) {
                if (World.PLAYER.wNw !== 0) {
                    if (World.PLAYER.wMnNv < 333) {
                        ctx.globalAlpha = World.PLAYER.wMnNv / 333;
                        World.PLAYER.wMnNv += delta;
                    }
                } else {
                    ctx.globalAlpha = World.PLAYER.wMnNv / 333;
                    World.PLAYER.wMnNv = window.Math.max(0, World.PLAYER.wMnNv - delta);
                }
                var PLAYER = World.socket[World.PLAYER.wNw];
                if (PLAYER.mMw === null) PLAYER.mMw = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
                ctx.drawImage(teambox, WX, WY, scaleby * teambox.Wvw, scaleby * teambox.mNm);
                if ((PLAYER.mMw.width !== 0) && (PLAYER.mMw.height !== 0)) ctx.drawImage(PLAYER.mMw, WX + (20 * scaleby), WY + (6 * scaleby), PLAYER.mMw.Wvw * scaleby, PLAYER.mMw.mNm * scaleby);
                Game.nVNMM.draw();
                Game.nWvnm.draw();
                if (World.PLAYER.wMnNv < 333) ctx.globalAlpha = 1;
            }
        };

        function timeleftfunc(WX, WY, wNWnn) {
            World.PLAYER.MnMWm -= delta;
            var nnW = window.Math.max(0, window.Math.floor(World.PLAYER.MnMWm / 1000));
            if (nnW < 3000) {
                CanvasUtils.putonscreen(timeleft, (WX / scaleby) + 51, (WY / scaleby) + 145, 0, 0, 0, 1);
                if (wVVVn[nnW] === window.undefined) {
                    if ((wNWnn === 1) && (wVVVn[nnW + 1] !== window.undefined)) wVVVn[nnW + 1] = window.undefined;
                    var wWvWM = window.Math.floor(nnW / 60);
                    var NNvMn = nnW % 60;
                    wVVVn[nnW] = {
                        W: vM.showtxt((((((wWvWM < 10) ? "0" : "") + wWvWM) + ":") + ((NNvMn < 10) ? "0" : "")) + NNvMn, "'Viga', sans-serif", "#FF0000", 38, 100, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12)
                    };
                    wVVVn[nnW].W.m = 1;
                }
                CanvasUtils.putonscreen(wVVVn[nnW], (WX / scaleby) + 60, (WY / scaleby) + 145, 0, 0, 0, 1);
            }
        };

        function vmnWW(WX, WY) {
            CanvasUtils.putonscreen(WvWnV, ((WX / scaleby) + wvwNM) - 63, 25 + (WY / scaleby), 0, 0, 0, 1);
            if (WVw[World.WVw] === window.undefined) {
                WVw[World.WVw] = {
                    W: vM.showtxt("#" + World.WVw, "'Viga', sans-serif", "#FFFFFF", 60, 140)
                };
                WVw[World.WVw].W.m = 1;
            }
            CanvasUtils.putonscreen(WVw[World.WVw], ((WX / scaleby) + wvwNM) - 50, 25 + (WY / scaleby), 0, 0, 0, 1);
        };

        function minimapfunc(WX, WY) {
            nmwmn(WX + (250 * scaleby), WY);
            if (MvV.m !== 1) {
                MvV = CanvasUtils.loadImage(bordermapbig, MvV);
                return;
            }

            var mnmvW = nwMnv * NmM;
            var vNwWN = nwMnv * WWV;
            var nVm = window.Math.min(window.Math.max(0, mnmvW - WWn), vvVMV);
            var nmW = window.Math.min(window.Math.max(0, vNwWN - WWn), vvVMV);
            var SY = WWn * scaleby;
            ctx.drawImage(MvV, nVm, nmW, mVmWm, mVmWm, WX, WY, SY, SY);
            
            if (World.gameMode === World.__GHOUL__) {
                if (World.PLAYER.ghoul !== 0) vmnWW(-255, WY);
                else timeleftfunc(WX + 50, WY, 1);
            }


            if (World.gameMode === World.__BR__) {
                var wVvnN = World.PLAYER.Mwwnw[window.Math.floor(WWV / NnWnv)][window.Math.floor(NmM / NnWnv)];
                if (((wVvnN !== 0) && (wVvnN < World.PLAYER.wMwmv)) && (World.PLAYER.wMwmv !== 8)) {
                    MvvNN = window.Math.min(1000, MvvNN + delta);
                    ctx.globalAlpha = WNW.mWV.wWM(MvvNN / 500);
                    CanvasUtils.putonscreen(WWmMW, nvm, 58, 0, 0, 0, 1);
                    ctx.globalAlpha = 1;
                } else if (MvvNN > 0) {
                    MvvNN = window.Math.max(0, MvvNN - delta);
                    ctx.globalAlpha = WNW.mWV.wWM(MvvNN / 500);
                    CanvasUtils.putonscreen(WWmMW, nvm, 58, 0, 0, 0, 1);
                    ctx.globalAlpha = 1;
                }
                ctx.drawImage(MWNMV.W, nVm / 2, nmW / 2, WWn, WWn, WX, WY, SY, SY);
                ctx.globalAlpha = (mWWwn > 600) ? WNW.mWV.vvw((1200 - mWWwn) / 600) : WNW.mWV.vvw(mWWwn / 600);
                mWWwn = (mWWwn + delta) % 1200;
                ctx.drawImage(MMvWn.W, nVm / 2, nmW / 2, WWn, WWn, WX, WY, SY, SY);
                ctx.globalAlpha = 1;
                vmnWW(0, WY);
                timeleftfunc(WX, WY, 0);
            } else if (World.PLAYER.ghoul === 0) {
                if (World.MnW.MWw.vww === 1) {
                    WNmVW = window.Math.min(1000, WNmVW + delta);
                    ctx.globalAlpha = WNW.mWV.wWM(WNmVW / 500);
                    CanvasUtils.putonscreen(VmWNN, nvm, 58, 0, 0, 0, 1);
                    ctx.globalAlpha = 1;
                } else if (WNmVW > 0) {
                    WNmVW = window.Math.max(0, WNmVW - delta);
                    ctx.globalAlpha = WNW.mWV.wWM(WNmVW / 500);
                    CanvasUtils.putonscreen(VmWNN, nvm, 58, 0, 0, 0, 1);
                    ctx.globalAlpha = 1;
                }
            }



            if (nVm >= vvVMV) mnmvW = window.Math.min(((mnmvW - VnvWV) / 2) + nWWwM, WWn - 8);
            else if (mnmvW < WWn) mnmvW = window.Math.max(15, mnmvW / 2);
            else mnmvW = nWWwM;
            if (nmW >= vvVMV) vNwWN = window.Math.min(((vNwWN - VnvWV) / 2) + nWWwM, WWn - 8);
            else if (vNwWN < WWn) vNwWN = window.Math.max(15, vNwWN / 2);
            else vNwWN = nWWwM;
            var wVw = WX / scaleby;
            var VVm = WY / scaleby;



            if ((World.PLAYER.clan !== -1) || ((World.PLAYER.ghoul !== 0) && (World.WVw < 6))) {
                var socket = Entitie.Wvm[INSplayers];
                for (var i = 0; i < World.PLAYER.nnnVN; i++) {
                    var nmmvN = World.PLAYER.MVmNm[i];
                    if (nmmvN.wmWMV < 0) continue;
                    var PLAYER = World.socket[nmmvN.id];
                    var wW;
                    if (MNW === (PLAYER.MNW + 1)) {
                        var WMv = socket[PLAYER.nnmnv];
                        if (checkspos.MWV(PLAYER.rx, PLAYER.ry, WMv.x, WMv.y) < 1000) {
                            PLAYER.rx = WMv.x;
                            PLAYER.ry = WMv.y;
                        }
                        PLAYER.x = WMv.x;
                        PLAYER.y = WMv.y;
                        wW = WMv.angle;
                    } else var wW = PLAYER.x % WNVNM;
                    var inmapx = wVw + window.Math.max(15, window.Math.min(WWn - 15, (mnmvW - 3) + ((PLAYER.rx - NmM) * nwMnv)));
                    var inmapy = VVm + window.Math.max(15, window.Math.min(WWn - 15, (vNwWN - 3) + ((PLAYER.ry - WWV) * nwMnv)));
                    CanvasUtils.putonscreen(arrowiconmap, inmapx, inmapy, wW, 0, 0, 1);
                }
            }


            if (World.PLAYER.VvWnm > 0) {
                var PLAYER = World.socket[World.PLAYER.karmaplayerid];
                if (MNW === (PLAYER.MNW + 1)) {
                    var socket = Entitie.Wvm[INSplayers];
                    var WMv = socket[PLAYER.nnmnv];
                    if (checkspos.MWV(PLAYER.rx, PLAYER.ry, WMv.x, WMv.y) < 1000) {
                        PLAYER.rx = WMv.x;
                        PLAYER.ry = WMv.y;
                    }
                    PLAYER.x = WMv.x;
                    PLAYER.y = WMv.y;
                }
                CanvasUtils.putonscreen(karma[PLAYER.VwVVw], wVw + window.Math.max(15, window.Math.min(WWn - 15, (mnmvW - 3) + ((PLAYER.rx - NmM) * nwMnv))), VVm + window.Math.max(15, window.Math.min(WWn - 15, (vNwWN - 3) + ((PLAYER.ry - WWV) * nwMnv))), 0, 0, 0, 1.25);
            }

            var inmapx = wVw + (mnmvW - 3);
            var inmapy = VVm + (vNwWN - 3);
            CanvasUtils.putonscreen(arrowiconmap2, inmapx, inmapy, myply.angle, 0, 0, 1);
            if ((World.PLAYER.ghoul === 0) && ((World.PLAYER.canvasH > 0) || (wnW.WMw > 0))) {
                var nn = (wnW.nn + delta) % 1000;
                wnW.nn = nn;
                if (wnW.nn < 500) WX += 260 + (15 * WNW.mWV.vvw(nn / 500));
                else WX += 260 + (15 * WNW.mWV.vvw((1000 - nn) / 500));
                ctx.globalAlpha = WNW.mWV.wWM(wnW.WMw);
                CanvasUtils.putonscreen(wnW, WX, WY + 31, 0, 0, 0, 1);
                ctx.globalAlpha = 1;
                if ((World.PLAYER.canvasH <= 0) || (Game.MvN() === 1)) wnW.WMw = window.Math.max(0, wnW.WMw - (delta / 500));
                else if (wnW.WMw < 1) wnW.WMw = window.Math.min(1, wnW.WMw + (delta / 500));
            }
        };

        
        var WmN = "";
        var nNmVw = null;

        function clanfunc(closebutt, VWwmm, mMnVm, wwVMn, NnvmN, mvNMv, WvvvV, Wwmvm) {
            var WX = 0;
            var WY = 0;
            if (World.PLAYER.clan === -1) {
                var WwmNM = 1;
                if (Game.WmN.length === 0) WwmNM = 0;
                else {
                    for (var i = 0; i < World.clans.length; i++) {
                        if (World.clans[i].name === Game.WmN) {
                            WwmNM = 0;
                            break;
                        }
                    }
                }
                World.PLAYER.WwmNM = WwmNM;
                WX = VWwmm.mv.x;
                WY = VWwmm.mv.y;
                VWwmm.draw();
                closebutt.mv.x = WX + (513 * scaleby);
                closebutt.mv.y = WY + (2 * scaleby);
                if (WmN !== Game.WmN) {
                    WmN = Game.WmN;
                    nNmVw = vM.showtxt(WmN, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                }
                if ((nNmVw !== null) && (WmN.length !== 0)) {
                    CanvasUtils.fillRect(ctx, (WX / scaleby) + 39, (WY / scaleby) + 14, 122, 16.5, "#000000");
                    ctx.drawImage(nNmVw, WX + (35 * scaleby), WY + (14.5 * scaleby), nNmVw.Wvw * scaleby, nNmVw.mNm * scaleby);
                }
                NnvmN.mv.x = WX + (172 * scaleby);
                NnvmN.mv.y = WY + (6 * scaleby);
                if ((WwmNM === 0) || ((window.Date.now() - World.PLAYER.mVVmv) < 30500)) {
                    NnvmN.NNv(vM.Wmm);
                    ctx.globalAlpha = 0.5;
                    NnvmN.draw();
                    ctx.globalAlpha = 1;
                } else NnvmN.draw();
                var j = 0;
                for (var i = 0; i < 18; i++) {
                    var clan = World.clans[i];
                    if (clan.MvvWw === 0) continue;
                    if (clan.label === null) clan.label = vM.showtxt(clan.name, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                    ctx.drawImage(clan.label, WX + ((20 + ((j % 3) * 163)) * scaleby), WY + ((58.5 + (window.Math.floor(j / 3) * 36)) * scaleby), clan.label.Wvw * scaleby, clan.label.mNm * scaleby);
                    var wm = Game.join[j];
                    wm.mv.x = WX + ((84 + ((j % 3) * 163)) * scaleby);
                    wm.mv.y = WY + ((48 + (window.Math.floor(j / 3) * 36)) * scaleby);
                    if ((window.Date.now() - World.PLAYER.Mwnwv) < 10500) {
                        wm.NNv(vM.Wmm);
                        ctx.globalAlpha = 0.5;
                        wm.draw();
                        ctx.globalAlpha = 1;
                    } else wm.draw();
                    j++;
                }
            } else {
                WX = mMnVm.mv.x;
                WY = mMnVm.mv.y;
                var clan = World.clans[World.PLAYER.clan];
                if (clan.label === null) clan.label = vM.showtxt(clan.name, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                ctx.drawImage(clan.label, WX + (144 * scaleby), WY + (13 * scaleby), clan.label.Wvw * scaleby, clan.label.mNm * scaleby);
                mMnVm.draw();
                closebutt.mv.x = WX + (512 * scaleby);
                closebutt.mv.y = WY + (34.5 * scaleby);
                if (World.PLAYER.VVvWM === 1) {
                    if (World.PLAYER.WnNvv === 0) {
                        mvNMv.mv.x = WX + (259 * scaleby);
                        mvNMv.mv.y = WY + (5 * scaleby);
                        mvNMv.draw();
                    } else {
                        WvvvV.mv.x = WX + (259 * scaleby);
                        WvvvV.mv.y = WY + (5 * scaleby);
                        WvvvV.draw();
                    }
                    Wwmvm.mv.x = WX + (311.5 * scaleby);
                    Wwmvm.mv.y = WY + (5 * scaleby);
                    Wwmvm.draw();
                    var j = 0;
                    for (var i = 0; i < World.socket.length; i++) {
                        var PLAYER = World.socket[i];
                        if ((clan.mvN !== PLAYER.wwV) || (PLAYER.clan !== clan.id)) continue;
                        if (PLAYER.mMw === null) PLAYER.mMw = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
                        if ((PLAYER.mMw.width !== 0) && (PLAYER.mMw.height !== 0)) ctx.drawImage(PLAYER.mMw, WX + ((26 + ((j % 3) * 166.5)) * scaleby), WY + ((53 + (window.Math.floor(j / 3) * 29.5)) * scaleby), (PLAYER.mMw.Wvw * scaleby) / 2.2, (PLAYER.mMw.mNm * scaleby) / 2.2);
                        var wm = Game.WvNMn[j];
                        wm.mv.x = WX + ((132 + ((j % 3) * 166.5)) * scaleby);
                        wm.mv.y = WY + ((48.5 + (window.Math.floor(j / 3) * 29.5)) * scaleby);
                        if (((window.Date.now() - World.PLAYER.Mwnwv) < 10500) || (PLAYER.id === World.PLAYER.id)) {
                            wm.NNv(vM.Wmm);
                            ctx.globalAlpha = 0.5;
                            wm.draw();
                            ctx.globalAlpha = 1;
                        } else wm.draw();
                        j++;
                    }
                } else {
                    wwVMn.mv.x = WX + (311.5 * scaleby);
                    wwVMn.mv.y = WY + (5 * scaleby);
                    wwVMn.draw();
                    var j = 0;
                    for (var i = 0; i < World.socket.length; i++) {
                        var PLAYER = World.socket[i];
                        if ((clan.mvN !== PLAYER.wwV) || (PLAYER.clan !== clan.id)) continue;
                        if (PLAYER.mMw === null) PLAYER.mMw = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
                        if ((PLAYER.mMw.width !== 0) && (PLAYER.mMw.height !== 0)) ctx.drawImage(PLAYER.mMw, WX + ((26 + ((j % 3) * 166.5)) * scaleby), WY + ((53 + (window.Math.floor(j / 3) * 29.5)) * scaleby), (PLAYER.mMw.Wvw * scaleby) / 2.2, (PLAYER.mMw.mNm * scaleby) / 2.2);
                        j++;
                    }
                }
            }
            closebutt.draw();
        };

        function contwinfunc(chestbox, closebutt, vwn, WMn) {
            chestbox.draw();
            var WX = chestbox.mv.x;
            var WY = chestbox.mv.y;

            closebutt.mv.x = WX + (161 * scaleby);
            closebutt.mv.y = WY + (0 * scaleby);
            closebutt.draw();

            var mwV = World.PLAYER.mwV;
            var inmapx;
            var inmapy = WY + (14 * scaleby);
            var wm = Game.mwV;

            for (var i = 0; i < 4; i++) {
                if ((i % 2) === 0) {
                    inmapx = WX + (12.5 * scaleby);
                    if (i === 2) inmapy += 71 * scaleby;
                } else inmapx += 72 * scaleby;
                if (mwV[i][0] === 0) continue;
                textnumberitem(wm[i], mwV[i], inmapx, inmapy, vwn, WMn);
            }
        };

        function vMwNm() {
            var mmMnV = vertst;
            if (mmMnV > 0) CanvasUtils.fillRect(ctx, 0, 0, mmMnV, wwWnm, MwWmN);
            else mmMnV = 0;
            var wvnWn = horist;
            if (wvnWn > 0) CanvasUtils.fillRect(ctx, mmMnV, 0, wvwNM - mmMnV, wvnWn, MwWmN);
            else wvnWn = 0;
            var Mwwnn = (-vertst + wvwNM) - WMwnW;
            if (Mwwnn > 0) CanvasUtils.fillRect(ctx, wvwNM - Mwwnn, wvnWn, Mwwnn, wwWnm - wvnWn, MwWmN);
            else Mwwnn = 0;
            var nNnMV = (-horist + wwWnm) - mmVNm;
            if (nNnMV > 0) CanvasUtils.fillRect(ctx, mmMnV, wwWnm - nNnMV, (wvwNM - mmMnV) - Mwwnn, nNnMV, MwWmN);
        };

        function itemstatsfunc(wmvMm, Wn) {
            var WvW = items[Wn];
            var NW = WvW.detail;
            var Mwv = vM.showtxt(NW.name, "'Viga', sans-serif", "#D3BB43", 30, 400);
            wmvMm.drawImage(Mwv, 20, 20);
            Mwv = vM.showtxt(NW.description, "'Viga', sans-serif", "#FFFFFF", 16, 400);
            wmvMm.drawImage(Mwv, 20, 68);
            if (WvW.mnw === 21) {
                if (WvW.WWv > 0) {
                    Mwv = vM.showtxt((("Damage: " + WvW.damage) + "/") + WvW.WWv, "'Viga', sans-serif", "#D3BB43", 24, 400);
                    wmvMm.drawImage(Mwv, 20, 101);
                } else {
                    Mwv = vM.showtxt("Life: " + WvW.health, "'Viga', sans-serif", "#D3BB43", 24, 400);
                    wmvMm.drawImage(Mwv, 20, 101);
                }
            } else if ((WvW.mnw !== window.undefined) && (WvW.mnw !== 0)) {
                var NvV = "";
                var nV = ENTITIES[INSplayers].mNMNW[WvW.mnw];
                if (nV.damage !== window.undefined) {
                    NvV = "Damage: " + ((nV.vNNwv === window.undefined) ? nV.damage : nV.vNNwv);
                } else {
                    if (nV.vVv !== 0) NvV += ("Food: " + nV.vVv) + " ";
                    if (nV.mNW < 0) NvV += ("Damage: " + nV.mNW) + " ";
                    else if (nV.mNW > 0) NvV += ("Heal: " + nV.mNW) + " ";
                    if (nV.www !== 0) NvV += "Energy: " + nV.www;
                }
                Mwv = vM.showtxt(NvV, "'Viga', sans-serif", "#D3BB43", 24, 400);
                wmvMm.drawImage(Mwv, 20, 101);
            } else if (WvW.nwm !== window.undefined) {} else {
                Mwv = vM.showtxt("Cannot be equipped", "'Viga', sans-serif", "#FFFFFF", 17, 400);
                wmvMm.drawImage(Mwv, 20, 108);
            }
        };

        function craftingfunc(craftbox, closebutt, wnV, NwnNV, VvvwN, nvmnM, craftList, vwvvm, vwn, WMn, VWNWV, WmWwW, WwMvM, NWmNn) {
            craftbox.draw();
            var WX = craftbox.mv.x;
            var WY = craftbox.mv.y;
            var wVw = WX / scaleby;
            var VVm = WY / scaleby;
            closebutt.mv.x = WX + (594 * scaleby);
            closebutt.mv.y = WY + (0 * scaleby);
            closebutt.draw();
            var vVN = World.PLAYER.vVN;
            var NmWNV = World.PLAYER.NmWNV;
            var nww = World.PLAYER.nVV;
            var MWW = World.PLAYER.Vvw;
            for (var i = 0; i < wnV.length; i++) {
                var wm = wnV[i];
                if (i === nww) wm.NNv(vM.Mwn);
                wm.mv.x = ((10 * scaleby) + WX) + ((i * 47) * scaleby);
                wm.mv.y = WY - (40 * scaleby);
                wm.draw();
            }
            var j = 0;
            for (i = 0; i < craftList.length; i++) {
                if ((i === MWW) && (World.PLAYER.VVn === 1)) {} else if ((i !== World.PLAYER.vWMmW) && (i !== 0)) continue;
                var wm = craftList[i];
                if (i === MWW) wm.NNv(vM.Mwn);
                wm.mv.x = WX - (40 * scaleby);
                wm.mv.y = ((10 * scaleby) + WY) + ((j * 43) * scaleby);
                wm.draw();
                j++;
            }
            vwvvm.mv.x = WX + (364 * scaleby);
            vwvvm.mv.y = WY + (27 * scaleby);
            vwvvm.draw();
            var nvV = Game.nvV;
            var vvv = World.PLAYER.MNvMn;
            var SY = 49 * scaleby;
            var SX = 49 * scaleby;
            var MVM = 58 * scaleby;
            var mnMmm = 30 * scaleby;
            var NWNmV = 34 * scaleby;
            var Vw = 1;
            if (VnwNw < 500) {
                Vw += 0.08 * WNW.mWV.wWM(VnwNw / 500);
                VnwNw += delta;
            } else {
                Vw += 0.08 * WNW.mWV.wMn(1 - ((VnwNw - 500) / 500));
                VnwNw += delta;
                if (VnwNw > 1000) VnwNw = 0;
            }
            Vw = window.Math.max(1, window.Math.min(1.08, Vw));
            for (i = 0; i < vvv; i++) {
                var wm = nvV[i];
                wm.mv.x = (mnMmm + WX) + ((i % 5) * MVM);
                wm.mv.y = (NWNmV + WY) + (window.Math.floor(i / 5) * MVM);
                var MvmWv = vVN[i];
                if (MvmWv === 0) {
                    ctx.globalAlpha = 0.45;
                    wm.draw();
                    ctx.globalAlpha = 1;
                } else if (MvmWv === 2) {
                    wm.NNv(vM.vnwnw);
                    wm.draw();
                } else {
                    ctx.globalAlpha = 0.6;
                    CanvasUtils.putonscreen(vvNWN, (wm.mv.x / scaleby) + 24.5, (wm.mv.y / scaleby) + 24.5, 0, 0, 0, Vw);
                    ctx.globalAlpha = 1;
                    wm.draw();
                }
            }
            var Nnv = 0;
            if (World.PLAYER.nVV === -1) {
                if (World.PLAYER.VVn === 1) {
                    NwnNV.mv.x = WX + (454 * scaleby);
                    NwnNV.mv.y = WY + (153 * scaleby);
                    if (((World.PLAYER.vVN[World.PLAYER.VNwww] === 1) && (World.PLAYER.Nn.vvv < 4)) && (World.PLAYER.Nn.MNM !== 0)) NwnNV.draw();
                    else {
                        ctx.globalAlpha = 0.5;
                        NwnNV.NNv(vM.Wmm);
                        NwnNV.draw();
                        ctx.globalAlpha = 1;
                    }
                } else if (World.PLAYER.WwVNv === 0) {
                    NwnNV.mv.x = WX + (454 * scaleby);
                    NwnNV.mv.y = WY + (153 * scaleby);
                    if (World.PLAYER.vVN[World.PLAYER.VNwww] === 1) NwnNV.draw();
                    else {
                        ctx.globalAlpha = 0.5;
                        NwnNV.NNv(vM.Wmm);
                        NwnNV.draw();
                        ctx.globalAlpha = 1;
                    }
                } else {
                    VvvwN.mv.x = WX + (454 * scaleby);
                    VvvwN.mv.y = WY + (153 * scaleby);
                    VvvwN.draw();
                }
                if (wNvNm.m !== 1) {
                    wNvNm = CanvasUtils.loadImage(craftgauge, wNvNm);
                    return;
                }

                if (World.PLAYER.VVn === 1) {
                    if ((World.PLAYER.Nn.time !== 0) && (World.PLAYER.Nn.MNM !== 0)) {
                        Nnv = World.PLAYER.Nn.time - window.Date.now();
                        if (Nnv < 0) World.PLAYER.Nn.time = 0;
                        Nnv = WNW.mWV.vvw(1 - (Nnv / World.PLAYER.Nn.WWNVM));
                    }
                } else if (World.PLAYER.WwVNv !== 0) {
                    Nnv = World.PLAYER.WwVNv - window.Date.now();
                    if (Nnv < 0) World.PLAYER.WwVNv = 0;
                    Nnv = WNW.mWV.vvw(1 - (Nnv / World.PLAYER.WNvWv));
                }

                Nnv = window.Math.min(1, window.Math.max(0, Nnv));
                SY = (scaleby * wNvNm.width) / 2;
                SX = (scaleby * wNvNm.height) / 2;
                var posx = WX + (356 * scaleby);
                var posy = WY + (206 * scaleby);
                ctx.fillStyle = "#A29742";
                MVM = 3 * scaleby;
                mnMmm = 2 * MVM;
                ctx.fillRect(window.Math.floor(posx + MVM), window.Math.floor(posy + MVM), window.Math.floor((SY - mnMmm) * Nnv), window.Math.floor(SX - mnMmm));
                ctx.drawImage(wNvNm, posx, posy, SY, SX);
                
            } else {
                var nwVvN = World.PLAYER.vVN[World.PLAYER.VNwww];
                nvmnM.mv.x = WX + (454 * scaleby);
                nvmnM.mv.y = WY + (153 * scaleby);
                if (nwVvN === 1) nvmnM.draw();
                else if (nwVvN === 0) {
                    ctx.globalAlpha = 0.5;
                    nvmnM.NNv(vM.Wmm);
                    nvmnM.draw();
                    ctx.globalAlpha = 1;
                    if (World.PLAYER.mMvww !== MMNWW) {
                        context2J.clearRect(0, 0, 420, 148);
                        MMNWW = World.PLAYER.mMvww;
                        var NW = items[MMNWW].detail;
                        var MwNwV = 20;
                        if (NW.level > World.PLAYER.level) {
                            var Nvm = vM.showtxt(("Require level " + NW.level) + " or higher", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                            context2J.drawImage(Nvm, 20, MwNwV);
                            MwNwV += 50;
                        }
                        if ((NW.WnNmW !== -1) && (World.PLAYER.WvMVw[NW.WnNmW] === window.undefined)) {
                            var Nvm = vM.showtxt(("Unlock " + items[NW.WnNmW].detail.name) + " before", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                            context2J.drawImage(Nvm, 20, MwNwV);
                            MwNwV += 50;
                        }
                        if (World.PLAYER.canvasH < NW.wNvMv) {
                            var Nvm = vM.showtxt((("Cost " + NW.wNvMv) + " skill point") + ((NW.wNvMv !== 1) ? "s" : ""), "'Viga', sans-serif", "#D8BA3D", 30, 600);
                            context2J.drawImage(Nvm, 20, MwNwV);
                        }
                    }
                    ctx.drawImage(canvasJ, WX + (356 * scaleby), WY + (211 * scaleby), (scaleby * canvasJ.width) / 2, (scaleby * canvasJ.height) / 2);
                } else {
                    nvmnM.NNv(vM.Mwn);
                    nvmnM.draw();
                }
            }
            if (World.PLAYER.VVn === 1) {
                var nM = World.PLAYER.Nn.MNM;
                if (nM >= 0) {
                    var wm;
                    if (((MWW === AREAS.smelter) || (MWW === AREAS.extractor)) || (MWW === AREAS.agitator)) wm = WmWwW;
                    else if (MWW === AREAS.teslabench) wm = WwMvM;
                    else wm = VWNWV;
                    wm.mv.x = WX + (532 * scaleby);
                    wm.mv.y = WY + (153 * scaleby);
                    if (World.PLAYER.Nn.MNM !== 255) wm.draw();
                    else {
                        ctx.globalAlpha = 0.5;
                        wm.NNv(vM.Wmm);
                        wm.draw();
                        ctx.globalAlpha = 1;
                    }
                    if (WMn[nM] === window.undefined) {
                        WMn[nM] = {
                            W: vM.showtxt("x" + nM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, window.undefined, 15, 12, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12)
                        };
                        WMn[nM].W.m = 1;
                    }
                    CanvasUtils.putonscreen(WMn[nM], (wm.mv.x / scaleby) + 42, (wm.mv.y / scaleby) + 42, -0.5, 0, 0, 0.9);
                }
                var NMV = Game.NMV;
                var WMnmM = World.PLAYER.Nn.mv;
                vvv = World.PLAYER.Nn.vvv;
                SY = 40 * scaleby;
                SX = 40 * scaleby;
                MVM = 62 * scaleby;
                mnMmm = 356 * scaleby;
                NWNmV = 237 * scaleby;
                for (var i = 0; i < vvv; i++) {
                    var wm = NMV[i];
                    if (i === WMnmM) {
                        if (Nnv !== 0) {
                            ctx.globalAlpha = 0.6;
                            CanvasUtils.putonscreen(vvNWN, (wm.mv.x / scaleby) + 20, (wm.mv.y / scaleby) + 20, 0, 0, 0, 0.85 * window.Math.max(0.01, window.Math.min(1, Nnv)));
                            ctx.globalAlpha = 1;
                        }
                    } else if (i < WMnmM) {
                        ctx.globalAlpha = 0.6;
                        CanvasUtils.putonscreen(vvNWN, (wm.mv.x / scaleby) + 20, (wm.mv.y / scaleby) + 20, 0, 0, 0, Vw * 0.85);
                        ctx.globalAlpha = 1;
                    }
                    wm.mv.x = (mnMmm + WX) + (i * MVM);
                    wm.mv.y = NWNmV + WY;
                    wm.draw();
                }
            }
            var VnmwN = Game.VnmwN;
            vvv = World.PLAYER.nWwmM;
            MVM = 45 * scaleby;
            mnMmm = 356 * scaleby;
            NWNmV = 151 * scaleby;
            for (var i = 0; i < vvv; i++) {
                var wm = VnmwN[i];
                wm.mv.x = (mnMmm + WX) + (i * MVM);
                wm.mv.y = NWNmV + WY;
                wm.draw();
            }
            if (World.PLAYER.canvasH !== wmmVm) {
                context2H.clearRect(0, 0, 280, 50);
                wmmVm = World.PLAYER.canvasH;
                var Nvm = vM.showtxt("SKILL POINT: " + wmmVm, "'Viga', sans-serif", "#FFFFFF", 32, 400);
                context2H.drawImage(Nvm, 24, 12);
            }
            ctx.drawImage(canvasH, WX + (455 * scaleby), WY + (378 * scaleby), (scaleby * canvasH.width) / 2, (scaleby * canvasH.height) / 2);
            if (World.PLAYER.mMvww !== mwwNm) {
                context2dG.clearRect(0, 0, 280, 148);
                mwwNm = World.PLAYER.mMvww;
                itemstatsfunc(context2dG, mwwNm);
            }
            ctx.drawImage(canvasG, WX + (439 * scaleby), WY + (24 * scaleby), (scaleby * canvasG.width) / 2, (scaleby * canvasG.height) / 2);
            if ((World.PLAYER.canvasH > 0) || (wvV.WMw > 0)) {
                var nn = (wvV.nn + delta) % 1000;
                wvV.nn = nn;
                var inmapy = WY / scaleby;
                if (wvV.nn < 500) inmapy += -62 - (15 * WNW.mWV.vvw(nn / 500));
                else inmapy += -62 - (15 * WNW.mWV.vvw((1000 - nn) / 500));
                ctx.globalAlpha = WNW.mWV.wWM(wvV.WMw);
                CanvasUtils.putonscreen(wvV, 266 + (craftbox.mv.x / scaleby), inmapy, 0, 0, 0, 1);
                ctx.globalAlpha = 1;
                if (World.PLAYER.canvasH <= 0) wvV.WMw = window.Math.max(0, wvV.WMw - (delta / 500));
                else if (wvV.WMw < 1) wvV.WMw = window.Math.min(1, wvV.WMw + (delta / 500));
            }
            var WVn = Game.WVn;
            vvv = World.PLAYER.nMnmW;
            SY = 40 * scaleby;
            SX = 40 * scaleby;
            MVM = 45 * scaleby;
            mnMmm = 356 * scaleby;
            NWNmV = 107 * scaleby;
            for (var i = 0; i < vvv; i++) {
                var wm = WVn[i];
                wm.mv.x = (mnMmm + WX) + (i * MVM);
                wm.mv.y = NWNmV + WY;
                var nM = window.Math.abs(NmWNV[i]);
                if (vwn[nM] === window.undefined) {
                    vwn[nM] = {
                        W: vM.showtxt("x" + nM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, window.undefined, 15, 12, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12)
                    };
                    vwn[nM].W.m = 1;
                }
                if (NmWNV[i] < 0) {
                    ctx.globalAlpha = 0.45;
                    wm.draw();
                    CanvasUtils.putonscreen(vwn[nM], (wm.mv.x / scaleby) + 30, (wm.mv.y / scaleby) + 32, -0.5, 0, 0, 0.9);
                    ctx.globalAlpha = 1;
                } else {
                    wm.draw();
                    CanvasUtils.putonscreen(vwn[nM], (wm.mv.x / scaleby) + 30, (wm.mv.y / scaleby) + 32, -0.5, 0, 0, 0.9);
                }
                if ((NWmNn === i) && (World.PLAYER.nNNWn[i] > 0)) NMMwN(World.PLAYER.nNNWn[i], wm.mv.x, wm.mv.y + (45 * scaleby));
            }
        };

        function optionswin(WWmVM, nmvnW, wMMmv, NNWVW, nMmMw, vNVNN, wvmWv, WmWnm, VNNMW, NVVwW, closebutt, WVVMw, vnNWN, MnvNV) {
            WWmVM.draw();
            var WX = WWmVM.mv.x;
            var WY = WWmVM.mv.y;
            closebutt.mv.x = WX + (265 * scaleby);
            closebutt.mv.y = WY + (0 * scaleby);
            closebutt.draw();
            nMmMw.mv.x = WX + (87 * scaleby);
            nMmMw.mv.y = WY + (15 * scaleby);
            if (keys.VmMnn() === 1) nMmMw.NNv(vM.Mwn);
            nMmMw.draw();
            vNVNN.mv.x = WX + (173 * scaleby);
            vNVNN.mv.y = WY + (15 * scaleby);
            if (keys.WwmNV() === 1) vNVNN.NNv(vM.Mwn);
            vNVNN.draw();
            NNWVW.mv.x = WX + (87 * scaleby);
            NNWVW.mv.y = WY + (62 * scaleby);
            if (CanvasUtils.options.wWMMM === 3) NNWVW.NNv(vM.Mwn);
            NNWVW.draw();
            wMMmv.mv.x = WX + (147 * scaleby);
            wMMmv.mv.y = WY + (62 * scaleby);
            if (CanvasUtils.options.wWMMM === 2) wMMmv.NNv(vM.Mwn);
            wMMmv.draw();
            nmvnW.mv.x = WX + (207 * scaleby);
            nmvnW.mv.y = WY + (62 * scaleby);
            if (CanvasUtils.options.wWMMM === 1) nmvnW.NNv(vM.Mwn);
            nmvnW.draw();
            wvmWv.mv.x = WX + (87 * scaleby);
            wvmWv.mv.y = WY + (117 * scaleby);
            if (audio.options.nNmMV === 1) wvmWv.NNv(vM.Mwn);
            wvmWv.draw();
            WmWnm.mv.x = WX + (147 * scaleby);
            WmWnm.mv.y = WY + (117 * scaleby);
            if (audio.options.nNmMV === 0) WmWnm.NNv(vM.Mwn);
            WmWnm.draw();
            VNNMW.mv.x = WX + (87 * scaleby);
            VNNMW.mv.y = WY + (167 * scaleby);
            if (audio.options.VWVWW === 1) VNNMW.NNv(vM.Mwn);
            VNNMW.draw();
            NVVwW.mv.x = WX + (147 * scaleby);
            NVVwW.mv.y = WY + (167 * scaleby);
            if (audio.options.VWVWW === 0) NVVwW.NNv(vM.Mwn);
            NVVwW.draw();
            MnvNV.mv.x = WX + (87 * scaleby);
            MnvNV.mv.y = WY + (217 * scaleby);
            if (NwMVW === 0) MnvNV.NNv(vM.Mwn);
            MnvNV.draw();
            vnNWN.mv.x = WX + (147 * scaleby);
            vnNWN.mv.y = WY + (217 * scaleby);
            if (NwMVW === 1) vnNWN.NNv(vM.Mwn);
            vnNWN.draw();
            WVVMw.mv.x = WX + (207 * scaleby);
            WVVMw.mv.y = WY + (217 * scaleby);
            if (NwMVW === 2) WVVMw.NNv(vM.Mwn);
            WVVMw.draw();
        };

        function VvVNw(player) {
            var PLAYER = World.socket[player.socketid];
            if (PLAYER.text.length > 0) {
                for (var i = 0;
                    (i < PLAYER.text.length) && (i < 2); i++) {
                    if (!PLAYER.label[i]) {
                        PLAYER.label[i] = vM.showtxt(PLAYER.text[i], "'Viga', sans-serif", "#ffffff", 32, 1000, "#000000", 33, 19, window.undefined, window.undefined, 0.55, 5);
                        PLAYER.WvWwv[i] = 0;
                        PLAYER.MVNWv[i] = 0;
                    }
                    if (i === 1) PLAYER.MVNWv[0] = WNW.mWV.vvw(PLAYER.NMWMV) * 28;
                }
                wwmww = delta / 1000;
                PLAYER.WvWwv[0] += wwmww;
                if (PLAYER.text.length > 1) {
                    PLAYER.NMWMV = window.Math.min(PLAYER.NMWMV + wwmww, 1);
                    if ((PLAYER.WvWwv[0] > 1) && (PLAYER.NMWMV > 0.5)) PLAYER.WvWwv[1] += wwmww;
                }
                for (var i = 0;
                    (i < PLAYER.text.length) && (i < 2); i++) {
                    var WMw = PLAYER.WvWwv[i];
                    if (WMw > 0) {
                        if (WMw < 0.25) ctx.globalAlpha = WMw * 4;
                        else if (WMw > 4.75) ctx.globalAlpha = window.Math.max((5 - WMw) * 5, 0);
                        else ctx.globalAlpha = 1;
                        var WY = 118;
                        var W = PLAYER.label[i];
                        ctx.drawImage(W, 0, 0, W.width, W.height, ((vertst + player.x) - (W.width / 4)) * scaleby, (((horist + player.y) - WY) - PLAYER.MVNWv[i]) * scaleby, (W.width / 2) * scaleby, (W.height / 2) * scaleby);
                        ctx.globalAlpha = 1;
                    }
                }
                if (PLAYER.WvWwv[0] > 5) {
                    PLAYER.WvWwv.shift();
                    PLAYER.text.shift();
                    PLAYER.MVNWv.shift();
                    PLAYER.label.shift();
                    PLAYER.NMWMV = 0;
                }
            }
        };


        function mVwvw(player) {
            var PLAYER = World.socket[player.socketid];
            if (((((player.nNN & 255) === 16) && (World.PLAYER.WMnWN !== 1)) && (player.socketid !== World.PLAYER.id)) && (((PLAYER.clan === -1) || (World.clans[PLAYER.clan].mvN !== PLAYER.wwV)) || (World.PLAYER.clan !== PLAYER.clan))) return;
            if (PLAYER.mMw === null) PLAYER.mMw = vM.showtxt(PLAYER.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            var W = PLAYER.mMw;
            var WY = 90;
            if (PLAYER.clan === -1) ctx.drawImage(W, ((vertst + player.x) - (W.Wvw / 2)) * scaleby, ((horist + player.y) - WY) * scaleby, W.Wvw * scaleby, W.mNm * scaleby);
            else if (PLAYER.clan !== -1) {
                var clan = World.clans[PLAYER.clan];
                if (clan.mvN === PLAYER.wwV) {
                    if (clan.WWMWm === null)
                    var isInClan = 0;
                    if (((player.socketid === World.PLAYER.id) || (((World.PLAYER.clan !== -1) && (World.PLAYER.clan === World.socket[player.socketid].clan)) && (World.socket[player.socketid].wwV === World.clans[World.PLAYER.clan].mvN)))) { isInClan = 1;
                        clan.WWMWm = vM.showtxt(("[" + clan.name) + "]", "'Viga', sans-serif", "#000000", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#83F6A4", 12); //#699CBB
                    } else clan.WWMWm = vM.showtxt(("[" + clan.name) + "]", "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12); //#699CBB
                    var wvMMv = clan.WWMWm;
                    ctx.drawImage(wvMMv, ((((vertst + player.x) - (W.Wvw / 2)) - (wvMMv.Wvw / 2)) - 0.5) * scaleby, ((horist + player.y) - WY) * scaleby, wvMMv.Wvw * scaleby, wvMMv.mNm * scaleby);
                    if ((W.width !== 0) && (W.height !== 0)) ctx.drawImage(W, (((vertst + player.x) - (W.Wvw / 2)) + (wvMMv.Wvw / 2)) * scaleby, ((horist + player.y) - WY) * scaleby, W.Wvw * scaleby, W.mNm * scaleby);
                } else PLAYER.clan = -1;
            }
        };

        

        function vmNmW(NMn, i, j, wVNVN, vWMwn, NVWwM, MWMvm) {
            var Nn = NVwvn[NMn.type];
            var W = Nn.W;
            if (W.m !== 1) {
                Nn.W = CanvasUtils.loadImage(Nn.src, Nn.W);
                return;
            }
            var nVNNn = NVWwM - NMn.i;
            var VwMWn = MWMvm - NMn.j;
            var nNmvn = (i + Nn.Mww.length) - nVNNn;
            var VWMmV = (j + Nn.Mww[0].length) - VwMWn;
            var nMNww = 0;
            var WvMwV = 0;
            for (var NWM = i, mmWMW = 0; NWM < nNmvn; NWM++, mmWMW++) {
                if (NWM >= VmvVW) {
                    nMNww = Nn.Mww.length - mmWMW;
                    break;
                }
                for (var mmm = j, mVvwm = 0; mmm < VWMmV; mmm++, mVvwm++) {
                    if (mmm >= wWmnn) {
                        WvMwV = Nn.Mww[0].length - mVvwm;
                        break;
                    } else vMnnw[NWM][mmm] = MNW;
                }
            }
            var WX = 0;
            var WY = 0;
            var SX = 0;
            var SY = 0;
            if ((nMNww !== 0) || (WvMwV !== 0)) {
                WX = (((NMn.j + VwMWn) * wmn) + vertst) * scaleby;
                WY = (((NMn.i + nVNNn) * wmn) + horist) * scaleby;
                nVNNn *= 32;
                VwMWn *= 32;
                SX = (W.height - (nMNww * 32)) + nVNNn;
                SY = (W.width - (WvMwV * 32)) + VwMWn;
            } else {
                WX = (((NMn.j + VwMWn) * wmn) + vertst) * scaleby;
                WY = (((NMn.i + nVNNn) * wmn) + horist) * scaleby;
                nVNNn *= 32;
                VwMWn *= 32;
                SX = W.height - nVNNn;
                SY = W.width - VwMWn;
            }
            ctx.drawImage(W, VwMWn, nVNNn, SY, SX, WX, WY, (SY * 3) * scaleby, (SX * 3) * scaleby);
        };

        function wNnvM() {
            WvmnV = CanvasUtils.nWV(WvmnV, (((Render.scale + NNmMN[0]) + NNmMN[1]) + NNmMN[2]) + NNmMN[3], vwMWM);
            wWWNM = scaleby;
            scaleby += WvmnV * scaleby;
            wvwNM = screenWidth / scaleby;
            wwWnm = screenHeight / scaleby;
        };

        function myplayerfocusinscreen() {
            var socket = Entitie.Wvm[INSplayers];
            var vWM = Entitie.border[INSplayers];
            var vvv = vWM.border;
            for (var i = 0; i < vvv; i++) {
                var PLAYER = socket[vWM.nnN[i]];
                if (PLAYER.socketid === World.PLAYER.id) {
                    if (checkspos.MWV(World.PLAYER.x, World.PLAYER.y, PLAYER.x, PLAYER.y) < 1) WMWvN = window.Math.max(0, WMWvN - delta);
                    else WMWvN = mMmvV;
                    var wVn = ENTITIES[INSplayers].mVNvN[PLAYER.nNN & 255];
                    var MnW = World.MnW;
                    if (wVn.MWw !== window.undefined) {
                        MnW.MWw.mNNmw = wVn.MWw;
                        MnW.vNN.mNNmw = wVn.wNV;
                    } else {
                        MnW.MWw.mNNmw = 0;
                        MnW.vNN.mNNmw = 0;
                    }
                    NmM = PLAYER.x;
                    WWV = PLAYER.y;
                    World.PLAYER.x = PLAYER.x;
                    World.PLAYER.y = PLAYER.y;
                    World.PLAYER.NWM = PLAYER.i;
                    World.PLAYER.mmm = PLAYER.j;
                    World.PLAYER.wvM = (ENTITIES[INSplayers].mNMNW[(PLAYER.nNN >> 8) & 255].type === 6) ? 1 : 0;
                    var vWwvm = window.Math.min(nwVmW, VNwMw);
                    if (myply.mappos > vWwvm) vWwvm = WwmVw * window.Math.min((myply.mappos - vWwvm) / vWwvm, 1);
                    else vWwvm = 0;
                    var WX = vWwvm * window.Math.cos(myply.angle);
                    var WY = vWwvm * window.Math.sin(myply.angle);
                    vvWnv = CanvasUtils.nWV(vvWnv, WX, WMNWw);
                    Nvmmn = CanvasUtils.nWV(Nvmmn, WY, WMNWw);
                    var nvVvv = 0;
                    var WvnMn = 0;
                    if (Render.shake > 0) {
                        Render.shake -= 1;
                        nvVvv += (window.Math.random() * 6) - 3;
                        WvnMn += (window.Math.random() * 6) - 3;
                    }
                    if (Render.nwNWm > 0) {
                        Render.nwNWm -= 1;
                        nvVvv += (window.Math.random() * 18) - 9;
                        WvnMn += (window.Math.random() * 18) - 9;
                    }
                    vertst = (((screencenterX / scaleby) - PLAYER.x) - vvWnv) + nvVvv;
                    horist = (((screencenterY / scaleby) - PLAYER.y) - Nvmmn) + WvnMn;
                    NVVWM = PLAYER.x + vvWnv;
                    WVNMV = PLAYER.y + Nvmmn;
                    rowx = ~~((myply.x*scaleby/scaleby +vvWnv - screencenterX/scaleby + NmM) / 100);
                    rowy = ~~((myply.y*scaleby/scaleby +Nvmmn - screencenterY/scaleby + WWV) / 100);
                    return;
                }
            }
        };

        function mNWNw() {
            for (var i = 0; i < World.PLAYER.Wvv.length; i++) {
                if (World.PLAYER.Wvv[i] !== 0) return 0;
            }
            return 1;
        };

        function wmVNW() {
            if (World.PLAYER.wvM === 1) {
                if ((World.PLAYER.Mww > 0) && ((World.PLAYER.VWVWw !== World.PLAYER.NWM) || (World.PLAYER.vNwMm !== World.PLAYER.mmm))) {
                    for (var i = 0; i < World.PLAYER.Wvv.length; i++) {
                        if (World.PLAYER.Wvv[i] === 0) {
                            World.PLAYER.Wvv[i] = World.PLAYER.Mww;
                            World.PLAYER.NVNMw[i] = World.PLAYER.VWVWw;
                            World.PLAYER.NmVnm[i] = World.PLAYER.vNwMm;
                            break;
                        }
                    }
                    World.PLAYER.Mww = 0;
                    World.PLAYER.VWVWw = World.PLAYER.NWM;
                    World.PLAYER.vNwMm = World.PLAYER.mmm;
                }
                World.PLAYER.Mww = window.Math.min(Mvvwv, World.PLAYER.Mww + delta);
                for (var i = 0; i < World.PLAYER.Wvv.length; i++) World.PLAYER.Wvv[i] = window.Math.max(0, World.PLAYER.Wvv[i] - delta);
            } else if ((World.PLAYER.Mww === 0) && (mNWNw() === 1)) return;
            else {
                World.PLAYER.Mww = window.Math.max(0, World.PLAYER.Mww - delta);
                for (var i = 0; i < World.PLAYER.Wvv.length; i++) World.PLAYER.Wvv[i] = window.Math.max(0, World.PLAYER.Wvv[i] - delta);
            }
            if (wWNmv.m !== 1) {
                wWNmv = CanvasUtils.loadImage(craftgrid, wWNmv);
                return;
            }
            ctx.globalAlpha = World.PLAYER.Mww / Mvvwv;
            var WY = scaleby * (((World.PLAYER.VWVWw * wmn) + horist) + nwn);
            var WX = scaleby * (((World.PLAYER.vNwMm * wmn) + vertst) + nwn);
            var SY = (scaleby * wWNmv.width) / 2;
            var SX = (scaleby * wWNmv.height) / 2;
            ctx.drawImage(wWNmv, WX - (SY / 2), WY - (SX / 2), SY, SX);
            ctx.globalAlpha = 1;
            for (var i = 0; i < World.PLAYER.Wvv.length; i++) {
                if (World.PLAYER.Wvv[i] > 0) {
                    ctx.globalAlpha = World.PLAYER.Wvv[i] / Mvvwv;
                    var WY = scaleby * (((World.PLAYER.NVNMw[i] * wmn) + horist) + nwn);
                    var WX = scaleby * (((World.PLAYER.NmVnm[i] * wmn) + vertst) + nwn);
                    var SY = (scaleby * wWNmv.width) / 2;
                    var SX = (scaleby * wWNmv.height) / 2;
                    ctx.drawImage(wWNmv, WX - (SY / 2), WY - (SX / 2), SY, SX);
                    ctx.globalAlpha = 1;
                }
            }
        };

        function wmMwV() {
            var wVNVN = window.Math.min(nmn.height - VmvVW, window.Math.max(0, (((WnWvv - VmvVW) / 2) + window.Math.floor((WVNMV / wmn) - (VmvVW / 2))) + 1));
            var vWMwn = window.Math.min(nmn.width - wWmnn, window.Math.max(0, (((NVmMW - wWmnn) / 2) + window.Math.floor((NVVWM / wmn) - (wWmnn / 2))) + 1));
            var SX = wVNVN + VmvVW;
            var SY = vWMwn + wWmnn;
            for (var i = wVNVN; i < SX; i++) {
                for (var j = vWMwn; j < SY; j++) {
                    var player = nmn.nWmMn[i][j];
                }
            }
        };

        function vWMWW(player) {
            var PLAYER = World.socket[player.socketid];
            if ((PLAYER !== window.undefined) && (PLAYER.nNnWn.length > 0)) {
                if (PLAYER.mvnvM >= Mvnwm) PLAYER.mvnvM = 0;
                var mN = PLAYER.mvnvM;
                var vMN = PLAYER.position[0];
                var vV = PLAYER.nNnWn[0];
                if (mN === 0) {
                    var mappos = checkspos.mappos(player.x, player.y, NmM, WWV);
                }
                PLAYER.mvnvM += delta;
                if (PLAYER.mvnvM >= Mvnwm) {
                    PLAYER.mvnvM = 0;
                    PLAYER.position.shift();
                    PLAYER.nNnWn.shift();
                }
                var W = wVMNN[vV][vMN];
                if (W.m !== 1) {
                    wVMNN[vV][vMN] = CanvasUtils.loadImage((((NVvVm + vV) + "_") + vMN) + ".png", W);
                    return;
                }
                var nn = 0;
                if (mN < mmWWw) {
                    var mwvWV = mN / mmWWw;
                    ctx.globalAlpha = mwvWV;
                    nn = 15 * (1 - mwvWV);
                } else if (mN > WWMnN) {
                    var mwVvV = (Mvnwm - mN) / (Mvnwm - WWMnN);
                    ctx.globalAlpha = mwVvV;
                    nn = 40 * (mwVvV - 1);
                }
                ctx.drawImage(W, ((vertst + player.x) - 120) * scaleby, ((horist + player.y) + (nn - 45)) * scaleby, (W.width * scaleby) / 2, (W.height * scaleby) / 2);
                ctx.globalAlpha = 1;
            }
        };

        function showruncloud(player) {
            var PLAYER = World.socket[player.socketid];
            for (var i = 0; i < PLAYER.mNWvv.length; i++) {
                var WMw = PLAYER.mNWvv[i];
                if ((i > 0) && (WMw.mN <= 0)) {
                    var vVVVn = PLAYER.mNWvv[i - 1];
                    if ((vVVVn.mN > 500) || (vVVVn.mN <= 0)) continue;
                }
                if ((player.speed > ENTITIES[INSplayers].speed) || (WMw.mN > 0)) {
                    var mVn = ENTITIES[INSplayers].mNWvv;
                    var W = mVn.W;
                    if (W.m !== 1) {
                        mVn.W = CanvasUtils.loadImage(mVn.src, mVn.W);
                        return;
                    }
                    if (WMw.mN <= 0) {
                        WMw.mN = 750;
                        WMw.angle = window.Math.random() * WNVNM;
                        WMw.x = player.x;
                        WMw.y = player.y;
                        WMw.size = 1 + (window.Math.random() * 0.8);
                    } else WMw.mN -= delta;
                    var vW = WNW.mWV.VnvVv(window.Math.max(0, WMw.mN / 750));
                    var VwW = (((scaleby * (WMw.size + 1)) * vW) * W.width) / 7;
                    var Wvw = -VwW / 2;
                    ctx.save();
                    ctx.translate((vertst + WMw.x) * scaleby, (horist + WMw.y) * scaleby);
                    ctx.rotate(WMw.angle);
                    ctx.globalAlpha = window.Math.max(0, vW * vW);
                    ctx.drawImage(W, Wvw, Wvw, VwW, VwW);
                    ctx.restore();
                }
            }
        };

        function Wvmnw(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var NWn = 0;
            var Vmwnn = player.state & 254;
            var Nmm = nV.Mmv;
            var VnN = nV.mMM;
            if (Vmwnn === 4) {
                if (PLAYER.mWv === -1) {
                    var MNmnm = (player.nNN >> 8) & 255;
                    if ((audio.ww.Nnn[MNmnm] !== 0) && ((Render.MmW - PLAYER.MMvnN) > 800)) {
                        PLAYER.MMvnN = Render.MmW;
                        var VVmnw = window.Math.floor(window.Math.random() * nV.mVM);
                        audio.VnV(audio.ww.Nnn[MNmnm][VVmnw], nV.vnM, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 4, nV.Mnv);
                    }
                    PLAYER.mWv = 0;
                }
                if (PLAYER.NmMVW === 1) PLAYER.mWv = window.Math.max(0, PLAYER.mWv - delta);
                else PLAYER.mWv = window.Math.min(nV.mnv, PLAYER.mWv + delta);
                var vW = PLAYER.mWv / nV.mnv;
                NWn = vW * nV.NWn;
                if ((PLAYER.mWv === 0) || (PLAYER.mWv === nV.mnv)) PLAYER.NmMVW *= -1;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.mWv = -1;
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                PLAYER.mWv = -1;
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, Nmm.angle + player.angle, ((Nmm.x + (nn * PLAYER.orientation)) + NWn) + Vw, Nmm.y, imgMovement);
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, -VnN.angle + player.angle, ((VnN.x + (nn * PLAYER.orientation)) + NWn) + Vw, VnN.y, imgMovement);
            var idd = nV.nV;
            CanvasUtils.putonscreen(idd, WX, WY, player.angle, ((idd.x + (nn * PLAYER.orientation)) + Vw) + NWn, idd.y, imgMovement);
            if (player.nMW > 0) {
                var mnM = 1;
                player.nMW -= delta;
                var vW = 0;
                if (player.nMW > 150) vW = WNW.mWV.wWM((300 - player.nMW) / 300);
                else {
                    vW = WNW.mWV.wMn(player.nMW / 150);
                    mnM += (1 - vW) * 0.2;
                }
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.vVv, WX, WY, player.angle, 0, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle, 0, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle, 0, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle, 0, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle, 0, 0, imgMovement);
        };

        function vwVWm(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var NWn = 0;
            var MnN = 0;
            var WNN = 0;
            var WMw = -1;
            var Nmm = nV.Mmv;
            var VnN = nV.mMM;
            var mNvwv = PLAYER.mNvwv;
            if (player.VMn > 0) {
                if (player.VMn === player.nWM) {
                    for (var i = 0; i < mNvwv.length; i++) {
                        var wWN = mNvwv[i];
                        if (wWN.mN <= 0) {
                            wWN.type = nV.wWN;
                            wWN.mN = nV.vVMMM;
                            wWN.x = WX + (window.Math.cos(player.angle) * 44);
                            wWN.y = WY + (window.Math.sin(player.angle) * 44);
                            var wW = ((-window.Math.PI / 2.5) + player.angle) + ((window.Math.random() * -window.Math.PI) / 3.5);
                            wWN.wwMnv = window.Math.cos(wW);
                            wWN.NwVWn = window.Math.sin(wW);
                            break;
                        }
                    }
                }
                player.VMn = window.Math.max(0, player.VMn - delta);
                var vW = (player.VMn > 80) ? (1 - ((player.VMn - 80) / 100)) : (player.VMn / 80);
                if (nV.WNw === 0) {
                    var nWvvW = mVn.Mmw[nV.Mmw].length;
                    for (var Mmw = 0; Mmw < nWvvW; Mmw++) {
                        if (player.VMn > (nV.mN - (30 * (Mmw + 1)))) {
                            WMw = Mmw;
                            break;
                        }
                    }
                }
                WNN = vW * nV.WNN;
                MnN = vW * nV.MnN;
                NWn = vW * nV.NWn;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, Nmm.angle + player.angle, ((Nmm.x + (nn * PLAYER.orientation)) + NWn) + Vw, Nmm.y, imgMovement);
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, -VnN.angle + player.angle, ((VnN.x + (nn * PLAYER.orientation)) + NWn) + Vw, VnN.y, imgMovement);
            var idd = nV.nV;
            if ((WMw >= 0) && (nV.WNw === 0)) {
                var Mmw = mVn.Mmw[nV.Mmw][WMw];
                CanvasUtils.putonscreen(Mmw, WX, WY, player.angle, (((idd.x + (nn * PLAYER.orientation)) + Vw) + MnN) + nV.NnV, idd.y, imgMovement);
            }
            CanvasUtils.putonscreen(idd, WX, WY, player.angle, ((idd.x + (nn * PLAYER.orientation)) + Vw) + MnN, idd.y, imgMovement);
            for (var i = 0; i < mNvwv.length; i++) {
                var wWN = mNvwv[i];
                if (wWN.mN > 0) {
                    wWN.x += (delta * wWN.wwMnv) * 0.18;
                    wWN.y += (delta * wWN.NwVWn) * 0.18;
                    if ((wWN.mN < 200) && (ctx.globalAlpha === 1)) {
                        ctx.globalAlpha = WNW.mWV.wMn(wWN.mN / 200);
                        CanvasUtils.putonscreen(mVn.mNvwv[wWN.type], wWN.x, wWN.y, wWN.mN * 0.007, 0, 0, imgMovement);
                        ctx.globalAlpha = 1;
                    } else CanvasUtils.putonscreen(mVn.mNvwv[wWN.type], wWN.x, wWN.y, wWN.mN * 0.007, 0, 0, imgMovement);
                    wWN.mN -= delta;
                }
            }
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle, WNN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle, WNN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle, WNN, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle, WNN, 0, imgMovement);
        };

        function WVVmN(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var nmm = 0;
            var NNM = 0;
            var NWW = 0;
            var wnN = 0;
            if (player.VMn > 0) {
                player.VMn = window.Math.max(0, player.VMn - delta);
                vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                nmm = -WNW.mWV.vvw(vW) * 0.35;
                wnN = vW * 3;
                NWW = -vW * 20;
                NNM = vW * 3;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var nwnMw = nV.nwnMw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var NwM = nV.Mmv;
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, (NwM.angle + player.angle) - nmm, ((NwM.x - (nn * PLAYER.orientation)) + NWW) + nwnMw, NwM.y, imgMovement);
            if (player.VMn > 0) {
                var WnVmv = nV.WnVmv;
                CanvasUtils.putonscreen(WnVmv, WX, WY, player.angle, ((WnVmv.x - (nn * PLAYER.orientation)) + nwnMw) + NWW, WnVmv.y, imgMovement);
            }
            var idd = nV.nV;
            CanvasUtils.putonscreen(idd, WX, WY, idd.angle + player.angle, ((idd.x + (nn * PLAYER.orientation)) + Vw) + NNM, idd.y, imgMovement);
            NwM = nV.mMM;
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, -NwM.angle + player.angle, ((NwM.x + (nn * PLAYER.orientation)) + NNM) + Vw, NwM.y, imgMovement);
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle - (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle - (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle - (nmm / 1.5), wnN, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle - (nmm / 1.5), wnN, 0, imgMovement);
        };

        function mWNvw(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var nmm = 0;
            var NNM = 0;
            var NWW = 0;
            var wnN = 0;
            if (player.VMn > 0) {
                player.VMn = window.Math.max(0, player.VMn - delta);
                vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                nmm = -WNW.mWV.vvw(vW) * 0.55;
                wnN = vW * 3;
                NWW = -vW * 25;
                NNM = vW * 10;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var NwM = nV.mMM;
            var MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, ((-NwM.angle + player.angle) - Vw) - nmm, (NwM.x - (nn * PLAYER.orientation)) + NNM, NwM.y, imgMovement);
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle - (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle - (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle - (nmm / 1.5), wnN, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle - (nmm / 1.5), wnN, 0, imgMovement);
            var nwnMw = nV.nwnMw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            NwM = nV.Mmv;
            MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, NwM.angle + player.angle, ((NwM.x + (nn * PLAYER.orientation)) + NWW) + nwnMw, NwM.y, imgMovement);
            var idd = nV.nV;
            CanvasUtils.putonscreen(idd, WX, WY, idd.angle + player.angle, ((idd.x + (nn * PLAYER.orientation)) + nwnMw) + NWW, idd.y, imgMovement);
        };

        function mvwMm(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var nmm = 0;
            var NNM = 0;
            var NWW = 0;
            var wnN = 0;
            var Nmm = nV.Mmv;
            var VnN = nV.mMM;
            if (player.VMn > 0) {
                player.VMn = window.Math.max(0, player.VMn - delta);
                vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                nmm = -WNW.mWV.vvw(vW) * 0.4;
                wnN = vW * 3;
                NNM = vW * VnN.mappos;
                NWW = vW * Nmm.mappos;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var idd = nV.nV;
            CanvasUtils.mVnNN(idd, WX, WY, (idd.angle + player.angle) + Vw, idd.x + (nn * PLAYER.orientation), idd.y, imgMovement, nmm * idd.WWm, idd.x2, idd.y2);
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, ((Nmm.angle + player.angle) + Vw) + (nmm * Nmm.WWm), (Nmm.x + (nn * PLAYER.orientation)) + NWW, Nmm.y, imgMovement);
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, ((-VnN.angle + player.angle) + Vw) + (nmm * VnN.WWm), (VnN.x + (nn * PLAYER.orientation)) + NNM, VnN.y, imgMovement);
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle + (nmm / 1.5), wnN, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle + (nmm / 1.5), wnN, 0, imgMovement);
        };

        function mmmMw(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var NNM = 0;
            var NWW = 0;
            if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var NwM = nV.Mmv;
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, (NwM.angle + player.angle) + Vw, (NwM.x + (nn * PLAYER.orientation)) + NWW, NwM.y, imgMovement);
            NwM = nV.mMM;
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, (-NwM.angle + player.angle) - Vw, (NwM.x - (nn * PLAYER.orientation)) + NNM, NwM.y, imgMovement);
            CanvasUtils.putonscreen(nV.putableimg, WX, WY, ((-NwM.angle + player.angle) - Vw) + (window.Math.PI / 3), ((NwM.x - (nn * PLAYER.orientation)) + NNM) - 40, NwM.y - 15, imgMovement);
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle, 0, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle, 0, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle, 0, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle, 0, 0, imgMovement);
            CanvasUtils.putonscreen(nV.MMwvW, WX, WY, player.angle, 0, 0, imgMovement);
        };
        var nVWnV = [0, 0, 0, 0];

        function placingobj() {
            var nwmVM = 0;
            if ((World.PLAYER.wvM === 1) && (World.PLAYER.putableimg !== 0)) {
                var idd = items[World.PLAYER.putableimg];
                if (idd.nvN !== 0) {
                    idd = idd.nvN[World.PLAYER.mWmnv];
                    idd.notputableimg = idd.Nn;
                    idd.putableimg = idd.Nn;
                    idd.Wwv = nVWnV;
                    idd.nWn = nVWnV;
                }
                var wW = myply.angle;
                var Rot = (idd.Mvw === 1) ? 0 : World.PLAYER.nvMwN;
                World.PLAYER.Vmm = World.PLAYER.mmm + window.Math.floor((nwn + (window.Math.cos(wW) * wmn)) / wmn);
                World.PLAYER.NNV = World.PLAYER.NWM + window.Math.floor((nwn + (window.Math.sin(wW) * wmn)) / wmn);
                var WX = ((idd.Wwv[Rot] + vertst) + nwn) + (wmn * World.PLAYER.Vmm);
                var WY = ((idd.nWn[Rot] + horist) + nwn) + (wmn * World.PLAYER.NNV);
                if ((((World.PLAYER.Vmm >= 0) && (World.PLAYER.NNV >= 0)) && (World.PLAYER.Vmm < NMv)) && (World.PLAYER.NNV < wWw)) {
                    var VMV = matrix[World.PLAYER.NNV][World.PLAYER.Vmm];
                    var clan = (World.PLAYER.clan === -1) ? -2 : World.PLAYER.clan;
                    if ((VMV.NMn === MNW) && (((idd.WvV !== 2) || (VMV.wMV === 0)) || (VMV.nww === SKILLS.__PLANT__))) {
                        World.PLAYER.nwVMm = 1; // before 0
                        CanvasUtils.putonscreen(idd.notputableimg, WX, WY, Rot * PIby2, 0, 0, 1);
                    } else if ((((idd.detail.nww === SKILLS.__PLANT__) || (idd.WvV === 2)) || (((VMV.socketid !== 0) && (VMV.socketid !== World.PLAYER.id)) && (World.socket[VMV.socketid].clan !== clan))) && (VMV.nNNwM === MNW)) {
                        World.PLAYER.nwVMm = 0;
                        CanvasUtils.putonscreen(idd.notputableimg, WX, WY, Rot * PIby2, 0, 0, 1);
                    } else if ((idd.MMnVm !== window.undefined) && ((((Rot % 2) === 0) && ((((((World.PLAYER.NNV < 1) || (World.PLAYER.NNV >= (wWw - 1))) || (matrix[World.PLAYER.NNV + 1][World.PLAYER.Vmm].NMn === MNW)) || ((matrix[World.PLAYER.NNV + 1][World.PLAYER.Vmm].nNNwM === MNW) && (((matrix[World.PLAYER.NNV + 1][World.PLAYER.Vmm].socketid !== World.PLAYER.id) && (matrix[World.PLAYER.NNV + 1][World.PLAYER.Vmm].socketid !== 0)) && (World.socket[matrix[World.PLAYER.NNV + 1][World.PLAYER.Vmm].socketid].clan !== clan)))) || (matrix[World.PLAYER.NNV - 1][World.PLAYER.Vmm].NMn === MNW)) || ((matrix[World.PLAYER.NNV - 1][World.PLAYER.Vmm].nNNwM === MNW) && (((matrix[World.PLAYER.NNV - 1][World.PLAYER.Vmm].socketid !== World.PLAYER.id) && (matrix[World.PLAYER.NNV - 1][World.PLAYER.Vmm].socketid !== 0)) && (World.socket[matrix[World.PLAYER.NNV - 1][World.PLAYER.Vmm].socketid].clan !== clan))))) || (((Rot % 2) === 1) && (((((((World.PLAYER.Vmm < 1) || (World.PLAYER.Vmm >= (NMv - 1))) || (matrix[World.PLAYER.NNV][World.PLAYER.Vmm + 1].NMn === MNW)) || ((matrix[World.PLAYER.NNV][World.PLAYER.Vmm + 1].nNNwM === MNW) && (((matrix[World.PLAYER.NNV][World.PLAYER.Vmm + 1].socketid !== World.PLAYER.id) && (matrix[World.PLAYER.NNV][World.PLAYER.Vmm + 1].socketid !== 0)) && (World.socket[matrix[World.PLAYER.NNV][World.PLAYER.Vmm + 1].socketid].clan !== clan)))) || (matrix[World.PLAYER.NNV][World.PLAYER.Vmm - 1].NMn === MNW)) || ((matrix[World.PLAYER.NNV][World.PLAYER.Vmm - 1].nNNwM === MNW) && (((matrix[World.PLAYER.NNV][World.PLAYER.Vmm - 1].socketid !== World.PLAYER.id) && (matrix[World.PLAYER.NNV][World.PLAYER.Vmm - 1].socketid !== 0)) && (World.socket[matrix[World.PLAYER.NNV][World.PLAYER.Vmm - 1].socketid].clan !== clan)))) || (World.PLAYER.NWM === World.PLAYER.NNV))))) {
                        World.PLAYER.nwVMm = 0;
                        CanvasUtils.putonscreen(idd.notputableimg, WX, WY, Rot * PIby2, 0, 0, 1);
                    } else {
                        World.PLAYER.nwVMm = 1;
                        CanvasUtils.putonscreen(idd.putableimg, WX, WY, Rot * PIby2, 0, 0, 1);
                    }
                }
                if (NvwMN.m !== 1) {
                    NvwMN = CanvasUtils.loadImage(hintrotate, NvwMN);
                    return;
                }
                if ((idd.Mvw === 1) || (World.PLAYER.mvn >= 0)) nwmVM = window.Math.max(0, World.PLAYER.NvwMN - delta);
                else nwmVM = window.Math.min(900, World.PLAYER.NvwMN + delta);
            } else nwmVM = window.Math.max(0, World.PLAYER.NvwMN - delta);
            if (nwmVM > 0) {
                ctx.globalAlpha = WNW.mWV.wMn(window.Math.max(0, nwmVM - 600) / 300);
                var imgMovement = scaleby + (WvmnV * scaleby);
                var vNwMN = imgMovement / scaleby;
                var SY = (scaleby * NvwMN.width) / 2;
                var SX = (scaleby * NvwMN.height) / 2;
                ctx.drawImage(NvwMN, ((vertst + NmM) * scaleby) - (SY / 2), window.Math.max(10 * scaleby, ((((horist + WWV) * scaleby) - (SX / 2)) - (65 * scaleby)) - (60 * scaleby)), SY, SX);
                ctx.globalAlpha = 1;
            }
            World.PLAYER.NvwMN = nwmVM;
        };

        function nwMNv(mVn, nV, wVn, player, imgMovement, WX, WY) {
            var PLAYER = World.socket[player.socketid];
            var WMW = 0;
            var Wmv = PLAYER.Wmv - Render.MmW;
            var MNV = PLAYER.MNV - Render.MmW;
            if (Wmv > 0) {
                if (MNV > 0) WMW = 3;
                else if (PLAYER.MNV > 0) WMW = 5;
                else WMW = 1;
            } else if (MNV > 0) WMW = 2;
            else if (PLAYER.MNV > 0) WMW = 4;
            var MMm = mVn.WnmmW[WMW];
            var nmm = 0;
            var NNM = 0;
            var NWW = 0;
            var wnN = 0;
            if (player.VMn > 0) {
                player.VMn = window.Math.max(0, player.VMn - delta);
                player.VMn = window.Math.min(player.VMn, nV.mN);
                vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                nmm = (PLAYER.NmMVW * WNW.mWV.vvw(vW)) * 0.55;
                wnN = vW * 3;
                if (PLAYER.NmMVW === 1) NNM = vW * 25;
                else NWW = vW * 25;
                if (player.VMn === 0) PLAYER.NmMVW *= -1;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                PLAYER.Vw = (PLAYER.Vw + delta) % 1500;
                if (PLAYER.nn !== 0) {
                    if (PLAYER.nn < 400) PLAYER.nn = 800 - PLAYER.nn;
                    PLAYER.nn = PLAYER.nn + delta;
                    if (PLAYER.nn > 800) PLAYER.nn = 0;
                }
            } else {
                if (player.speed > ENTITIES[INSplayers].speed) PLAYER.nn = PLAYER.nn + (delta * 1.9);
                else PLAYER.nn = PLAYER.nn + delta;
                if (PLAYER.nn > 800) {
                    PLAYER.orientation *= -1;
                    PLAYER.nn = PLAYER.nn % 800;
                }
                if (PLAYER.Vw !== 0) {
                    if (PLAYER.Vw < 750) PLAYER.Vw = 1500 - PLAYER.Vw;
                    PLAYER.Vw = PLAYER.Vw + delta;
                    if (PLAYER.Vw > 1500) PLAYER.Vw = 0;
                }
            }
            var Vw = nV.Vw * ((PLAYER.Vw < 750) ? (PLAYER.Vw / 750) : (1 - ((PLAYER.Vw - 750) / 750)));
            var nn = nV.nn * ((PLAYER.nn < 400) ? (PLAYER.nn / 400) : (1 - ((PLAYER.nn - 400) / 400)));
            var NwM = nV.Mmv;
            var MVn = (wVn.Mmv === window.undefined) ? MMm.Mmv : wVn.Mmv;
            CanvasUtils.putonscreen(MVn, WX, WY, ((NwM.angle + player.angle) + Vw) + nmm, (NwM.x + (nn * PLAYER.orientation)) + NWW, NwM.y, imgMovement);
            NwM = nV.mMM;
            MVn = (wVn.mMM === window.undefined) ? MMm.mMM : wVn.mMM;
            CanvasUtils.putonscreen(MVn, WX, WY, ((-NwM.angle + player.angle) - Vw) + nmm, (NwM.x - (nn * PLAYER.orientation)) + NNM, NwM.y, imgMovement);
            if (player.nMW > 0) {
                var mnM = 1;
                player.nMW -= delta;
                var vW = 0;
                if (player.nMW > 150) vW = WNW.mWV.wWM((300 - player.nMW) / 300);
                else {
                    vW = WNW.mWV.wMn(player.nMW / 150);
                    mnM += (1 - vW) * 0.2;
                }
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.vVv, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 3;
                WY += (window.Math.sin(player.WvN) * vW) * 3;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mVn.Mmm, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            if (player.mNW > 0) {
                var mnM = 1;
                player.mNW -= delta;
                if (player.mNW > 150) ctx.globalAlpha = window.Math.min(1, window.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                else {
                    var vW = WNW.mWV.wMn(player.mNW / 150);
                    mnM += (1 - vW) * 0.2;
                    ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                }
                CanvasUtils.putonscreen(mVn.mNW, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(MMm.head, WX, WY, player.angle + (nmm / 1.5), wnN, 0, imgMovement);
            if (wVn.head !== window.undefined) CanvasUtils.putonscreen(wVn.head, WX, WY, player.angle + (nmm / 1.5), wnN, 0, imgMovement);
        };

        function creaturesinscreenfunc(player) {
            var mnn = VVv[player.nNN & 15];
            matrix[player.i][player.j].NMn = MNW;
            matrix[player.i][player.j].wMV = player.socketid;
            matrix[player.i][player.j].nww = window.undefined;
            var imgMovement = 1;
            var WX = vertst + player.x;
            var WY = horist + player.y;
            if (player.vwW !== 0) {
                player.wmm += delta;
                var vW = WNW.mWV.VnvVv(1 - ((player.wmm - 500) / 400));
                ctx.globalAlpha = window.Math.min(window.Math.max(0, vW), 1);
                CanvasUtils.putonscreen(mnn.wmm, WX, WY, player.angle, 0, 0, 1);
                vW = WNW.mWV.VnvVv(1 - (player.wmm / 400));
                imgMovement = window.Math.min(1 + (0.5 * (1 - vW)), 1.5);
                ctx.globalAlpha = window.Math.max(0, vW);
            }
            if ((player.nNN & 16) === 16) {
                player.nNN &= ~16;
                player.Mmm = 250;
                player.WvN = (WNVNM * ((player.nNN >> 5) & 31)) / 31;
            }
            mnn.draw(mnn, player, WX, WY, imgMovement);
            if (player.vwW !== 0) {
                if (player.wmm > 900) player.vwW = 2;
                ctx.globalAlpha = 1;
            }
        };

        function playerinscreenfunc(player) {
            matrix[player.i][player.j].NMn = MNW;
            matrix[player.i][player.j].wMV = player.socketid;
            matrix[player.i][player.j].nww = window.undefined;
            var mVn = ENTITIES[INSplayers];
            var MNmnm = (player.nNN >> 8) & 255;
            var nV = mVn.mNMNW[MNmnm];
            var wVn = mVn.mVNvN[player.nNN & 255];
            var imgMovement = 1;
            var Vmwnn = player.state & 254;
            var WX = vertst + player.x;
            var WY = horist + player.y;
            if (player.vwW !== 0) {
                player.wmm += delta;
                var vW = WNW.mWV.VnvVv(1 - ((player.wmm - 500) / 400));
                ctx.globalAlpha = window.Math.min(window.Math.max(0, vW), 1);
                CanvasUtils.putonscreen(mVn.wmm, WX, WY, player.angle, 0, 0, 1);
                vW = WNW.mWV.VnvVv(1 - (player.wmm / 400));
                imgMovement = window.Math.min(1 + (0.5 * (1 - vW)), 1.5);
                ctx.globalAlpha = window.Math.max(0, vW);
            }
            if (Vmwnn === 2) {
                player.state &= 65281;
                if (audio.ww.Nnn[MNmnm] !== 0) {
                    var VVmnw = window.Math.floor(window.Math.random() * nV.mVM);
                    audio.VnV(audio.ww.Nnn[MNmnm][VVmnw], nV.vnM, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 4, nV.Mnv);
                }
                if (player.VMn <= 0) {
                    player.VMn = nV.mN;
                    player.nWM = nV.mN;
                }
            } else if (Vmwnn === 6) player.state &= 65281;
            switch (nV.type) {
                case 0:
                    nwMNv(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 1:
                    mvwMm(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 2:
                    vwVWm(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 3:
                    mWNvw(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 4:
                    WVVmN(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 5:
                    Wvmnw(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
                case 6:
                    mmmMw(mVn, nV, wVn, player, imgMovement, WX, WY);
                    break;
            }
            if (player.vwW !== 0) {
                if (player.wmm > 900) player.vwW = 2;
                ctx.globalAlpha = 1;
            }
        };
        
        function timeret() {
            if (World.PLAYER.ghoul !== 0) return;
            var NMMmV = World.PLAYER.mnWwv;
            if (NMMmV > 0) {
                if (NMMmV < 500) ctx.globalAlpha = WNW.mWV.wWM(NMMmV / 500);
                else if (NMMmV > 1500) ctx.globalAlpha = WNW.mWV.wWM(1 - ((NMMmV - 1500) / 500));
                else ctx.globalAlpha = 1;
                var wmN = (World.PLAYER.NmWvw === 1) ? vwnWv : VNN[items[World.PLAYER.NmWvw].loot];
                CanvasUtils.putonscreen(NmWvw, nvm, 50, 0, 0, 0, 1);
                CanvasUtils.putonscreen(wmN, nvm, 50, 0, 0, 0, 1);
                ctx.globalAlpha = 1;
                World.PLAYER.mnWwv -= delta;
            }
            var mvn = World.PLAYER.mvn;
            switch (mvn) {
                case 0:
                    if (nMWVv.m !== 1) {
                        if (mobile === 0) nMWVv = CanvasUtils.loadImage(looticon, nMWVv);
                        else nMWVv = CanvasUtils.loadImage(lootmobileicon, nMWVv);
                        return;
                    }
                    var imgMovement = scaleby + (WvmnV * scaleby);
                    var vNwMN = imgMovement / scaleby;
                    var scalex = (scaleby * nMWVv.width) / 2;
                    var scaley = (scaleby * nMWVv.height) / 2;
                    var posx = ((vertst + NmM) * imgMovement) - (scalex / 2);
                    var posy = window.Math.max(10 * scaleby, ((((horist + WWV) * imgMovement) - (scaley / 2)) - (65 * imgMovement)) - (60 * scaleby));
                    if (mobile === 1) {
                        Game.mNNwM = posx;
                        Game.nNwMM = posy;
                        Game.vwVnW = scalex;
                        Game.mnNnW = scaley;
                    }
                    ctx.drawImage(nMWVv, posx, posy, scalex, scaley);
                    var loot = VNN[World.PLAYER.loot];
                    posx = ((vertst + NmM) * vNwMN) - (scalex / (2 * scaleby));
                    posy = window.Math.max(10, ((((horist + WWV) * vNwMN) - (scaley / (2 * scaleby))) - (65 * vNwMN)) - 60);
                    CanvasUtils.putonscreen(loot, posx + 77, posy + 33, loot.angle, 0, 0, loot.scale);
                    break;
                case 1:
                    var vW = World.PLAYER.wVnVm / World.PLAYER.nWVvv;
                    var mN = World.PLAYER.nWVvv - World.PLAYER.wVnVm;
                    World.PLAYER.wVnVm -= delta;
                    if (World.PLAYER.wVnVm < 0) {
                        World.PLAYER.mvn = -1;
                        return;
                    }
                    if (timer.m !== 1) {
                        timer = CanvasUtils.loadImage(timericon, timer);
                        return;
                    }
                    if (arrow.m !== 1) {
                        arrow = CanvasUtils.loadImage(timerarrow, arrow);
                        return;
                    }
                    if (lights.m !== 1) {
                        lights = CanvasUtils.loadImage(timerlights, lights);
                        return;
                    }
                    var imgMovement = scaleby + (WvmnV * scaleby);
                    var scalex = (scaleby * timer.width) / 2;
                    var scaley = (scaleby * timer.height) / 2;
                    var inmapx = (vertst + NmM) * imgMovement;
                    var inmapy = (horist + WWV) * imgMovement;
                    var posx = inmapx - (scalex / 2);
                    var posy = window.Math.max(10 * imgMovement, ((inmapy - (scaley / 2)) - (65 * imgMovement)) - (60 * scaleby));
                    if (mN < 100) ctx.globalAlpha = mN / 100;
                    else if (World.PLAYER.wVnVm < 100) ctx.globalAlpha = World.PLAYER.wVnVm / 100;
                    ctx.drawImage(timer, posx, posy, scalex, scaley); 
                    ctx.save();
                    ctx.translate(inmapx, window.Math.max((10 * imgMovement) + (scaley / 2), (inmapy - (65 * imgMovement)) - (60 * scaleby)));
                    ctx.rotate(-WNVNM * vW);
                    ctx.drawImage(arrow, -scalex / 2, -scaley / 2, scalex, scaley);
                    ctx.restore();
                    ctx.drawImage(lights, posx, posy, scalex, scaley);
                    ctx.globalAlpha = 1;
                    break;
                case 2:
                    var W = World.PLAYER.MWVMV.W;
                    if (W.m !== 1) {
                        if (mobile === 0) World.PLAYER.MWVMV.W = CanvasUtils.loadImage(World.PLAYER.MWVMV.src, W);
                        else World.PLAYER.MWVMV.W = CanvasUtils.loadImage(World.PLAYER.MWVMV.src.replace("e-", "e-mobile-"), W);
                        return;
                    }
                    var imgMovement = scaleby + (WvmnV * scaleby);
                    var scalex = (scaleby * W.width) / 2;
                    var scaley = (scaleby * W.height) / 2;
                    var posx;
                    if (World.PLAYER.mwMmN === 1) posx = (((vertst + NmM) - 5) * imgMovement) - scalex;
                    else posx = ((vertst + NmM) * imgMovement) - (scalex / 2);
                    var posy = window.Math.max(10 * scaleby, ((((horist + WWV) * imgMovement) - (scaley / 2)) - (65 * imgMovement)) - (60 * scaleby));
                    if (mobile === 1) {
                        Game.mNNwM = posx;
                        Game.nNwMM = posy;
                        Game.vwVnW = scalex;
                        Game.mnNnW = scaley;
                    }
                    ctx.drawImage(W, posx, posy, scalex, scaley);
                    if (World.PLAYER.mwMmN === 1) {
                        if (VWvVN.m !== 1) {
                            if (mobile === 0) VWvVN = CanvasUtils.loadImage(loot2icon, VWvVN);
                            else VWvVN = CanvasUtils.loadImage(lootmobileicon, nMWVv);
                            return;
                        }
                        var vNwMN = imgMovement / scaleby;
                        scalex = (scaleby * VWvVN.width) / 2;
                        scaley = (scaleby * VWvVN.height) / 2;
                        posx += scalex + (10 * scaleby);
                        posy = window.Math.max(10 * scaleby, ((((horist + WWV) * imgMovement) - (scaley / 2)) - (65 * imgMovement)) - (60 * scaleby));
                        if (mobile === 1) {
                            Game.mmNWn = posx;
                            Game.vmwNV = posy;
                        }
                        ctx.drawImage(VWvVN, posx, posy, scalex, scaley);
                        var loot = VNN[World.PLAYER.loot];
                        posx = ((vertst + NmM) * vNwMN) + 5;
                        posy = window.Math.max(10, ((((horist + WWV) * vNwMN) - (scaley / (2 * scaleby))) - (65 * vNwMN)) - 60);
                        CanvasUtils.putonscreen(loot, posx + 77, posy + 33, loot.angle, 0, 0, loot.scale);
                    }
                    break;
            }
        };
        var nMVNv = 0;
        var WvWmM = 0;
        var VwmMm = {
            id: -1,
            mvN: -1
        };

        function vNwNM(player, Wn, mappos, nM) {
            if ((NwMVW === vMNWw) || (Wn === particulesitems.woodtree)) return;
            else if (NwMVW === nWNMn) nM *= 3;
            if ((Entitie.border[vvwvw].border + nM) >= wnNWM) return;
            for (var i = 0; i < nM; i++) {
                var N = window.Math.random();
                var wW = ((N * 10) % 1) * WNVNM;
                var MMwmm = mappos + (((N * 10000) % 1) * 25);
                mappos += 8;
                WvWmM = (WvWmM + 1) % wnNWM;
                var wmWnw = WvWmM + Entitie.WwNMN;
                nMVNv += 1;
                var NVm = Entitie.get(0, wmWnw, nMVNv, vvwvw);
                mvMMV(NVm, 0, nMVNv, wmWnw, vvwvw, player.WWwMm, player.Vmnvm, player.WWwMm + (window.Math.cos(wW) * MMwmm), player.Vmnvm + (window.Math.sin(wW) * MMwmm), window.Math.floor(N * VNw[Wn].length), ((N * 100) % 1) * 255, Wn);
            }
        };

        function mWNvV(player) {
            var W = VNw[player.state][player.nNN];
            if (player.wmm > 0) {
                player.wmm = window.Math.min(1, player.wmm + (delta / 500));
                ctx.globalAlpha = 1 - player.wmm;
                CanvasUtils.putonscreen(W, vertst + player.x, horist + player.y, player.angle, 0, 0, 1);
                ctx.globalAlpha = 1;
                if (player.wmm === 1) {
                    VwmMm.id = player.id;
                    VwmMm.mvN = player.mvN;
                }
                return;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 0.01) player.wmm = 0.001;
            CanvasUtils.putonscreen(W, vertst + player.x, horist + player.y, player.angle, 0, 0, 1);
        };

        function dynac4func(idd, player, WX, WY, Rot, imgMovement) {
            player.Vw = (player.Vw + delta) % 500;
            var vW = player.Vw / 500;
            var mnM = 0.95 + (0.3 * WNW.mWV.vvw(vW));
            ctx.globalAlpha = 1 - vW;
            CanvasUtils.putonscreen(idd.Nn[1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, mnM);
            ctx.globalAlpha = 1;
            CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };


        function spikefunc(idd, player, WX, WY, Rot, imgMovement) {
            var isInClan = 0;
            var VmnmV = 1;
            if ((player.state & 16) === 16) VmnmV = 0;
            if (((player.socketid === World.PLAYER.id) || (((World.PLAYER.clan !== -1) && (World.PLAYER.clan === World.socket[player.socketid].clan)) && (World.socket[player.socketid].wwV === World.clans[World.PLAYER.clan].mvN))) || (checkspos.MWV(NmM, WWV, player.x, player.y) < 52000)) isInClan = 1;
            if (VmnmV === 0) {
                if (player.nMW === 0) vNwNM(player, idd.NWm, idd.Mwm, 5);
                if (player.nMW < 300) {
                    WX += (window.Math.random() * 6) - 4;
                    WY += (window.Math.random() * 6) - 4;
                    player.nMW += delta;
                }
                if (player.Vw > 0) {
                    player.Vw = window.Math.max(0, player.Vw - (delta / 5));
                    ctx.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                    CanvasUtils.putonscreen(idd.hidden[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                    ctx.globalAlpha = 1;
                }
                CanvasUtils.putonscreen(idd.vWwvw[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else if (isInClan === 1) {
                if (player.Vw === 300) CanvasUtils.putonscreen(idd.hidden[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                else {
                    player.Vw = window.Math.min(300, player.Vw + delta);
                    ctx.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                    CanvasUtils.putonscreen(idd.hidden[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                    ctx.globalAlpha = 1;
                }
            } else if ((isInClan === 0) && (player.Vw > 0)) {
                player.Vw = window.Math.max(0, player.Vw - (delta / 5));
                ctx.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                CanvasUtils.putonscreen(idd.hidden[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = 1;
            }
        };
        
        function wiresfunc(idd, player, WX, WY, Rot, imgMovement) {
            CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function landminefunc(idd, player, WX, WY, Rot, imgMovement) {
            var isInClan = 0;
            if (((player.socketid === World.PLAYER.id) || (((World.PLAYER.clan !== -1) && (World.PLAYER.clan === World.socket[player.socketid].clan)) && (World.socket[player.socketid].wwV === World.clans[World.PLAYER.clan].mvN))) || (checkspos.MWV(NmM, WWV, player.x, player.y) < 52000)) isInClan = 1;
            if (isInClan === 1) {
                player.Vw = window.Math.min(300, player.Vw + delta);
                ctx.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                CanvasUtils.putonscreen(idd.Nn[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = 0.2;
                CanvasUtils.putonscreen(NWWWW[5], (vertst + player.x) + WX, (horist + player.y) + WY, 0, 0, 0, 0.6);
                ctx.globalAlpha = 1;
            }

            else if (isInClan === 0) {
                player.Vw = window.Math.min(300, player.Vw + delta);
                ctx.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                CanvasUtils.putonscreen(idd.Nn[player.id % 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);

                ctx.globalAlpha = 0.2;
                CanvasUtils.putonscreen(NWWWW[4], (vertst + player.x) + WX, (horist + player.y) + WY, 0, 0, 0, 0.6);
                ctx.globalAlpha = 1; 

            }    
        };

        function MWMmm(idd, player, WX, WY, Rot, imgMovement) {
            CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function NnNvw(idd, player, WX, WY, Rot, imgMovement) {
            CanvasUtils.putonscreen(idd.Nn[player.Vvm], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function mmwVM(idd, player, WX, WY, Rot, imgMovement) {
            if (player.Vvm > 0) CanvasUtils.putonscreen(idd.WVW[player.Vvm - 1], (vertst + player.x) + WX, (horist + player.y) + WY, 0, 0, 0, imgMovement);
            else CanvasUtils.putonscreen(idd.Nn[WwmwN(player)], (vertst + player.x) + WX, (horist + player.y) + WY, 0, 0, 0, imgMovement);
        };

        function nearme(idd, player, MMwnn) {
            if ((((player.vwW === 0) && (World.PLAYER.mvn !== 1)) && (World.PLAYER.VVn !== 1)) && (((MMwnn === 0) || (player.socketid === World.PLAYER.id)) || (((World.PLAYER.clan !== -1) && (World.PLAYER.clan === World.socket[player.socketid].clan)) && (World.socket[player.socketid].wwV === World.clans[World.PLAYER.clan].mvN)))) {
                var mappos = checkspos.MWV(NmM, WWV, player.x, player.y);
                if (mappos < vnVmM) {
                    World.PLAYER.NnN = idd.NnN;
                    World.PLAYER.MnMwn = player.id;
                    World.PLAYER.MNMvN = player.socketid;
                    World.PLAYER.vWMmW = idd.MWW;
                    vnVmM = mappos;
                    if (World.PLAYER.mvn === 0) World.PLAYER.mwMmN = 1;
                    World.PLAYER.mvn = 2;
                    World.PLAYER.MWVMV = idd.wwN;
                    return 1;
                }
            }
            return 0;
        };

        function nVwvm(idd, player, WX, WY, Rot, imgMovement) {
            CanvasUtils.putonscreen(idd.WnVMV, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, 1);
            var vMN = (player.state >> 4) & 15;
            if (player.NnW !== vMN) {
                player.NnW = vMN;
                player.Vw = 0;
            }
            player.Vw = player.Vw + delta;
            player.mNW = (player.mNW + delta) % 1000;
            var imgMovement = 1 + (0.03 * ((player.mNW < 500) ? (player.mNW / 500) : (1 - ((player.mNW - 500) / 500))));
            if (vMN === 0) {
                ctx.globalAlpha = WNW.mWV.vvw(player.Vw / idd.vMvvV);
                CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = 1;
            } else if (player.Vw < idd.vMvvV) {
                var MwMvw = WNW.mWV.vvw(player.Vw / idd.vMvvV);
                ctx.globalAlpha = 1 - MwMvw;
                CanvasUtils.putonscreen(idd.Nn[vMN - 1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = MwMvw;
                CanvasUtils.putonscreen(idd.Nn[vMN], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = 1;
            } else CanvasUtils.putonscreen(idd.Nn[vMN], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function NWnmw(idd, player, WX, WY, Rot, imgMovement) {
            var vMN = (player.state >> 4) & 15;
            player.Vw = (player.Vw + delta) % 1000;
            var imgMovement = 1 + (0.01 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));
            CanvasUtils.putonscreen(idd.Nn[vMN], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function VMWWV(idd, player, WX, WY, Rot, imgMovement) {
            var vMN = (player.state >> 4) & 15;
            player.Vw = (player.Vw + delta) % 1000;
            var imgMovement = 1 + (0.03 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));
            CanvasUtils.putonscreen(idd.Nn[vMN], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function nNMVN(idd, player, WX, WY, Rot, imgMovement) {
            var WVV = (player.Vvm > 0) ? idd.WVW[player.Vvm - 1] : idd.Nn[wmNMv(player, Rot)];
            var W = WVV.W;
            if (W.m !== 1) {
                WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
                return;
            }
            var VwW = ((scaleby * W.width) / 2) * imgMovement;
            var WVv = ((scaleby * W.height) / 2) * imgMovement;
            ctx.save();
            ctx.translate(scaleby * ((vertst + player.x) + WX), scaleby * ((horist + player.y) + WY));
            ctx.rotate(Rot * PIby2);
            ctx.translate((idd.VvMvv * scaleby) - (VwW / 2), (idd.MmVVV * scaleby) - (WVv / 2));
            ctx.drawImage(W, -idd.VvMvv * scaleby, -idd.MmVVV * scaleby, VwW, WVv);
            ctx.restore();
        };

        function nvVNm(idd, player, WX, WY, Rot, imgMovement) {
            ctx.globalAlpha = 1;
            var MvVvv = (player.state >> 7) & 1;
            if (MvVvv === 1) player.nWM = window.Math.min(500, player.nWM + delta);
            else if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            if ((player.nWM > 0) && (player.nWM !== 500)) {
                ctx.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
                CanvasUtils.putonscreen(idd.Nn[1][player.Vvm], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = WNW.mWV.wMn(1 - (player.nWM / 500));
                CanvasUtils.putonscreen(idd.Nn[0][player.Vvm], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                ctx.globalAlpha = 1;
            } else CanvasUtils.putonscreen(idd.Nn[MvVvv][player.Vvm], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

    function switchonofffunc(idd, player, WX, WY, Rot, imgMovement) {
        nearme(idd, player, 0);
        CanvasUtils.putonscreen(idd.Nn[(player.state >> 4) & 1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            var WY = scaleby * (((player.i * 100) + horist) + 50);
            var WX = scaleby * (((player.j * 100) + vertst) + 50);
            var SY = (imgMovement * arv.width) / 3;
            var SX = (imgMovement * arv.height) / 3;

            butlabel = vM.showtxt(player.id, "'Viga', sans-serif", "#FFFFFF", 38, 400, window.undefined, 16, 25, window.undefined, window.undefined, window.undefined, window.undefined, "#000000", 12);
            ctx.drawImage(butlabel, WX - (SY / 2), WY - (SX / 2), SY, SX);
    };

        function gatetimerfunc(idd, player, WX, WY, Rot, imgMovement) {
            nearme(idd, player, 0);
            CanvasUtils.putonscreen(idd.Nn[(player.state >> 4) & 3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function mWmNV(idd, player, WX, WY, Rot, imgMovement) {
            nearme(idd, player, 0);
            var mMW = (player.state >> 7) & 1;
            if (mMW === 1) player.nWM = window.Math.min(500, player.nWM + delta);
            else if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            if (player.nWM > 0) {
                WvnvV[pplonscr++] = player;
                CanvasUtils.putonscreen(idd.wVnWm[(player.state >> 4) & 7], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function Wnmmm(player) {
            var idd = items[player.nNN >> 7];
            ctx.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
            player.NnW = (player.NnW + delta) % 5000;
            var Vw = player.NnW;
            var imgMovement = 1 + (0.09 * ((Vw < 2500) ? (Vw / 2500) : (1 - ((Vw - 2500) / 2500))));
            CanvasUtils.putonscreen(idd.MwmWn[(player.state >> 4) & 7], vertst + player.x, horist + player.y, 0, 0, 0, imgMovement);
            ctx.globalAlpha = 1;
        };
        

        function doorfunc(idd, player, WX, WY, Rot, imgMovement) {
            var NVNvv = (player.state >> 4) & 1;
            var MWwVn = (player.socketid === 0) ? 0 : 1;
            if ((nearme(idd, player, MWwVn) === 1) && (NVNvv === 1)) World.PLAYER.MWVMV = idd.mMnmM;
            if (player.VMn !== NVNvv) {
                player.nWM = 500;
                player.VMn = NVNvv;
            }
            if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            var wW = idd.angle;
            if (NVNvv === 0) wW *= WNW.mWV.vvw(player.nWM / 500);
            else wW *= WNW.mWV.vvw(1 - (player.nWM / 500));
            var WVV = (player.Vvm > 0) ? idd.WVW[player.Vvm - 1] : idd.Nn;
            var W = WVV.W;
            if (W.m !== 1) {
                WVV.W = CanvasUtils.loadImage(WVV.src, WVV.W);
                return;
            }
            var VwW = ((scaleby * W.width) / 2) * imgMovement;
            var WVv = ((scaleby * W.height) / 2) * imgMovement;
            ctx.save();
            ctx.translate(scaleby * ((vertst + player.x) + WX), scaleby * ((horist + player.y) + WY));
            ctx.rotate(Rot * PIby2);
            ctx.translate((idd.VvMvv * scaleby) - (VwW / 2), (idd.MmVVV * scaleby) - (WVv / 2));
            ctx.rotate(wW);
            ctx.drawImage(W, -idd.VvMvv * scaleby, -idd.MmVVV * scaleby, VwW, WVv);
            ctx.restore();
            if ((player.state & 32) === 32) {
                player.state -= 32;
                if (((player.Vw === 0) && (WX === 0)) && (WY === 0)) player.Vw = 600;
            }
            if (player.Vw > 0) {
                if (arv.m !== 1) {
                    arv = CanvasUtils.loadImage(useicon, arv);
                    return;
                }
                if (player.Vw > 400) ctx.globalAlpha = WNW.mWV.wMn(1 - ((player.Vw - 400) / 200));
                else if (player.Vw < 200) ctx.globalAlpha = WNW.mWV.wMn(player.Vw / 200);
                var WY = scaleby * (((player.i * wmn) + horist) + nwn);
                var WX = scaleby * (((player.j * wmn) + vertst) + nwn);
                var SY = (scaleby * arv.width) / 2;
                var SX = (scaleby * arv.height) / 2;
                ctx.drawImage(arv, WX - (SY / 2), WY - (SX / 2), SY, SX);
                ctx.globalAlpha = 1;
                player.Vw = window.Math.max(0, player.Vw - delta);
            }
        };

        function NMwnn(idd, player, WX, WY, Rot, imgMovement) {
            var mmWVw = matrix[player.i][player.j];
            mmWVw.NMn = 0;
            mmWVw.nNNwM = MNW;
            mmWVw.socketid = player.socketid;
            if ((mmWVw.mVN !== MNW) || (mmWVw.MmvNw === 1)) {
                if (player.Vvm > 0) CanvasUtils.putonscreen(idd.WVW[player.Vvm - 1], (vertst + player.x) + WX, (horist + player.y) + WY, 0, 0, 0, imgMovement);
                else CanvasUtils.putonscreen(idd.Nn[Wwmwm(player)], vertst + player.x, horist + player.y, 0, 0, 0, imgMovement);
            }
        };


        function containericonopen(idd, player, WX, WY, Rot, imgMovement) {
            var inuse = (player.state >> 4) & 1;
            var objects = items[idd.id].nvN[player.nvN];
            if (inuse === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (((inuse === 0) && (objects.WvwVM === 1)) && (nearme(objects, player, 0) === 1)) World.PLAYER.MWVMV = econtainericon;
            CanvasUtils.putonscreen(objects.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function VWwMV(idd, player, WX, WY, Rot, imgMovement) {
            var objects = items[idd.id].nvN[player.nvN];
            CanvasUtils.putonscreen(objects.Nn, vertst + player.x, horist + player.y, 0, 0, 0, imgMovement);
        };

        function NWVWn(mnn, player, WX, WY, imgMovement) {
            var Vmwnn = player.state & 254;
            if (Vmwnn === 2) {
                player.state &= 65281;
                if (player.VMn <= 0) {
                    player.VMn = mnn.vmWVv;
                    player.nWM = mnn.vmWVv;
                    var VVmnw = window.Math.floor(window.Math.random() * 3);
                    audio.VnV(audio.ww.Nnn[0][VVmnw], 0.5, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 3.5, 0);
                }
            }
            var nmm = 0;
            var NNM = 0;
            var NWW = 0;
            var wnN = 0;
            if (player.VMn > 0) {
                player.VMn = window.Math.max(0, player.VMn - delta);
                player.VMn = window.Math.min(player.VMn, mnn.vmWVv);
                vW = (player.VMn > mnn.WVVvW) ? (1 - ((player.VMn - mnn.WVVvW) / (mnn.vmWVv - mnn.WVVvW))) : (player.VMn / mnn.WVVvW);
                nmm = (player.nMW * WNW.mWV.vvw(vW)) * 0.55;
                wnN = vW * 6;
                if (player.nMW === 1) NNM = vW * 25;
                else NWW = vW * 25;
                if (player.VMn === 0) player.nMW *= -1;
            } else if (checkspos.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                player.Vw = (player.Vw + delta) % 1500;
                if (player.NnW !== 0) {
                    if (player.NnW < 750) player.NnW = 1500 - player.NnW;
                    player.NnW = player.NnW + delta;
                    if (player.NnW > 1500) player.NnW = 0;
                }
            } else {
                player.NnW = (player.NnW + delta) % 1500;
                if (player.NnW > 1500) {
                    player.mNW *= -1;
                    player.NnW = player.NnW % 1500;
                }
                if (player.Vw !== 0) {
                    if (player.Vw < 750) player.Vw = 1500 - player.Vw;
                    player.Vw = player.Vw + delta;
                    if (player.Vw > 1500) player.Vw = 0;
                }
            }
            var Vw = mnn.Vw * ((player.Vw < 750) ? (player.Vw / 750) : (1 - ((player.Vw - 750) / 750)));
            var nn = mnn.NVwvN * ((player.NnW < 750) ? (player.NnW / 750) : (1 - ((player.NnW - 750) / 750)));
            CanvasUtils.putonscreen(mnn.Mmv, WX, WY, ((mnn.Mmv.angle + player.angle) + Vw) + nmm, (mnn.Mmv.x + (nn * player.mNW)) + NWW, mnn.Mmv.y, imgMovement);
            CanvasUtils.putonscreen(mnn.mMM, WX, WY, ((-mnn.mMM.angle + player.angle) - Vw) + nmm, (mnn.mMM.x - (nn * player.mNW)) + NNM, mnn.mMM.y, imgMovement);
            if (player.Mmm > 0) {
                var mnM = 1;
                player.Mmm -= delta;
                var vW = 0;
                if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                else {
                    vW = WNW.mWV.wMn(player.Mmm / 150);
                    mnM += (1 - vW) * 0.2;
                }
                WX += (window.Math.cos(player.WvN) * vW) * 10;
                WY += (window.Math.sin(player.WvN) * vW) * 10;
                ctx.globalAlpha = window.Math.min(1, window.Math.max(0, vW));
                CanvasUtils.putonscreen(mnn.Mmm, WX, WY, player.angle + (nmm / 1.5), wnN, 0, mnM);
                ctx.globalAlpha = 1;
            }
            CanvasUtils.putonscreen(mnn.head, WX, WY, player.angle + (nmm / 1.5), wnN, 0, imgMovement);
        };


        function FCWcontainer(idd, player, WX, WY, Rot, imgMovement) {
            var inuse = (player.state >> 4) & 1;
            if (inuse === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (inuse === 0) nearme(idd, player, 0);
            CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function wVMmw(idd, player, WX, WY, Rot, imgMovement) {
            var i = (Rot + 1) % 2;
            var j = Rot % 2;
            matrix[player.i + i][player.j + j].NMn = MNW;
            matrix[player.i - i][player.j - j].NMn = MNW;
            matrix[player.i + i][player.j + j].wMV = player.socketid;
            matrix[player.i - i][player.j - j].wMV = player.socketid;
            matrix[player.i + i][player.j + j].nww = window.undefined;
            matrix[player.i - i][player.j - j].nww = window.undefined;
            nearme(idd, player, 0);
            CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
        };

        function VmMwM(idd, player, WX, WY, Rot, imgMovement) {
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = window.Math.min(10000, player.nWM + delta);
            else if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            var vW = 0;
            if (player.nWM > 0) {
                vW = WNW.mWV.wMn(player.nWM / 10000);
                player.mNW += (vW * delta) / 300;
                CanvasUtils.putonscreen(idd.Nn[1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                CanvasUtils.putonscreen(idd.Nn[2], ((vertst + player.x) + WX) + idd.NmVwM[Rot][0], ((horist + player.y) + WY) + idd.NmVwM[Rot][1], (Rot * PIby2) + player.mNW, 0, 0, imgMovement);
                CanvasUtils.putonscreen(idd.Nn[3], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function wnvmM(idd, player, WX, WY, Rot, imgMovement) {
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = window.Math.min(10000, player.nWM + delta);
            else if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            var vW = 0;
            if (player.nWM > 0) {
                vW = WNW.mWV.wMn(player.nWM / 10000);
                WX += ((window.Math.random() * 2) - 1) * vW;
                WY += ((window.Math.random() * 2) - 1) * vW;
                player.mNW += (vW * delta) / 300;
                CanvasUtils.putonscreen(idd.Nn[1], ((vertst + player.x) + WX) + idd.NmVwM[Rot][0], ((horist + player.y) + WY) + idd.NmVwM[Rot][1], (Rot * PIby2) + player.mNW, 0, 0, imgMovement);
                CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn[2], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function containeropenic(player, WX, WY) {
            player.Vw = (player.Vw + delta) % 1000;
            var imgMovement = 1 + (0.15 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));
            imgMovement *= scaleby;
            if (arv.m !== 1) {
                arv = CanvasUtils.loadImage(useicon, arv);
                return;
            }
            ctx.globalAlpha = WNW.mWV.wMn(player.VMn / 500);
            var WY = scaleby * (((player.i * wmn) + horist) + nwn);
            var WX = scaleby * (((player.j * wmn) + vertst) + nwn);
            var SY = (imgMovement * arv.width) / 2;
            var SX = (imgMovement * arv.height) / 2;
            ctx.drawImage(arv, WX - (SY / 2), WY - (SX / 2), SY, SX);
            ctx.globalAlpha = 1;
        };

        function nVVVm(idd, player, WX, WY, Rot, imgMovement) {
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = window.Math.min(10000, player.nWM + delta);
            else if (player.nWM > 0) {
                player.nWM = window.Math.max(0, player.nWM - delta);
            }
            var vW = 0;
            if (player.nWM > 0) {
                vW = WNW.mWV.wMn(player.nWM / 10000);
                WX += ((window.Math.random() * 2) - 1) * vW;
                WY += ((window.Math.random() * 2) - 1) * vW;
                CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn[1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function WNvww(idd, player, WX, WY, Rot, imgMovement) {
            var i = (Rot + 1) % 2;
            var j = Rot % 2;
            matrix[player.i + i][player.j + j].NMn = MNW;
            matrix[player.i - i][player.j - j].NMn = MNW;
            matrix[player.i + i][player.j + j].wMV = player.socketid;
            matrix[player.i - i][player.j - j].wMV = player.socketid;
            matrix[player.i + i][player.j + j].nww = window.undefined;
            matrix[player.i - i][player.j - j].nww = window.undefined;
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = window.Math.min(10000, player.nWM + delta);
            else if (player.nWM > 0) {
                player.nWM = window.Math.max(0, player.nWM - delta);
            }
            var vW = 0;
            if (player.nWM > 0) {
                vW = WNW.mWV.wMn(player.nWM / 10000);
                WX += ((window.Math.random() * 2) - 1) * vW;
                WY += ((window.Math.random() * 2) - 1) * vW;
                CanvasUtils.putonscreen(idd.Nn[1], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function NNnwW(idd, player, WX, WY, Rot, imgMovement) {
            var i = (Rot + 1) % 2;
            var j = Rot % 2;
            matrix[player.i + i][player.j + j].NMn = MNW;
            matrix[player.i - i][player.j - j].NMn = MNW;
            matrix[player.i + i][player.j + j].wMV = player.socketid;
            matrix[player.i - i][player.j - j].wMV = player.socketid;
            matrix[player.i + i][player.j + j].nww = window.undefined;
            matrix[player.i - i][player.j - j].nww = window.undefined;
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = 1 + (player.nWM + (delta % 300000));
            else player.nWM = 0;
            var vW = 0;
            if (player.nWM > 0) {
                CanvasUtils.putonscreen(idd.Nn[1 + (window.Math.floor(player.nWM / 500) % 3)], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
                var mMW = idd.mMW[window.Math.floor(player.nWM / 50) % idd.mMW.length];
                if (mMW !== 0) CanvasUtils.putonscreen(mMW, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            } else CanvasUtils.putonscreen(idd.Nn[0], (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function NNWnW(player) {
            ctx.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
            player.mNW = (player.mNW + delta) % 1000;
            for (var i = 0; i < 3; i++) {
                var Vw = (player.mNW + (i * 333)) % 1000;
                var imgMovement = 1 + (0.15 * ((Vw < 500) ? (Vw / 500) : (1 - ((Vw - 500) / 500))));
                CanvasUtils.putonscreen(NWWWW[i], (vertst + player.x) + wNWWn[i], (horist + player.y) + WVNvv[i], 0, 0, 0, imgMovement);
            }
            player.NnW = (player.NnW + delta) % 5000;
            var Vw = player.NnW;
            var imgMovement = 1 + (0.15 * ((Vw < 2500) ? (Vw / 2500) : (1 - ((Vw - 2500) / 2500))));
            CanvasUtils.putonscreen(NWWWW[3], (vertst + player.x) + wNWWn[3], (horist + player.y) + WVNvv[3], 0, 0, 0, imgMovement);
            ctx.globalAlpha = 1;
        };

        function fireContainer(idd, player, WX, WY, Rot, imgMovement) {
            
            var MWm = (player.state >> 4) & 1;
            if (MWm === 1) player.VMn = window.Math.min(500, player.VMn + delta);
            else if (player.VMn > 0) player.VMn = window.Math.max(0, player.VMn - delta);
            if (MWm === 0) nearme(idd, player, 0);
            CanvasUtils.putonscreen(idd.Nn, (vertst + player.x) + WX, (horist + player.y) + WY, Rot * PIby2, 0, 0, imgMovement);

            var mMW = (player.state >> 5) & 1;
            if (mMW === 1) player.nWM = window.Math.min(500, player.nWM + delta);
            else if (player.nWM > 0) player.nWM = window.Math.max(0, player.nWM - delta);
            if (player.nWM > 0) WvnvV[pplonscr++] = player;
            if (player.VMn > 0) containeropenic(player, WX, WY);
        };

        function nVmNm(player) {
            var W = ENTITIES[__ENTITIE_EXPLOSION__].explosions;
            var mVn = window.Math.floor(player.Mnm / 70);
            if (mVn < 10) {
                if (player.Mnm === 0) {
                    if (Render.nwNWm !== -2) Render.nwNWm = 20;
                    audio.VnV(audio.ww.mwM, 0.7, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 4);
                }
                CanvasUtils.putonscreen(W[mVn], vertst + player.x, horist + player.y, 0, 0, 0, 1);
            }
            player.Mnm += delta;
        };

        function natureinscreenfunc(player) {
            matrix[player.i][player.j].NMn = MNW;
            matrix[player.i][player.j].wMV = player.socketid;
            matrix[player.i][player.j].nww = window.undefined;
            var WwMWW = nnv[(player.nNN >> 5) & 31];
            var vV = WwMWW.type[(player.nNN >> 10) & 7];
            var imgMovement = 1;
            if (player.vwW !== 0) {
                if (player.wmm === 0) {
                    if ((WwMWW.destroyaudio !== 0) && (WMnvM[WwMWW.destroyaudio] === 0)) {
                        audio.VnV(audio.ww.damage[WwMWW.destroyaudio], 1, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 2.5);
                        WMnvM[WwMWW.destroyaudio] = 1;
                    }
                    vNwNM(player, WwMWW.NWm, vV.Mwm, vV.NVm);
                }
                player.wmm += delta;
                var vW = window.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 300)));
                ctx.globalAlpha = vW;
                imgMovement = window.Math.min(1 + (0.35 * (1 - vW)), 1.35);
            } else if (player.Mnm < 700) {
                if ((player.Mnm === 0) && (vV.Vmw !== window.undefined)) {
                    if (WMWvN === 0) player.Vw = window.Math.floor(window.Math.random() * 6000);
                    else {
                        player.mNW = window.Math.floor(window.Math.random() * 6000);
                        player.Vw = 3000;
                    }
                }
                var vW = window.Math.min(1, WNW.mWV.VnvVv(player.Mnm / 700));
                ctx.globalAlpha = vW;
                imgMovement = (0.5 * vW) + 0.5;
            }
            if ((player.state & 2) === 2) {
                if ((WwMWW.impactaudio !== 0) && (WMnvM[WwMWW.impactaudio] === 0)) {
                    audio.VnV(audio.ww.damage[WwMWW.impactaudio], 1, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 2.8);
                    WMnvM[WwMWW.impactaudio] = 1;
                }
                player.Mmm = 250;
                if (player.nMW <= 0) player.nMW = 300;
                player.WvN = (WNVNM * (player.nNN & 31)) / 31;
                player.state &= ~2;
                vNwNM(player, WwMWW.NWm, vV.Mwm, 1);
            }
            var WX = 0;
            var WY = 0;
            if (player.Mmm > 0) {
                var Mmm = (player.Mmm > 200) ? ((20 * (250 - player.Mmm)) / 50) : ((20 * player.Mmm) / 200);
                WX = window.Math.cos(player.WvN) * Mmm;
                WY = window.Math.sin(player.WvN) * Mmm;
                player.Mmm -= delta;
            }
            if (((player.Vw === 3000) && (WMWvN !== 0)) && (player.Mmm === 0)) {
                CanvasUtils.putonscreen(vV.MnWmV, (vertst + player.x) + WX, (horist + player.y) + WY, player.angle, 0, 0, imgMovement);
                if (player.vwW !== 0) {
                    if (player.wmm > 300) player.vwW = 2;
                    ctx.globalAlpha = 1;
                } else if (player.Mnm < 700) {
                    player.Mnm += delta;
                    ctx.globalAlpha = 1;
                }
                return;
            }
            CanvasUtils.putonscreen(vV.W, (vertst + player.x) + WX, (horist + player.y) + WY, player.angle, 0, 0, imgMovement);
            if (vV.Vmw !== window.undefined) {
                WX = 0;
                WY = 0;
                if (player.nMW > 0) {
                    var Mmm = (player.nMW > 250) ? (10 * WNW.mWV.wWM((300 - player.nMW) / 250)) : (10 * WNW.mWV.wMn(player.nMW / 250));
                    WX = window.Math.cos(player.WvN) * Mmm;
                    WY = window.Math.sin(player.WvN) * Mmm;
                    player.nMW -= delta;
                }
                if (WMWvN === 0) {
                    if (player.mNW > 0) player.mNW = window.Math.max(0, player.mNW - delta);
                    else player.Vw += delta;
                    if (player.Vw > 6000) player.Vw = 0;
                    if (player.Vw > 3000) imgMovement += (0.025 * (player.Vw - 3000)) / 3000;
                    else imgMovement += 0.025 - ((0.025 * player.Vw) / 3000);
                } else {
                    if (player.mNW === 0) player.mNW = player.Vw;
                    if (player.Vw > 6000) player.Vw = 0;
                    if (player.Vw > 3000) {
                        player.Vw = window.Math.max(3000, player.Vw - delta);
                        imgMovement += (0.025 * (player.Vw - 3000)) / 3000;
                    } else if (player.Vw < 3000) {
                        player.Vw = window.Math.min(3000, player.Vw + delta);
                        imgMovement += 0.025 - ((0.025 * player.Vw) / 3000);
                    }
                }
                CanvasUtils.putonscreen(vV.Vmw, (vertst + player.x) + WX, (horist + player.y) + WY, player.angle, 0, 0, imgMovement);
            }
            if (player.vwW !== 0) {
                if (player.wmm > 300) player.vwW = 2;
                ctx.globalAlpha = 1;
            } else if (player.Mnm < 700) {
                player.Mnm += delta;
                ctx.globalAlpha = 1;
            }
        };

        function objectsinscreenfunc(player) {
            matrix[player.i][player.j].NMn = MNW;
            matrix[player.i][player.j].wMV = player.socketid;
            matrix[player.i][player.j].nww = window.undefined;
            var Rot = (player.nNN >> 5) & 3;
            var idd = items[player.nNN >> 7];
            var imgMovement = 1;
            matrix[player.i][player.j].nww = idd.detail.nww;
            if (player.vwW !== 0) {
                if (player.wmm === 0) {
                    var wwM = (idd.NWm === -1) ? items[idd.id].nvN[player.nvN] : idd;
                    vNwNM(player, wwM.NWm, wwM.Mwm, 5);
                    if ((wwM.destroyaudio !== 0) && (WMnvM[wwM.destroyaudio] === 0)) {
                        audio.VnV(audio.ww.damage[wwM.destroyaudio], 1, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 2.5);
                        WMnvM[wwM.destroyaudio] = 1;
                    }
                }
                player.wmm += delta;
                var vW = window.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 300)));
                ctx.globalAlpha = vW;
                imgMovement = window.Math.min(1 + (0.35 * (1 - vW)), 1.35);
            }
            if ((player.state & 2) === 2) {
                player.Mmm = 250;
                player.WvN = (WNVNM * (player.nNN & 31)) / 31;
                player.state &= ~2;
                var wwM = (idd.NWm === -1) ? items[idd.id].nvN[player.nvN] : idd;
                vNwNM(player, wwM.NWm, wwM.Mwm, 1);
                if ((wwM.impactaudio !== 0) && (WMnvM[wwM.impactaudio] === 0)) {
                    audio.VnV(audio.ww.damage[wwM.impactaudio], 1, checkspos.mappos(World.PLAYER.x, World.PLAYER.y, player.x, player.y) / 2.8);
                    WMnvM[wwM.impactaudio] = 1;
                }
            }
            var WX = 0;
            var WY = 0;
            if (player.Mmm > 0) {
                if (player.Mmm > 200) {
                    var Mmm = (20 * (250 - player.Mmm)) / 100;
                    WX = window.Math.cos(player.WvN) * Mmm;
                    WY = window.Math.sin(player.WvN) * Mmm;
                    player.Mmm -= delta;
                } else {
                    var Mmm = (20 * player.Mmm) / 200;
                    WX = window.Math.cos(player.WvN) * Mmm;
                    WY = window.Math.sin(player.WvN) * Mmm;
                    player.Mmm -= delta;
                }
            }
            idd.draw(idd, player, WX, WY, Rot, imgMovement);
            if (player.vwW !== 0) {
                if (player.wmm > 300) player.vwW = 2;
                ctx.globalAlpha = 1;
            }
        };

        function projectilefunc(player) {
            matrix[player.i][player.j].NMn = MNW;
            matrix[player.i][player.j].wMV = player.socketid;
            matrix[player.i][player.j].nww = window.undefined;
            var MwMvw = 1;
            var i = player.i;
            var j = player.j;
            var NWvmm = (i <= 1) ? 0 : (i - 1);
            var MvmNn = (i >= (NMv - 2)) ? (NMv - 1) : (i + 1);
            var vnVVM = (j <= 1) ? 0 : (j - 1);
            var MnVMW = (j >= (wWw - 2)) ? (wWw - 1) : (j + 1);
            for (i = NWvmm; i <= MvmNn; i++) {
                for (j = vnVVM; j <= MnVMW; j++) {
                    var VMV = matrix[i][j];
                    if (VMV.MNW !== MNW) continue;
                    var M = VMV.b;
                    var vvv = VMV.i;
                    for (var nMm = 0; nMm < vvv; nMm++) {
                        var WvW = M[nMm];
                        var vV = WvW.type;
                        var mvnVn = Entitie.Wvm[vV][WvW.nnN];
                        if (((mvnVn.socketid !== World.PLAYER.id)) && (checkspos.mappos(mvnVn.x, mvnVn.y, player.x, player.y) < (ENTITIES[vV].wwW - 4))) {
                            window.console.log("DETECTED");
                            player.rx = player.x;
                            player.ry = player.y;
                            player.wnw = player.x;
                            player.WVM = player.y;
                        }
                    }
                }
            }
            if (player.vwW !== 0) {
                player.wmm += delta;
                MwMvw = window.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 200)));
                ctx.globalAlpha = MwMvw;
            }
            var mappos = checkspos.MWV(player.wnw, player.WVM, player.x, player.y);
            if ((mappos < 400) || (player.vwW !== 0)) {
                ctx.globalAlpha = window.Math.min(mappos / 400, MwMvw);
                CanvasUtils.putonscreen(ENTITIES[INSplayers].Mmvnv[player.nNN][2], vertst + player.x, horist + player.y, player.angle, 0, 0, 1);
                ctx.globalAlpha = MwMvw;
                CanvasUtils.putonscreen(ENTITIES[INSplayers].Mmvnv[player.nNN][1], vertst + player.x, horist + player.y, player.angle, 0, 0, 1);
            } else CanvasUtils.putonscreen(ENTITIES[INSplayers].Mmvnv[player.nNN][0], vertst + player.x, horist + player.y, player.angle, 0, 0, 1);
            if (player.vwW !== 0) {
                if (player.wmm > 200) player.vwW = 2;
                ctx.globalAlpha = 1;
            }
        };

        function lootinscreenfunc(loot) {
            matrix[loot.i][loot.j].NMn = MNW;
            matrix[loot.i][loot.j].wMV = loot.socketid;
            matrix[loot.i][loot.j].nww = window.undefined;
            if (loot.VMn !== 0) {
                var PLAYER = World.socket[loot.VMn];
                if (MNW === PLAYER.MNW) {
                    var socket = Entitie.Wvm[INSplayers];
                    var WMv = socket[PLAYER.nnmnv];
                    loot.wnw = WMv.x;
                    loot.WVM = WMv.y;
                    loot.NvMVn = window.Math.cos(checkspos.angle(loot.rx, loot.ry, loot.wnw, loot.WVM));
                    loot.vnmWn = window.Math.sin(checkspos.angle(loot.rx, loot.ry, loot.wnw, loot.WVM));
                }
            }
            if ((loot.vwW === 0) && (checkspos.MWV(loot.x, loot.y, loot.wnw, loot.WVM) < 1)) {
                var mappos = checkspos.MWV(NmM, WWV, loot.x, loot.y);
                if (mappos < wMVMm) {
                    wMVMm = mappos;
                    World.PLAYER.loot = loot.nNN;
                    World.PLAYER.lootsrvID = loot.id;
                    if (World.PLAYER.mvn <= 0) World.PLAYER.mvn = 0;
                    else World.PLAYER.mwMmN = 1;
                }
            }
            var Vw = 0;
            var vnwmm = 0;
            if (loot.vwW !== 0) {
                loot.wmm += delta;
                ctx.globalAlpha = window.Math.max(0, WNW.mWV.VnvVv(1 - (loot.wmm / 800)));
                vnwmm = loot.wmm / 2400;
            } else if (loot.Mnm < 500) {
                var vW = window.Math.min(1, WNW.mWV.VnvVv(loot.Mnm / 500));
                ctx.globalAlpha = vW;
            }
            loot.Vw = (loot.Vw + delta) % 1500;
            if (loot.Vw < 750) Vw = 0.95 + (WNW.mWV.vvw(loot.Vw / 750) * 0.1);
            else Vw = 0.95 + (WNW.mWV.vvw(1 - ((loot.Vw - 750) / 750)) * 0.1);
            CanvasUtils.putonscreen(VNN[loot.nNN], vertst + loot.x, horist + loot.y, loot.angle, 0, 0, Vw - vnwmm);
            if (loot.vwW !== 0) {
                if (loot.wmm > 800) loot.vwW = 2;
                ctx.globalAlpha = 1;
            } else if (loot.Mnm < 500) {
                loot.Mnm += delta;
                ctx.globalAlpha = 1;
            }
        };

        function checkobjonscreen() {
            var i = 0;
            pplonscr = 0;
            NNmMN[0] = 0;
            NNmMN[1] = 0;
            NNmMN[2] = 0;
            NNmMN[3] = 0;
            vnVmM = 12000;
            wMVMm = 12000;
            World.PLAYER.mwMmN = 0;
            World.PLAYER.MnMwn = -1;
            World.PLAYER.vWMmW = -1;
            if (World.PLAYER.mvn !== 1) World.PLAYER.mvn = -1;
            var MvW = Entitie.Wvm[ENTITIES.length];
            var Wwn = Entitie.border[ENTITIES.length];
            var WWM = Wwn.border;
            var Nvw = Entitie.Wvm[nnvNN];
            var wWv = Entitie.border[nnvNN];
            var wVN = wWv.border;
            for (i = 0; i < wVN; i++) bigwallsfusion(Nvw[wWv.nnN[i]]);
            Nvw = Entitie.Wvm[NWWvM];
            wWv = Entitie.border[NWWvM];
            wVN = wWv.border;
            for (i = 0; i < wVN; i++) floorsfusion(Nvw[wWv.nnN[i]]);
            for (i = 0; i < wVN; i++) objectsinscreenfunc(Nvw[wWv.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === NWWvM) objectsinscreenfunc(player);
            }
            if (NwMVW !== vMNWw) {
                var NWm = Entitie.Wvm[vvwvw];
                var wWv = Entitie.border[vvwvw];
                var wVN = wWv.border;
                for (i = 0; i < wVN; i++) mWNvV(NWm[wWv.nnN[i]]);
                if (VwmMm.id !== -1) {
                    Entitie.remove(0, VwmMm.id, VwmMm.mvN, vvwvw);
                    VwmMm.id = -1;
                }
            }
            var Nvw = Entitie.Wvm[MNvmw];
            var wWv = Entitie.border[MNvmw];
            var wVN = wWv.border;
            for (i = 0; i < wVN; i++) objectsinscreenfunc(Nvw[wWv.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === MNvmw) objectsinscreenfunc(player);
            }
            WMmMN = Entitie.Wvm[mWmnn];
            VmwNm = Entitie.border[mWmnn];
            vMwWm = VmwNm.border;
            for (i = 0; i < vMwWm; i++) natureinscreenfunc(WMmMN[VmwNm.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === mWmnn) natureinscreenfunc(player);
            }
            var Nvw = Entitie.Wvm[wNnwm];
            var wWv = Entitie.border[wNnwm];
            var wVN = wWv.border;
            for (i = 0; i < wVN; i++) smallwallsfusion(Nvw[wWv.nnN[i]]);
            for (i = 0; i < wVN; i++) objectsinscreenfunc(Nvw[wWv.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === wNnwm) objectsinscreenfunc(player);
            }
            var socket = Entitie.Wvm[INSplayers];
            var vWM = Entitie.border[INSplayers];
            var vvv = vWM.border;
            for (i = 0; i < vvv; i++) {
                var mv = vWM.nnN[i];
                var player = socket[mv];
                var PLAYER = World.socket[player.socketid];
                showruncloud(player);
                PLAYER.nnmnv = mv;
                PLAYER.MNW = MNW;
                MmnMv(player, mv);
            }
            World.PLAYER.loot = -1;
            World.PLAYER.lootsrvID = -1;
            var MMwVW = Entitie.Wvm[WmVMw];
            var vmwvW = Entitie.border[WmVMw];
            var MVMVw = vmwvW.border;
            for (i = 0; i < MVMVw; i++) lootinscreenfunc(MMwVW[vmwvW.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === WmVMw) lootinscreenfunc(player);
            }
            var Mmvnv = Entitie.Wvm[VmnMw];
            var Mmwnm = Entitie.border[VmnMw];
            var MNmmw = Mmwnm.border;
            for (i = 0; i < MNmmw; i++) projectilefunc(Mmvnv[Mmwnm.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === VmnMw) projectilefunc(player);
            }
            WMmMN = Entitie.Wvm[NWvMw];
            VmwNm = Entitie.border[NWvMw];
            vMwWm = VmwNm.border;
            for (i = 0; i < vMwWm; i++) natureinscreenfunc(WMmMN[VmwNm.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === NWvMw) natureinscreenfunc(player);
            }
            if (World.gameMode === World.__GHOUL__) {
                for (i = 0; i < vvv; i++) {
                    var player = socket[vWM.nnN[i]];
                    var MNN = World.socket[player.socketid].MNN;
                    if (MNN === 0) playerinscreenfunc(player);
                    else {
                        player.nNN = MNN - 1;
                        creaturesinscreenfunc(player);
                    };
                }
                for (i = 0; i < WWM; i++) {
                    var player = MvW[Wwn.nnN[i]];
                    if (player.type === INSplayers) {
                        showruncloud(player);
                        var MNN = World.socket[player.socketid].MNN;
                        if (MNN === 0) playerinscreenfunc(player);
                        else {
                            player.nNN = MNN - 1;
                            creaturesinscreenfunc(player);
                        };
                    }
                }
            } else {
                for (i = 0; i < vvv; i++) playerinscreenfunc(socket[vWM.nnN[i]]);
                for (i = 0; i < WWM; i++) {
                    var player = MvW[Wwn.nnN[i]];
                    if (player.type === INSplayers) {
                        showruncloud(player);
                        playerinscreenfunc(player);
                    }
                }
            }
            var mnn = Entitie.Wvm[MNWNM];
            var WwVvW = Entitie.border[MNWNM];
            var nWwNn = WwVvW.border;
            for (i = 0; i < nWwNn; i++) creaturesinscreenfunc(mnn[WwVvW.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === MNWNM) creaturesinscreenfunc(player);
            }
            Nvw = Entitie.Wvm[nnvNN];
            wWv = Entitie.border[nnvNN];
            wVN = wWv.border;
            for (i = 0; i < wVN; i++) objectsinscreenfunc(Nvw[wWv.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === nnvNN) objectsinscreenfunc(player);
            }
            for (i = 0; i < pplonscr; i++) {
                var idd = items[WvnvV[i].nNN >> 7];
                idd.VvmvM(WvnvV[i]);
                WvnvV[i] = null;
            }
            WMmMN = Entitie.Wvm[MmvmN];
            VmwNm = Entitie.border[MmvmN];
            vMwWm = VmwNm.border;
            for (i = 0; i < vMwWm; i++) natureinscreenfunc(WMmMN[VmwNm.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === MmvmN) natureinscreenfunc(player);
            }
            WMmMN = Entitie.Wvm[MVm];
            VmwNm = Entitie.border[MVm];
            vMwWm = VmwNm.border;
            for (i = 0; i < vMwWm; i++) natureinscreenfunc(WMmMN[VmwNm.nnN[i]]);
            for (i = 0; i < WWM; i++) {
                var player = MvW[Wwn.nnN[i]];
                if (player.type === MVm) natureinscreenfunc(player);
            }
            explosions = Entitie.Wvm[__ENTITIE_EXPLOSION__];
            VMnwn = Entitie.border[__ENTITIE_EXPLOSION__];
            WNnmw = VMnwn.border;
            for (i = 0; i < WNnmw; i++) nVmNm(explosions[VMnwn.nnN[i]]);
            for (i = 0; i < vvv; i++) vWMWW(socket[vWM.nnN[i]]);
            if (World.gameMode !== World.__BR__) {
                for (i = 0; i < vvv; i++) mVwvw(socket[vWM.nnN[i]]);
                for (i = 0; i < vvv; i++) VvVNw(socket[vWM.nnN[i]]);
            }
        };

        function NvwNm() {
            NNWWn = 0;
        };
        var bodOnResize;
        var vmvNw = CanvasUtils.options.wWMMM;
        var nvMNv = 0;
        var wMmwW = 0;
        var NNWWn = 0;
        var VnwwM = 0;
        var WvWvM = 0;

        function VvWmm(mN) {
            if (WvWvM === 0) {
                nvMNv = Render.scale;
                Render.scale = 0.8;
                wMmwW = 0;
                NNWWn = mN;
                VnwwM = 0;
                WvWvM = 1;
                vmvNw = CanvasUtils.options.MNWmW / CanvasUtils.options.NmwvV;
            }
        };

        function nmmMm() {
            if ((NNWWn <= 0) && ((wMmwW + delta) > 1500)) {
                WvWvM = 0;
                wMmwW = 1500;
            } else {
                NNWWn -= delta;
                VnwwM += delta;
                wMmwW = (wMmwW + delta) % 1500;
            }
            var vW = WNW.mWV.vvw(((wMmwW > 750) ? (1500 - wMmwW) : wMmwW) / 750);
            if (((NNWWn < 750) && (wMmwW > 750)) && ((1500 - wMmwW) > NNWWn)) {
                var WmNnV = window.Math.max(0, (1500 - wMmwW) / 750);
                vW = (0.5 * WmNnV) + (vW * (1 - 0.5));
            } else if (VnwwM > 750) vW = 0.5 + (vW * (1 - 0.5));
            var mvWMM = vW * 20;
            Render.scale = nvMNv + vW;
            CanvasUtils.options.NmwvV = CanvasUtils.options.MNWmW / (vmvNw + mvWMM);
            bodOnResize();
        };
        var vvMWV = window.document.createElement('canvas');
        var vWwnm = vvMWV.getContext('2d');

        function nvVmw() {
            var mWN;
            var vW;
            var WvmWN = ctx;
            vW = 1 - WNW.mWV.wWM(World.vnw / 1000);
            vvMWV.width = canvas.width;
            vvMWV.height = canvas.height;
            ctx = vWwnm;
            ctx.save();
            var mnV = CanvasUtils.options.NmwvV / CanvasUtils.options.nmWmN;
            ctx.scale(mnV, mnV);
            mWN = NWVnn;
            NWVnn = items;
            items = mWN;
            mWN = NWwVV;
            NWwVV = VNw;
            VNw = mWN;
            mWN = mwwnn;
            mwwnn = VNN;
            VNN = mWN;
            mWN = MMNMn;
            MMNMn = nnv;
            nnv = mWN;
            mWN = ENTITIES2;
            ENTITIES2 = ENTITIES;
            ENTITIES = mWN;
            mWN = vNNVn;
            vNNVn = NWWWW;
            NWWWW = mWN;
            mWN = wwVWm;
            wwVWm = MwWmN;
            MwWmN = mWN;
            mWN = VNVwN;
            VNVwN = VVv;
            VVv = mWN;
            ctx.fillStyle = (World.nVM === 0) ? "#0B2129" : "#3D5942";
            ctx.fillRect(0, 0, screenWidth, screenHeight);
            vMwNm();
            checkobjonscreen();
            mWN = NWVnn;
            NWVnn = items;
            items = mWN;
            mWN = NWwVV;
            NWwVV = VNw;
            VNw = mWN;
            mWN = mwwnn;
            mwwnn = VNN;
            VNN = mWN;
            mWN = MMNMn;
            MMNMn = nnv;
            nnv = mWN;
            mWN = ENTITIES2;
            ENTITIES2 = ENTITIES;
            ENTITIES = mWN;
            mWN = vNNVn;
            vNNVn = NWWWW;
            NWWWW = mWN;
            mWN = wwVWm;
            wwVWm = MwWmN;
            MwWmN = mWN;
            mWN = VNVwN;
            VNVwN = VVv;
            VVv = mWN;
            ctx.restore();
            ctx = WvmWN;
            ctx.globalAlpha = vW;
            ctx.drawImage(vvMWV, 0, 0, screenWidth, screenHeight);
            ctx.globalAlpha = 1;
            World.vnw = window.Math.max(0, World.vnw - delta);
            if (World.vnw === 0) World.VwVMW();
        };

        function wVVvW() {
            Render.MmW += delta;
            if (WvWvM === 1) nmmMm();
            wNnvM();
            myplayerfocusinscreen();
            vMwNm();
            wmVNW();
            checkobjonscreen(); 
            placingobj();
            if (World.vnw > 0) nvVmw();
            Entitie.nVvvw();
            MNW++;
            for (var i = 0; i < SOUND_LENGTH; i++) WMnvM[i] = 0;
            scaleby = wWWNM;
            wvwNM = screenWidth / scaleby;
            wwWnm = screenHeight / scaleby;
        };

        function vVwvn(vW) {
            WMWvN = 0;
        };

        function wvmnm(vW) {
            localStorage.setItem("particles", "" + vW);
            NwMVW = vW;
        };
        return {
            MmW: window.Date.now(),
            reset: vision,
            VMMWm: wVVvW,
            MvV: minimapfunc,
            NNMwm: mapfunc,
            MnW: wmMMm,
            VnVVN: levelingaunge,
            leaderboard: WnnwN,
            inventory: inventoryfunc,
            vmmMn: textnumberitem,
            optionsfc: optionswin,
            craftfc: craftingfunc,
            cncwind: contwinfunc,
            clan: clanfunc,
            mvn: timeret,
            vMNVm: MMWWn,
            shake: 0,
            nwNWm: 0,
            scale: -0.,
            wvmnm: wvmnm,
            vVwvn: vVwvn,
            VvWmm: VvWmm,
            NvwNm: NvwNm,
            VNvvM: VNvvM,
            wmn: wmn,
            nwn: nwn,
            nnmMW: 0,
            Mvw: mmwVM,
            VWN: nNMVN,
            WNv: doorfunc,
            FCWCcont: FCWcontainer,
            fireCont: fireContainer,
            nnvWw: NNWnW,
            vNvMW: WNvww,
            vNvnV: nVVVm,
            wNvVV: VmMwM,
            vwMnv: wnvmM,
            wMwnV: wVMmw,
            nVWmn: NNnwW,
            MWnVn: VMWWV,
            NMVvM: NWnmw,
            nwVWW: NMwnn,
            mvWww: MWMmm,
            NnMNn: wiresfunc,
            VWWwm: NnNvw,
            mWmnv: containericonopen,
            NNnmv: VWwMV,
            vmMNW: landminefunc,
            VnMww: dynac4func,
            WwVVm: spikefunc,
            MNN: NWVWn,
            nMnNW: nVwvm,
            vnVwv: mWmNV,
            mVwvv: Wnmmm,
            mvVVM: switchonofffunc,
            Mvnmn: gatetimerfunc,
            WvNvn: nvVNm,
            mMWMV: mwNmN
        };
    })();
var nmn = (function() {
    var key_w = 0;
    var key_s = 1;
    var key_a = 2;
    var key_d = 4;
    var vMWMW = 0;
    var wMVvN = 0;
    var MnMNn = 4;
    var wWn = null;
    var vWwNw = -1;
    var VNnvM = 0;
    var Mww = [];
    var NvMvV = [];
    var MMNNn = [];
    var NWVNw = {
        i: 0,
        j: 0
    };

    function VVvvN() {
        for (var i = 0; i < wMVvN; i++) {
            Mww[i] = [];
            for (var j = 0; j < vMWMW; j++) Mww[i][j] = 0;
        }
    };

    function wvmnN(WVWWv, SY, SX) {
        wWn = new NnnMN.wMWWW(WVWWv);
        vMWMW = SY;
        wMVvN = SX;
        nmn.width = SY;
        nmn.height = SX;
        Mww = [];
        nmn.Mww = Mww;
        NvMvV = [];
        MMNNn = [];
        nmn.MMNNn = MMNNn;
        vWwNw = -1;
        NWVNw.i = 0;
        NWVNw.j = 0;
        VNnvM = 0;
    };

    function init(WVWWv, SY, SX, vNWmm) {
        window.console.time("Town generation");
        wvmnN(WVWWv, SY, SX);
        VVvvN();
        if (vNWmm !== window.undefined) vNWmm();
        window.console.timeEnd("Town generation");
    };
    return {
        seed: 0,
        init: init,
        Mww: Mww,
        MMNNn: null,
        width: 0,
        height: 0
    };
})();
nVn = 0;
INSplayers = nVn++;
WmVMw = nVn++;
VmnMw = nVn++;
nnvNN = nVn++;
wNnwm = nVn++;
MNvmw = nVn++;
NWWvM = nVn++;
vvwvw = nVn++;
MmvmN = nVn++;
mWmnn = nVn++;
NWvMw = nVn++;
MVm = nVn++;
__ENTITIE_EXPLOSION__ = nVn++;
MNWNM = nVn++;
ENTITIES[INSplayers].update = function MwMNm(MW, WX, WY) {
    if (checkspos.mappos(MW.x, MW.y, WX, WY) > 66) {
        MW.rx = WX;
        MW.ry = WY;
        var wW = checkspos.angle(MW.rx, MW.ry, MW.wnw, MW.WVM);
        MW.NvMVn = window.Math.cos(wW);
        MW.vnmWn = window.Math.sin(wW);
    }
    MW.speed = (MW.state >> 8) / 100;
};
ENTITIES[INSplayers].init = function wvwmW(MW) {
    var PLAYER = World.socket[MW.socketid];
    for (var i = 0; i < PLAYER.mNWvv.length; i++) PLAYER.mNWvv[i].mN = 0;
    for (var i = 0; i < PLAYER.mNvwv.length; i++) PLAYER.mNvwv[i].mN = 0;
    MW.angle = MW.MVWwV;
    if (PLAYER.MNN > 0) {
        MW.mNW = 1;
        MW.nMW = 1;
    }
};
ENTITIES[MNWNM].update = ENTITIES[INSplayers].update;
ENTITIES[MNWNM].init = function mwmNm(MW) {
    MW.mNW = 1;
    MW.nMW = 1;
    MW.angle = MW.MVWwV;
    MW.speed = (MW.state >> 8) / 100;
};
ENTITIES[WmVMw].init = function MVvWW(MW) {
    if ((MW.x !== MW.rx) || (MW.y !== MW.ry)) {
        MW.angle = checkspos.angle(MW.x, MW.y, MW.rx, MW.ry);
        MW.MVWwV = MW.angle;
    } else {
        MW.angle += window.Math.PI / 2;
        MW.MVWwV = MW.angle;
    }
};
ENTITIES[WmVMw].update = function VmMmm(MW, WX, WY) {
    MW.VMn = MW.state >> 8;
};
ENTITIES[VmnMw].init = function wwwnnnm(MW) {
    MW.WvN = checkspos.angle(MW.rx, MW.ry, MW.wnw, MW.WVM);
    var Wn = MW.nNN;
    MW.speed = (MW.state >> 8) / 100;
    switch (Wn) {
        case 4:
        case 8:
            var player = Entitie.vvVvm(INSplayers, MW.socketid, 0);
            if (player !== null) {
                player.nNN = player.nNN & 255;
                player.VMn = 0;
            }
            break;
        case 3:
            var player = Entitie.vvVvm(INSplayers, MW.socketid, 0);
            if (player !== null) player.VMn = 0;
            break;
    }
};
ENTITIES[VmnMw].update = function MVNWvvM(MW, WX, WY) {
    var wW = checkspos.angle(MW.x, MW.y, MW.wnw, MW.WVM);
    var nvwVm = window.Math.PI * 2;
    var vWWMM = (((wW + nvwVm) % nvwVm) - ((MW.WvN + nvwVm) % nvwVm)) % nvwVm;
    if (window.Math.abs(vWWMM) > 0.1) {
        MW.rx = MW.x;
        MW.ry = MW.y;
        MW.wnw = MW.x;
        MW.WVM = MW.y;
    }
};
ENTITIES[MmvmN].update = function VvWVm() {
};
ENTITIES[mWmnn].update = ENTITIES[MmvmN].update;
ENTITIES[NWvMw].update = ENTITIES[MmvmN].update;
ENTITIES[MVm].update = ENTITIES[MmvmN].update;
ENTITIES[nnvNN].update = function VvWVm(MW, WX, WY) {
    var Rot = (MW.nNN >> 5) & 3;
    MW.nvN = (MW.state >> 5) & 63;
    MW.Vvm = MW.state >> 14;
    MW.state = MW.state & 16383;
    var idd = items[MW.nNN >> 7];
    MW.x = ((window.Math.floor(WX / Render.wmn) * Render.wmn) + Render.nwn) + idd.Wwv[Rot];
    MW.y = ((window.Math.floor(WY / Render.wmn) * Render.wmn) + Render.nwn) + idd.nWn[Rot];
    MW.rx = MW.x;
    MW.ry = MW.y;
    MW.wnw = MW.x;
    MW.WVM = MW.y;
    MW.WWwMm = MW.x;
    MW.Vmnvm = MW.y;
    if ((idd.WNv === 1) && ((MW.state & 16) === 16)) {
        MW.WWwMm = ((window.Math.floor(MW.j + idd.wmvvV[Rot]) * Render.wmn) + Render.nwn) + idd.Wwv[(Rot + 1) % 4];
        MW.Vmnvm = ((window.Math.floor(MW.i + idd.NVvMw[Rot]) * Render.wmn) + Render.nwn) + idd.nWn[(Rot + 1) % 4];
    }
};
ENTITIES[wNnwm].update = ENTITIES[nnvNN].update;
ENTITIES[MNvmw].update = ENTITIES[nnvNN].update;
ENTITIES[NWWvM].update = ENTITIES[nnvNN].update;
try {
    Render.shake;
} catch (error) {
    var Render = {};
}
var __WARM__      = 1;
var __RADIATION__ = 2;


var COUNTER = 0;
var AREAS = {
    own: COUNTER++,
    firepart: COUNTER++,
    workbench: COUNTER++,
    bbq: COUNTER++,
    weavingmachine: COUNTER++,
    researchbench: COUNTER++,
    smelter: COUNTER++,
    teslabench: COUNTER++,
    composter: COUNTER++,
    agitator: COUNTER++,
    extractor: COUNTER++,
    weldingmachine: COUNTER++
};
COUNTER = 0;
var SOUNDID = {
    VNv: COUNTER++,
    wood: COUNTER++,
    stone: COUNTER++,
    stone2: COUNTER++,
    metal: COUNTER++,
    wooddes: COUNTER++,
    stonedes: COUNTER++,
    metaldes: COUNTER++,
    pillow: COUNTER++,
    pillowdes: COUNTER++
};
var SOUND = [];
SOUND[SOUNDID.wood] = "audio/wood-impact.mp3";
SOUND[SOUNDID.stone] = "audio/stone-impact2.mp3";
SOUND[SOUNDID.stone2] = "audio/stone-impact.mp3";
SOUND[SOUNDID.metal] = "audio/metal-impact2.mp3";
SOUND[SOUNDID.pillow] = "audio/pillow-impact.mp3";
SOUND[SOUNDID.wooddes] = "audio/wood-destroy3.mp3";
SOUND[SOUNDID.stonedes] = "audio/stone-destroy.mp3";
SOUND[SOUNDID.metaldes] = "audio/metal-destroy2.mp3";
SOUND[SOUNDID.pillowdes] = "audio/pillow-destroy.mp3";

var SOUND_LENGTH = SOUND.length;

COUNTER = 0;
var BEHAVIOR = {
    __NO__:             COUNTER++,
    __SEED__:           COUNTER++,
    __SEED_RESOURCE__:  COUNTER++,
    __LOGIC__:          COUNTER++,
    __AI_CONSTRUCTOR__: COUNTER++
};

COUNTER = 0;
var AIID = {
    __NORMAL_GHOUL__:       COUNTER++,
    __FAST_GHOUL__:         COUNTER++,
    __EXPLOSIVE_GHOUL__:    COUNTER++,
    __RADIOACTIVE_GHOUL__:  COUNTER++,
    __ARMORED_GHOUL__:      COUNTER++,
    __PUMPKIN_GHOUL__:      COUNTER++,
    __LAPABOT_REPAIR__:     COUNTER++,
    __HAL_BOT__:            COUNTER++,
    __TESLA_BOT__:          COUNTER++
};

COUNTER = 0;
var SKILLS = {
    __SKILL__:      COUNTER++,
    __SURVIVAL__:   COUNTER++,
    __CLOTHE__:     COUNTER++,
    __BUILDING__:   COUNTER++,
    __TOOL__:       COUNTER++,
    __WEAPON__:     COUNTER++,
    __PLANT__:      COUNTER++,
    __DRUG__:       COUNTER++,
    __MINERAL__:    COUNTER++,
    __LOGIC__:      COUNTER++
};

COUNTER = 1;
var item = {
    wood: COUNTER++,
    stone: COUNTER++,
    steel: COUNTER++,
    animalfat: COUNTER++,
    animaltendon: COUNTER++,
    string: COUNTER++,
    leather: COUNTER++,
    shapedmetal: COUNTER++,
    rawsteak: COUNTER++,
    cookedsteak: COUNTER++,
    rottensteak: COUNTER++,
    orange: COUNTER++,
    rottenorange: COUNTER++,
    seedorange: COUNTER++,
    hachet: COUNTER++,
    stonepickaxe: COUNTER++,
    steelpickaxe: COUNTER++,
    stoneaxe: COUNTER++,
    workbench: COUNTER++,
    spear: COUNTER++,
    bow: COUNTER++,
    pistol: COUNTER++,
    deserteagle: COUNTER++,
    shotgun: COUNTER++,
    ak47: COUNTER++,
    sniper: COUNTER++,
    woodenwall: COUNTER++,
    stonewall: COUNTER++,
    steelwall: COUNTER++,
    wooddoor: COUNTER++,
    stonedoor: COUNTER++,
    steeldoor: COUNTER++,
    campfire: COUNTER++,
    bullet9mm: COUNTER++,
    bulletshotgun: COUNTER++,
    sniperbullet: COUNTER++,
    medkit: COUNTER++,
    bandage: COUNTER++,
    soda: COUNTER++,
    mp5: COUNTER++,
    headscarf: COUNTER++,
    chapka: COUNTER++,
    coat: COUNTER++,
    gazmask: COUNTER++,
    gazprotection: COUNTER++,
    radiationsuit: COUNTER++,
    woodarrow: COUNTER++,
    campfirebbq: COUNTER++,
    smelter: COUNTER++,
    wooddoor1: COUNTER++,
    stonedoor1: COUNTER++,
    steeldoor1: COUNTER++,
    sulfur: COUNTER++,
    shapeduranium: COUNTER++,
    researchbench: COUNTER++,
    uranium: COUNTER++,
    weavingmachine: COUNTER++,
    gasoline: COUNTER++,
    sulfurpickaxe: COUNTER++,
    chest: COUNTER++,
    fridge: COUNTER++,
    woodfloor1: COUNTER++,
    hammer: COUNTER++,
    sleepingbag: COUNTER++,
    repairhammer: COUNTER++,
    nails: COUNTER++,
    woodfloor2: COUNTER++,
    smallwoodwall: COUNTER++,
    smallstonewall: COUNTER++,
    smallsteelwall: COUNTER++,
    MMnVW: COUNTER++,
    tomatosoup: COUNTER++,
    syringe: COUNTER++,
    chemicalcomponent: COUNTER++,
    radway: COUNTER++,
    tomatoseed: COUNTER++,
    tomato: COUNTER++,
    rottentomato: COUNTER++,
    can: COUNTER++,
    crossbow: COUNTER++,
    crossarrow: COUNTER++,
    nailgun: COUNTER++,
    sawedoff: COUNTER++,
    stonefloor1: COUNTER++,
    stonefloor2: COUNTER++,
    NvMvM: COUNTER++,
    chips: COUNTER++,
    rottenchips: COUNTER++,
    electronicpart: COUNTER++,
    junk: COUNTER++,
    wires: COUNTER++,
    energycell: COUNTER++,
    laserpistol: COUNTER++,
    teslabench: COUNTER++,
    alloys: COUNTER++,
    sulfuraxe: COUNTER++,
    landmine: COUNTER++,
    dynamite: COUNTER++,
    c4bomb: COUNTER++,
    joystic: COUNTER++,
    composter: COUNTER++,
    metalhelmet: COUNTER++,
    weldinghelmet: COUNTER++,
    gladiatorhelmet: COUNTER++,
    leatherjacket: COUNTER++,
    kevlarsuit: COUNTER++,
    SWATsuit: COUNTER++,
    protectivesuit: COUNTER++,
    tesla1: COUNTER++,
    tesla2: COUNTER++,
    woodespike: COUNTER++,
    lasersubmachine: COUNTER++,
    granade: COUNTER++,
    superhammer: COUNTER++,
    ghoulblood: COUNTER++,
    camouflage: COUNTER++,
    agitator: COUNTER++,
    ghouldrug: COUNTER++,
    mushroom: COUNTER++,
    mushroom2: COUNTER++,
    mushroom3: COUNTER++,
    rottenmushroom1: COUNTER++,
    rottenmushroom2: COUNTER++,
    rottenmushroom3: COUNTER++,
    lapadoine: COUNTER++,
    lapabot: COUNTER++,
    smallwire: COUNTER++,
    pumpkin: COUNTER++,
    rottenpumpkin: COUNTER++,
    ghoulseed: COUNTER++,
    extractor: COUNTER++,
    antidote: COUNTER++,
    antidoteflower: COUNTER++,
    treeseed: COUNTER++,
    acorn: COUNTER++,
    rottenacorn: COUNTER++,
    lasersniper: COUNTER++,
    halbot: COUNTER++,
    teslabot: COUNTER++,
    cable: COUNTER++,
    cable2: COUNTER++,
    cable3: COUNTER++,
    cable4: COUNTER++,
    switch: COUNTER++,
    orgate: COUNTER++,
    andgate: COUNTER++,
    notgate: COUNTER++,
    lamp: COUNTER++,
    cablewall: COUNTER++,
    autodoor: COUNTER++,
    platform: COUNTER++,
    stonecave: COUNTER++,
    bunkerwall: COUNTER++,
    mustardfloor: COUNTER++,
    redfloor: COUNTER++,
    weldingmachine: COUNTER++,
    cable4: COUNTER++,
    timer: COUNTER++,
    xorgate: COUNTER++,
    skilleye1: COUNTER++,
    skilleye2: COUNTER++,
    skilleye3: COUNTER++,
    builderskill1: COUNTER++,
    builderskill2: COUNTER++,
    inventoryskill1: COUNTER++,
    inventoryskill2: COUNTER++,
    inventoryskill3: COUNTER++,
    inventoryskill4: COUNTER++,
    inventoryskill5: COUNTER++,
    lightweightskill: COUNTER++
};
COUNTER = 0;
var Mv = {
    mvnnv: COUNTER++,
    wWvMW: COUNTER++,
    wood: COUNTER++,
    mnVVV: COUNTER++,
    vWVMv: COUNTER++,
    stone: COUNTER++,
    steel: COUNTER++,
    animalfat: COUNTER++,
    animaltendon: COUNTER++,
    string: COUNTER++,
    leather: COUNTER++,
    shapedmetal: COUNTER++,
    rawsteak: COUNTER++,
    cookedsteak: COUNTER++,
    rottensteak: COUNTER++,
    orange: COUNTER++,
    rottenorange: COUNTER++,
    seedorange: COUNTER++,
    hachet: COUNTER++,
    stonepickaxe: COUNTER++,
    steelpickaxe: COUNTER++,
    stoneaxe: COUNTER++,
    workbench: COUNTER++,
    spear: COUNTER++,
    bow: COUNTER++,
    pistol: COUNTER++,
    deserteagle: COUNTER++,
    shotgun: COUNTER++,
    ak47: COUNTER++,
    sniper: COUNTER++,
    woodenwall: COUNTER++,
    stonewall: COUNTER++,
    steelwall: COUNTER++,
    wooddoor: COUNTER++,
    stonedoor: COUNTER++,
    steeldoor: COUNTER++,
    campfire: COUNTER++,
    bullet9mm: COUNTER++,
    bulletshotgun: COUNTER++,
    sniperbullet: COUNTER++,
    medkit: COUNTER++,
    bandage: COUNTER++,
    soda: COUNTER++,
    mp5: COUNTER++,
    headscarf: COUNTER++,
    chapka: COUNTER++,
    coat: COUNTER++,
    gazmask: COUNTER++,
    gazprotection: COUNTER++,
    radiationsuit: COUNTER++,
    woodarrow: COUNTER++,
    campfirebbq: COUNTER++,
    smelter: COUNTER++,
    wooddoor1: COUNTER++,
    stonedoor1: COUNTER++,
    steeldoor1: COUNTER++,
    sulfur: COUNTER++,
    shapeduranium: COUNTER++,
    researchbench: COUNTER++,
    uranium: COUNTER++,
    weavingmachine: COUNTER++,
    gasoline: COUNTER++,
    sulfurpickaxe: COUNTER++,
    chest: COUNTER++,
    fridge: COUNTER++,
    woodfloor1: COUNTER++,
    hammer: COUNTER++,
    sleepingbag: COUNTER++,
    repairhammer: COUNTER++,
    nails: COUNTER++,
    woodfloor2: COUNTER++,
    smallwoodwall: COUNTER++,
    smallstonewall: COUNTER++,
    smallsteelwall: COUNTER++,
    tomatosoup: COUNTER++,
    syringe: COUNTER++,
    chemicalcomponent: COUNTER++,
    radway: COUNTER++,
    tomatoseed: COUNTER++,
    tomato: COUNTER++,
    rottentomato: COUNTER++,
    can: COUNTER++,
    crossbow: COUNTER++,
    crossarrow: COUNTER++,
    nailgun: COUNTER++,
    sawedoff: COUNTER++,
    stonefloor1: COUNTER++,
    stonefloor2: COUNTER++,
    chips: COUNTER++,
    rottenchips: COUNTER++,
    electronicpart: COUNTER++,
    junk: COUNTER++,
    wires: COUNTER++,
    energycell: COUNTER++,
    laserpistol: COUNTER++,
    teslabench: COUNTER++,
    alloys: COUNTER++,
    sulfuraxe: COUNTER++,
    landmine: COUNTER++,
    dynamite: COUNTER++,
    c4bomb: COUNTER++,
    joystic: COUNTER++,
    composter: COUNTER++,
    metalhelmet: COUNTER++,
    weldinghelmet: COUNTER++,
    gladiatorhelmet: COUNTER++,
    leatherjacket: COUNTER++,
    kevlarsuit: COUNTER++,
    SWATsuit: COUNTER++,
    protectivesuit: COUNTER++,
    tesla1: COUNTER++,
    tesla2: COUNTER++,
    woodespike: COUNTER++,
    lasersubmachine: COUNTER++,
    granade: COUNTER++,
    superhammer: COUNTER++,
    ghoulblood: COUNTER++,
    camouflage: COUNTER++,
    agitator: COUNTER++,
    ghouldrug: COUNTER++,
    mushroom: COUNTER++,
    mushroom2: COUNTER++,
    mushroom3: COUNTER++,
    rottenmushroom1: COUNTER++,
    rottenmushroom2: COUNTER++,
    rottenmushroom3: COUNTER++,
    lapadoine: COUNTER++,
    lapabot: COUNTER++,
    smallwire: COUNTER++,
    pumpkin: COUNTER++,
    rottenpumpkin: COUNTER++,
    ghoulseed: COUNTER++,
    extractor: COUNTER++,
    antidote: COUNTER++,
    antidoteflower: COUNTER++,
    treeseed: COUNTER++,
    acorn: COUNTER++,
    rottenacorn: COUNTER++,
    lasersniper: COUNTER++,
    halbot: COUNTER++,
    teslabot: COUNTER++,
    cable: COUNTER++,
    cable2: COUNTER++,
    cable3: COUNTER++,
    cable4: COUNTER++,
    switch: COUNTER++,
    orgate: COUNTER++,
    andgate: COUNTER++,
    notgate: COUNTER++,
    lamp: COUNTER++,
    cablewall: COUNTER++,
    autodoor: COUNTER++,
    platform: COUNTER++,
    stonecave: COUNTER++,
    bunkerwall: COUNTER++,
    mustardfloor: COUNTER++,
    redfloor: COUNTER++,
    weldingmachine: COUNTER++,
    cable4: COUNTER++,
    timer: COUNTER++,
    xorgate: COUNTER++
};
COUNTER = 0;
var particulesitems = {
    woodtree: COUNTER++,
    wood: COUNTER++,
    stone: COUNTER++,
    steel: COUNTER++,
    uranium: COUNTER++,
    sulfur: COUNTER++,
    leaf: COUNTER++,
    leaftree: COUNTER++,
    orange: COUNTER++,
    blood: COUNTER++,
    firepart: COUNTER++,
    furpart: COUNTER++,
    bedpart: COUNTER++,
    bedpart2: COUNTER++,
    sofapart: COUNTER++,
    sofapart2: COUNTER++,
    sofapart3: COUNTER++,
    toilet: COUNTER++,
    woodpart: COUNTER++,
    safepart: COUNTER++,
    garbagepart: COUNTER++,
    fridge: COUNTER++,
    plot: COUNTER++,
    barrel: COUNTER++,
    barrel2: COUNTER++,
    metalpart: COUNTER++,
    tomato: COUNTER++,
    greysteelpart: COUNTER++,
    bluesteelpart: COUNTER++,
    redsteelpart: COUNTER++,
    kakipart: COUNTER++,
    mushroom: COUNTER++,
    mushroom2: COUNTER++,
    mushroom3: COUNTER++,
    gold: COUNTER++
};
var adswait = [{
    src: "img/wait-ads-1.png",
    W: {
        m: 0
    }
}, {
    src: "img/wait-ads-2.png",
    W: {
        m: 0
    }
}, {
    src: "img/wait-ads-3.png",
    W: {
        m: 0
    }
}, {
    src: "img/wait-ads-4.png",
    W: {
        m: 0
    }
}, {
    src: "img/wait-ads-5.png",
    W: {
        m: 0
    }
}];
var VNw = [];
VNw[particulesitems.woodtree] = [];
VNw[particulesitems.wood] = [{
    src: "img/day-particules-wood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.stone] = [{
    src: "img/day-particules-stone1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-stone2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-stone3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-stone4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-stone5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.steel] = [{
    src: "img/day-particules-steel1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-steel2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-steel3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-steel4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-steel5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.uranium] = [{
    src: "img/day-particules-uranium1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium6.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium7.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium8.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-uranium9.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.sulfur] = [{
    src: "img/day-particules-sulfur1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur6.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur7.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur8.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sulfur9.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.leaf] = [{
    src: "img/day-particules-leaf1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.leaftree] = [{
    src: "img/day-particules-wood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaftree1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaftree2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaftree3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaftree4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaftree5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.flower] = [{
    src: "img/day-particules-flower1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-flower2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-flower3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-flower4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-flower5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.orange] = [{
    src: "img/day-particules-leaf1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf6.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf7.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf8.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-leaf9.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.blood] = [{
    src: "img/day-particules-blood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blood2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blood3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blood4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blood5.png",
    W: {
        m: 0
    }
}];
var NVMWV = 380;
VNw[particulesitems.firepart] = [{
    src: "img/day-particules-fire1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fire2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fire3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fire4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fire5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.furpart] = [{
    src: "img/day-particules-fur1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fur2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fur3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fur4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fur5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.bedpart] = [{
    src: "img/day-particules-bed0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed6.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood3.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.bedpart2] = [{
    src: "img/day-particules-bed3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-bed6.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood3.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.sofapart] = [{
    src: "img/day-particules-sofa0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.sofapart2] = [{
    src: "img/day-particules-sofa0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa6.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.sofapart3] = [{
    src: "img/day-particules-sofa0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa7.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-sofa8.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.toilet] = [{
    src: "img/day-particules-toilet0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-toilet1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-toilet2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-toilet3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-toilet4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.woodpart] = [{
    src: "img/day-particules-woodlight0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-woodlight1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-woodlight2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-woodlight3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-woodlight4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.safepart] = [{
    src: "img/day-particules-safe0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-safe1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-safe2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-safe3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-safe4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.garbagepart] = [{
    src: "img/day-particules-garbage0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-garbage1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-garbage2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-garbage3.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.fridge] = [{
    src: "img/day-particules-fridge0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fridge1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fridge2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fridge3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-fridge4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.plot] = [{
    src: "img/day-particules-plot0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-plot1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-plot2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-plot3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-wood3.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.barrel] = [{
    src: "img/day-particules-barel0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-barel1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-barel2.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.barrel2] = [{
    src: "img/day-particules-barel3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-barel4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-barel5.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.metalpart] = [{
    src: "img/day-particules-metal0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-metal1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-metal2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-metal3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-metal4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.tomato] = [{
    src: "img/day-particules-tomato0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-tomato1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-tomato2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-tomato3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-tomato4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.bluesteelpart] = [{
    src: "img/day-particules-blue-steel0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blue-steel1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blue-steel2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blue-steel3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-blue-steel4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.greysteelpart] = [{
    src: "img/day-particules-grey-steel0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-grey-steel1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-grey-steel2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-grey-steel3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-grey-steel4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.redsteelpart] = [{
    src: "img/day-particules-red-steel0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-red-steel1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-red-steel2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-red-steel3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-red-steel4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.kakipart] = [{
    src: "img/day-particules-kaki0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-kaki1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-kaki2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-kaki3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-kaki4.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.mushroom] = [{
    src: "img/day-particules-mushroom4.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom5.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom6.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.mushroom2] = [{
    src: "img/day-particules-mushroom1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom3.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.mushroom3] = [{
    src: "img/day-particules-mushroom7.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom8.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-mushroom9.png",
    W: {
        m: 0
    }
}];
VNw[particulesitems.gold] = [{
    src: "img/day-particules-gold0.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-gold1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-particules-gold2.png",
    W: {
        m: 0
    }
}];

function vn(Mwv, WnmmM, nww, WVn, mm, MWW, vMN, WnNmW, wNvMv) {
    this.name = Mwv;
    this.description = WnmmM;
    if (WVn !== window.undefined) this.WVn = WVn;
    if (mm !== window.undefined) this.stack = mm;
    if (MWW !== window.undefined) {
        this.MWW = [];
        this.NMMmV = [];
        for (var i = 0; i < MWW.length; i++) {
            this.MWW[i] = MWW[i][0];
            this.NMMmV[i] = MWW[i][1];
        }
    }
    if (nww !== window.undefined) this.nww = nww;
    else this.nww = -1;
    if (vMN !== window.undefined) this.level = vMN;
    else this.level = -1;
    if (WnNmW !== window.undefined) this.WnNmW = WnNmW;
    else this.WnNmW = -1;
    if (wNvMv !== window.undefined) this.wNvMv = wNvMv;
    else this.wNvMv = 1;
};
var items = [{
    src: [],
    W: []
}, {
    id: item.wood,
    img: {
        src: ["img/inv-wood-out.png", "img/inv-wood-in.png", "img/inv-wood-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood", "Found in trees, or on the ground."),
    stack: 255,
    loot: Mv.wood,
    mW: 10
}, {
    id: item.stone,
    img: {
        src: ["img/inv-stone-out.png", "img/inv-stone-in.png", "img/inv-stone-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone", "Find it on the ground or on the rock.", SKILLS.__MINERAL__, [], 0, [
        [AREAS.extractor, 80000]
    ]),
    wwnWm: 50,
    MwMvv: 200,
    stack: 255,
    loot: Mv.stone,
    mW: 14
}, {
    id: item.steel,
    img: {
        src: ["img/inv-steel-out.png", "img/inv-steel-in.png", "img/inv-steel-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Iron", "Melt it on a Firepit or a Smelter", SKILLS.__MINERAL__, [], 0, [
        [AREAS.extractor, 120000]
    ]),
    wwnWm: 4,
    MwMvv: 8,
    stack: 255,
    loot: Mv.steel,
    mW: 28
}, {
    id: item.animalfat,
    img: {
        src: ["img/inv-animal-fat-out.png", "img/inv-animal-fat-in.png", "img/inv-animal-fat-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Animal Fat", "Useful to craft bullet and clothes"),
    stack: 255,
    loot: Mv.animalfat,
    mW: 32
}, {
    id: item.animaltendon,
    img: {
        src: ["img/inv-animal-tendon-out.png", "img/inv-animal-tendon-in.png", "img/inv-animal-tendon-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Animal Tendon", "Useful to make string"),
    stack: 255,
    loot: Mv.animaltendon,
    mW: 100
}, {
    id: item.string,
    img: {
        src: ["img/inv-string-out.png", "img/inv-string-in.png", "img/inv-string-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("String", "Useful to craft many items.", SKILLS.__SURVIVAL__, [
        [item.animaltendon, 2]
    ], 1, [
        [AREAS.workbench, 20000]
    ]),
    stack: 255,
    loot: Mv.string
}, {
    id: item.leather,
    img: {
        src: ["img/inv-leather-boar-out.png", "img/inv-leather-boar-in.png", "img/inv-leather-boar-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Leather", "Useful to make clothes"),
    stack: 255,
    loot: Mv.leather,
    mW: 32
}, {
    id: item.shapedmetal,
    img: {
        src: ["img/inv-shaped-metal-out.png", "img/inv-shaped-metal-in.png", "img/inv-shaped-metal-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Shaped Metal", "To craft improved items.", SKILLS.__MINERAL__, [
        [item.steel, 2]
    ], 1, [
        [AREAS.smelter, 3000],
        [AREAS.bbq, 30000]
    ]),
    stack: 255,
    loot: Mv.shapedmetal
}, {
    id: item.rawsteak,
    img: {
        src: ["img/inv-raw-steak-out.png", "img/inv-raw-steak-in.png", "img/inv-raw-steak-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Raw Steak", "#Vegan"),
    stack: 10,
    loot: Mv.rawsteak,
    vWVMV: 15,
    nNmmM: item.rottensteak,
    mnw: 12,
    wait: 5,
    mW: 28
}, {
    id: item.cookedsteak,
    img: {
        src: ["img/inv-cooked-steak-out.png", "img/inv-cooked-steak-in.png", "img/inv-cooked-steak-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cooked Steak", "Rare or medium?", SKILLS.__SURVIVAL__, [
        [item.rawsteak, 1]
    ], 1, [
        [AREAS.firepart, 20000],
        [AREAS.bbq, 10000]
    ]),
    stack: 10,
    loot: Mv.cookedsteak,
    wait: 5,
    vWVMV: 3,
    nNmmM: item.rottensteak,
    mnw: 13     
}, {
    id: item.rottensteak,
    img: {
        src: ["img/inv-rotten-steak-out.png", "img/inv-rotten-steak-in.png", "img/inv-rotten-steak-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    stack: 10,
    loot: Mv.rottensteak,
    wait: 5,
    mnw: 14,    
    detail: new vn("Rotten Steak", "Don't eat that."),
    mW: 20
}, {
    id: item.orange,
    img: {
        src: ["img/inv-orange-out.png", "img/inv-orange-in.png", "img/inv-orange-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Orange", "A little hungry?"),
    stack: 20,
    loot: Mv.orange,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottenorange,
    mnw: 15,    
    mW: 24
}, {
    id: item.rottenorange,
    img: {
        src: ["img/inv-rotten-orange-out.png", "img/inv-rotten-orange-in.png", "img/inv-rotten-orange-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Orange", "Go on, have a bite!", SKILLS.__PLANT__, [
        [item.orange, 4]
    ], 8, [
        [AREAS.composter, 40000]
    ]),
    stack: 20,
    loot: Mv.rottenorange,
    wait: 5,
    mnw: 16,     
    mW: 20
}, {
    id: item.seedorange,
    img: {
        src: ["img/inv-orange-seed-out.png", "img/inv-orange-seed-in.png", "img/inv-orange-seed-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Orange Seed", "Fill up on Vitame C?", SKILLS.__PLANT__, [
        [item.orange, 4]
    ], 1, [
        [AREAS.firepart, 20000],
        [AREAS.bbq, 15000]
    ]),
    stack: 40,
    loot: Mv.seedorange,
    MmwnN: Mv.orange,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/day-clear-blue-plant2-orange.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-plant2-orange.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__SEED__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.MWnVn,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    Nn: [{
        src: "img/day-plant0-orange.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant1-orange.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant2-orange.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant3-orange.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant4-orange.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.orange,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 250,
    mW: 0
}, {
    id: item.hachet,
    img: {
        src: ["img/inv-hachet-out.png", "img/inv-hachet-in.png", "img/inv-hachet-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Hatchet", "Harvest Wood and Stone.", SKILLS.__TOOL__, [
        [item.wood, 10],  
        [item.stone, 2]
    ], 1, [
        [AREAS.own, 5000],
        [AREAS.workbench, 10000]
    ]),
    mnw: 3,     
    stack: 1,
    loot: Mv.hachet, 
    wait: 10
}, {
    id: item.stonepickaxe,
    img: {
        src: ["img/inv-stone-pickaxe-out.png", "img/inv-stone-pickaxe-in.png", "img/inv-stone-pickaxe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Pickaxe", "Mine Stone and Iron.", SKILLS.__TOOL__, [
        [item.wood, 100],
        [item.stone, 30]
    ], 1, [
        [AREAS.workbench, 30000]
    ]),
    mnw: 1,     
    stack: 1,
    loot: Mv.stonepickaxe,
    wait: 10
}, {
    id: item.steelpickaxe,
    img: {
        src: ["img/inv-steel-pickaxe-out.png", "img/inv-steel-pickaxe-in.png", "img/inv-steel-pickaxe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Pickaxe", "Mine also Sulfur", SKILLS.__TOOL__, [
        [item.stone, 150],
        [item.shapedmetal, 6]
    ], 1, [
        [AREAS.researchbench, 60000]
    ], 6),
    mnw: 2,     
    stack: 1,
    loot: Mv.steelpickaxe,
    wait: 10
}, {
    id: item.stoneaxe,
    img: {
        src: ["img/inv-stone-axe-out.png", "img/inv-stone-axe-in.png", "img/inv-stone-axe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Axe", "Harvest a lot of Wood", SKILLS.__TOOL__, [
        [item.wood, 150],
        [item.shapedmetal, 7]
    ], 1, [
        [AREAS.researchbench, 80000]
    ], 5),
    mnw: 4,     
    stack: 1,
    loot: Mv.stoneaxe,
    wait: 10
}, {
    id: item.workbench,
    img: {
        src: ["img/inv-workbench-out.png", "img/inv-workbench-in.png", "img/inv-workbench-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Workbench", "Allow you to make new items.", SKILLS.__SURVIVAL__, [
        [item.wood, 40],
        [item.stone, 20]
    ], 1, [
        [AREAS.own, 15000],
        [AREAS.workbench, 15000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    MWW: AREAS.workbench,
    stack: 255,
    loot: Mv.workbench,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-workbench.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-workbench.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.FCWCcont,
    NnN: 16,
    wwN: {
        src: "img/e-workbench.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-workbench.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.spear,
    img: {
        src: ["img/inv-wood-spear-out.png", "img/inv-wood-spear-in.png", "img/inv-wood-spear-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood Spear", "Don't forget to pick it up.", SKILLS.__WEAPON__, [
        [item.wood, 70]
    ], 1, [
        [AREAS.own, 15000],
        [AREAS.workbench, 20000]
    ]),
    mnw: 5,     
    stack: 1,
    loot: Mv.spear,
    wait: 10
}, {
    id: item.bow,
    img: {
        src: ["img/inv-wood-bow-out.png", "img/inv-wood-bow-in.png", "img/inv-wood-bow-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood Bow", "Where are the cowboys?", SKILLS.__WEAPON__, [
        [item.wood, 60],
        [item.animaltendon, 2]
    ], 1, [
        [AREAS.own, 35000],
        [AREAS.workbench, 50000]
    ]),
    vMv: item.woodarrow,
    mMVwm: 1,
    mnw: 6,     
    stack: 1,
    loot: Mv.bow,
    wait: 10
}, {
    id: item.pistol,
    img: {
        src: ["img/inv-9mm-out.png", "img/inv-9mm-in.png", "img/inv-9mm-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("9MM", "I hope you know how to aim.", SKILLS.__WEAPON__, [
        [item.junk, 6],
        [item.shapedmetal, 9]
    ], 1, [
        [AREAS.researchbench, 160000]
    ], 7),
    mnw: 8,     
    vMv: item.bullet9mm,
    stack: 1,
    loot: Mv.pistol,
    wait: 10
}, {
    id: item.deserteagle,
    img: {
        src: ["img/inv-desert-eagle-out.png", "img/inv-desert-eagle-in.png", "img/inv-desert-eagle-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Desert Eagle", "Pretty useful for self-defense.", SKILLS.__WEAPON__, [
        [item.alloys, 4],
        [item.shapedmetal, 2]
    ], 1, [
        [AREAS.researchbench, 180000]
    ], 9, item.pistol),
    mnw: 9,     
    vMv: item.bullet9mm,
    stack: 1,
    loot: Mv.deserteagle,
    wait: 10
}, {
    id: item.shotgun,
    img: {
        src: ["img/inv-shotgun-out.png", "img/inv-shotgun-in.png", "img/inv-shotgun-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Shotgun", "He's dead now, don't you think?", SKILLS.__WEAPON__, [
        [item.alloys, 6],
        [item.shapedmetal, 6]
    ], 1, [
        [AREAS.researchbench, 200000]
    ], 11),
    mnw: 7,     
    vMv: item.bulletshotgun,
    stack: 1,
    loot: Mv.shotgun,
    wait: 10
}, {
    id: item.ak47,
    img: {
        src: ["img/inv-ak47-out.png", "img/inv-ak47-in.png", "img/inv-ak47-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("AK47", "Revolution time", SKILLS.__WEAPON__, [
        [item.alloys, 14],
        [item.shapedmetal, 8]
    ], 1, [
        [AREAS.researchbench, 180000]
    ], 12, item.mp5),
    mnw: 10,     
    vMv: item.sniperbullet,
    stack: 1,
    loot: Mv.ak47,
    wait: 10
}, {
    id: item.sniper,
    img: {
        src: ["img/inv-sniper-out.png", "img/inv-sniper-in.png", "img/inv-sniper-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sniper", "For the very angry shy", SKILLS.__WEAPON__, [
        [item.alloys, 10],
        [item.shapedmetal, 8]
    ], 1, [
        [AREAS.researchbench, 180000]
    ], 13),
    mnw: 11,     
    vMv: item.sniperbullet,
    stack: 1,
    loot: Mv.sniper,
    wait: 10
}, {
    id: item.woodenwall,
    img: {
        src: ["img/inv-wood-wall-out.png", "img/inv-wood-wall-in.png", "img/inv-wood-wall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wooden Wall", "Protected from the wind.", SKILLS.__BUILDING__, [
        [item.wood, 20] 
    ], 1, [
        [AREAS.workbench, 10000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.woodenwall,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-wood-wall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-wood-wall.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.woodenwall,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.Mvw,
    MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WVW: [{
        src: "img/day-wood-wall-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: [{
        src: "img/day-wood-wall0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-wall46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.stonewall,
    img: {
        src: ["img/inv-stone-wall-out.png", "img/inv-stone-wall-in.png", "img/inv-stone-wall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Wall", "Saved the 3 little pigs.", SKILLS.__BUILDING__, [
        [item.stone, 20]
    ], 1, [
        [AREAS.workbench, 15000]
    ], 3),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.stonewall,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-wall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-wall.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.stonewall,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.Mvw,
    MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WVW: [{
        src: "img/day-stone-wall-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.stone,
    destroyaudio: SOUNDID.stonedes,
    Nn: [{
        src: "img/day-stone-wall0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-wall46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 7000,
    mW: 0
}, {
    id: item.steelwall,
    img: {
        src: ["img/inv-steel-wall-out.png", "img/inv-steel-wall-in.png", "img/inv-steel-wall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Wall", "Afraid we'll find you?", SKILLS.__BUILDING__, [
        [item.shapedmetal, 3]
    ], 1, [
        [AREAS.researchbench, 20000]
    ], 6, item.stonewall),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.steelwall,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-wall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-wall.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.steelwall,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.Mvw,
    MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WVW: [{
        src: "img/day-steel-wall-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-steel-wall0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-wall46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.steel,
    Mwm: 80,
    WmW: 315360000000,
    health: 15000,
    mW: 0
}, {
    id: item.wooddoor,
    img: {
        src: ["img/inv-wood-door-out.png", "img/inv-wood-door-in.png", "img/inv-wood-door-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wooden Low Door", "You can shoot through it.", SKILLS.__BUILDING__, [
        [item.wood, 40]
    ], 1, [
        [AREAS.workbench, 15000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.wooddoor,
    wait: 10,
    mN: 600,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-wood-door.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-wood-door.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-wood-door-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-door-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-door-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-wood-door.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 55,
    WmW: 315360000000,
    health: 2000,
    mW: 0
}, {
    id: item.stonedoor,
    img: {
        src: ["img/inv-stone-door-out.png", "img/inv-stone-door-in.png", "img/inv-stone-door-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Low Door", "You can shoot through it.", SKILLS.__BUILDING__, [
        [item.stone, 40]
    ], 1, [
        [AREAS.workbench, 15000]
    ], 3),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.stonedoor,
    wait: 10,
    mN: 600,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-door.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-door.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-stone-door-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-door-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-door-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.stone,
    destroyaudio: SOUNDID.stonedes,
    Nn: {
        src: "img/day-stone-door.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.stone,
    Mwm: 55,
    WmW: 315360000000,
    health: 5000,
    mW: 0
}, {
    id: item.steeldoor,
    img: {
        src: ["img/inv-steel-door-out.png", "img/inv-steel-door-in.png", "img/inv-steel-door-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Low Door", "Killing at home, for more comfort.", SKILLS.__BUILDING__, [
        [item.shapedmetal, 6]
    ], 1, [
        [AREAS.researchbench, 30000]
    ], 6, item.stonedoor),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.steeldoor,
    wait: 10,
    mN: 600,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-door.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-door.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-steel-door-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-door-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-door-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-steel-door.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.steel,
    Mwm: 55,
    WmW: 315360000000,
    health: 10000,
    mW: 0
}, {
    id: item.campfire,
    img: {
        src: ["img/inv-campfire-out.png", "img/inv-campfire-in.png", "img/inv-campfire-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Campfire", "Warm you when you're cold.", SKILLS.__SURVIVAL__, [
        [item.wood, 30],
        [item.stone, 5]
    ], 1, [
        [AREAS.own, 8000],
        [AREAS.workbench, 15000]
    ]),
    mnw: 21,     
    MNM: 15000,
    WvV: -1,
    z: 0,
    MWW: AREAS.firepart,
    stack: 255,
    loot: Mv.campfire,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-campfire.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-campfire.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: __WARM__,
    draw: Render.fireCont,
    VvmvM: Render.nnvWw,
    NnN: 16,
    wwN: {
        src: "img/e-campfire.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-campfire.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: (1000 * 60) * 10,
    health: 150,
    mW: 0
}, {
    id: item.bullet9mm,
    img: {
        src: ["img/inv-bullet-9mm-out.png", "img/inv-bullet-9mm-in.png", "img/inv-bullet-9mm-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Bullet", "For 9MM, Desert Eagle, and MP5 ", SKILLS.__WEAPON__, [
        [item.sulfur, 3],
        [item.shapedmetal, 3],
        [item.animalfat, 3]
    ], 30, [
        [AREAS.researchbench, 10000]
    ], 6),
    stack: 255,
    loot: Mv.bullet9mm
}, {
    id: item.bulletshotgun,
    img: {
        src: ["img/inv-bullet-shotgun-out.png", "img/inv-bullet-shotgun-in.png", "img/inv-bullet-shotgun-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cartridge", "For Shotgun", SKILLS.__WEAPON__, [
        [item.alloys, 1],
        [item.shapedmetal, 4],
        [item.animalfat, 4]
    ], 15, [
        [AREAS.researchbench, 10000]
    ], 10),
    stack: 255,
    loot: Mv.bulletshotgun
}, {
    id: item.sniperbullet,
    img: {
        src: ["img/inv-bullet-sniper-out.png", "img/inv-bullet-sniper-in.png", "img/inv-bullet-sniper-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Heavy Bullet", "For Sniper, and AK47", SKILLS.__WEAPON__, [
        [item.alloys, 1],
        [item.shapedmetal, 4],
        [item.animalfat, 4]
    ], 30, [
        [AREAS.researchbench, 10000]
    ], 11),
    stack: 255,
    loot: Mv.sniperbullet
}, {
    id: item.medkit,
    img: {
        src: ["img/inv-medikit-out.png", "img/inv-medikit-in.png", "img/inv-medikit-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Medkit", "Regenerate your life.", SKILLS.__DRUG__, [
        [item.string, 2],
        [item.bandage, 1],
        [item.leather, 2],
        [item.shapedmetal, 2]
    ], 1, [
        [AREAS.researchbench, 80000]
    ], 10),
    mnw: 17,     
    stack: 2,
    loot: Mv.medkit,
    wait: 10
}, {
    id: item.bandage,
    img: {
        src: ["img/inv-bandage-out.png", "img/inv-bandage-in.png", "img/inv-bandage-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Bandage", "To heal the boo-boos.", SKILLS.__DRUG__, [
        [item.string, 1],
        [item.leather, 2]
    ], 1, [
        [AREAS.weavingmachine, 20000]
    ]),
    mnw: 18,     
    stack: 5,
    loot: Mv.bandage,
    wait: 10
}, {
    id: item.soda,
    img: {
        src: ["img/inv-soda-out.png", "img/inv-soda-in.png", "img/inv-soda-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Soda", "Give energy.", SKILLS.__SURVIVAL__, [
        [item.ghoulblood, 1],
        [item.chemicalcomponent, 1],
        [item.can, 1]
    ], 1, [
        [AREAS.firepart, 40000],
        [AREAS.bbq, 40000]
    ], 5),
    mnw: 19,     
    stack: 5,
    loot: Mv.soda,
    vWVMV: 2,
    nNmmM: item.can,
    wait: 10
}, {
    id: item.mp5,
    img: {
        src: ["img/inv-MP5-out.png", "img/inv-MP5-in.png", "img/inv-MP5-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("MP5", "Not bad.", SKILLS.__WEAPON__, [
        [item.alloys, 6],
        [item.shapedmetal, 6]
    ], 1, [
        [AREAS.researchbench, 200000]
    ], 10),
    mnw: 20,     
    vMv: item.bullet9mm,
    stack: 1,
    loot: Mv.mp5,
    wait: 10
}, {
    id: item.headscarf,
    img: {
        src: ["img/inv-headscarf-out.png", "img/inv-headscarf-in.png", "img/inv-headscarf-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Headscarf", "Warm you up.", SKILLS.__CLOTHE__, [
        [item.string, 1],
        [item.leather, 1]
    ], 1, [
        [AREAS.weavingmachine, 60000]
    ]),
    nwm: 1,
    stack: 1,
    loot: Mv.headscarf,
    wait: 10,
    wNV: 0.00085,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.chapka,
    img: {
        src: ["img/inv-chapka-out.png", "img/inv-chapka-in.png", "img/inv-chapka-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Chapka", "You look like a real woodcutter.", SKILLS.__CLOTHE__, [
        [item.string, 6],
        [item.leather, 8],
        [item.headscarf, 1]
    ], 1, [
        [AREAS.weavingmachine, 120000]
    ], 7),
    nwm: 2,
    stack: 1,
    loot: Mv.chapka,
    wait: 10,
    wNV: 0.0017,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.coat,
    img: {
        src: ["img/inv-coat-out.png", "img/inv-coat-in.png", "img/inv-coat-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Winter Coat", "Is the weather really that cold?", SKILLS.__CLOTHE__, [
        [item.string, 15],
        [item.leather, 20],
        [item.chapka, 1]
    ], 1, [
        [AREAS.weavingmachine, 180000]
    ], 9, item.chapka),
    nwm: 3,
    stack: 1,
    loot: Mv.coat,
    wait: 10,
    wNV: 0.0026,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.gazmask,
    img: {
        src: ["img/inv-gaz-mask-out.png", "img/inv-gaz-mask-in.png", "img/inv-gaz-mask-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Radiation Mask", "Protect you from Radioactivity.", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 1],
        [item.string, 1],
        [item.leather, 2]
    ], 1, [
        [AREAS.weavingmachine, 60000]
    ]),
    nwm: 4,
    stack: 1,
    loot: Mv.gazmask,
    wait: 10,
    wNV: 0,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0.009,
    speed: 0
}, {
    id: item.gazprotection,
    img: {
        src: ["img/inv-gaz-protection-out.png", "img/inv-gaz-protection-in.png", "img/inv-gaz-protection-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Min. Radiation Suit", "Previously, on Breaking Bad.", SKILLS.__CLOTHE__, [
        [item.alloys, 2],
        [item.shapedmetal, 2],
        [item.string, 4],
        [item.leather, 4],
        [item.gazmask, 1]
    ], 1, [
        [AREAS.weavingmachine, 90000]
    ], 8),
    nwm: 5,
    stack: 1,
    loot: Mv.gazprotection,
    wait: 10,
    wNV: 0.0006,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0.016,
    speed: 0
}, {
    id: item.radiationsuit,
    img: {
        src: ["img/inv-radiation-suit-out.png", "img/inv-radiation-suit-in.png", "img/inv-radiation-suit-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Radiation Suit", "Let's not grow a second head.", SKILLS.__CLOTHE__, [
        [item.alloys, 6],
        [item.shapedmetal, 4],
        [item.string, 8],
        [item.leather, 20],
        [item.gazprotection, 1]
    ], 1, [
        [AREAS.weavingmachine, 180000]
    ], 10, item.gazprotection),
    nwm: 6,
    stack: 1,
    loot: Mv.radiationsuit,
    wait: 10,
    wNV: 0,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0.022,
    speed: -0.01
}, {
    id: item.woodarrow,
    img: {
        src: ["img/inv-wood-arrow-out.png", "img/inv-wood-arrow-in.png", "img/inv-wood-arrow-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood Arrow", "Needed to use bow.", SKILLS.__WEAPON__, [
        [item.wood, 40]
    ], 5, [
        [AREAS.own, 15000],
        [AREAS.workbench, 10000]
    ]),
    stack: 255,
    loot: Mv.woodarrow
}, {
    id: item.campfirebbq,
    img: {
        src: ["img/inv-campfire-bbq-out.png", "img/inv-campfire-bbq-in.png", "img/inv-campfire-bbq-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Firepit", "Warm up and melt iron slowly.", SKILLS.__SURVIVAL__, [
        [item.wood, 120],
        [item.stone, 20],
        [item.steel, 4]
    ], 1, [
        [AREAS.workbench, 20000]
    ], 3),
    mnw: 21,     
    MNM: 20000,
    WvV: -1,
    z: 0,
    MWW: AREAS.bbq,
    stack: 255,
    loot: Mv.campfirebbq,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-campfire-bbq.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-campfire-bbq.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: __WARM__,
    draw: Render.fireCont,
    VvmvM: Render.nnvWw,
    NnN: 16,
    wwN: {
        src: "img/e-campfire-bbq.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-campfire-bbq.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.smelter,
    img: {
        src: ["img/inv-smelter-out.png", "img/inv-smelter-in.png", "img/inv-smelter-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Smelter", "Melt iron, uranium and alloys", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 6],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 10),
    mnw: 21,     
    MNM: 42000,
    WvV: 1,
    z: 1,
    MWW: AREAS.smelter,
    stack: 255,
    loot: Mv.smelter,
    wait: 10,
    mN: 1000,
    width: [100, 260, 100, 260],
    height: [260, 100, 260, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, -80, 0, -80],
    inmapy: [-80, 0, -80, 0],
    MMnVm: [-1, 0, -1, 0],
    nmMVw: [0, -1, 0, -1],
    putableimg: {
        src: "img/day-clear-blue-smelter.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-smelter.png",
        W: {
            m: 0
        }
    },
    MvWnM: [-20.5, -101.5, 20.5, 101.5],
    VmNMm: [101.5, -20.5, -101, 20.5],
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.vNvMW,
    NnN: 16,
    wwN: {
        src: "img/e-smelter.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-smelter-off.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-smelter-on.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-smelter-light-up.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-smelter-light-down.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.wooddoor1,
    img: {
        src: ["img/inv-wood-door1-out.png", "img/inv-wood-door1-in.png", "img/inv-wood-door1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wooden Door", "Let's hope it holds.", SKILLS.__BUILDING__, [
        [item.wood, 60]
    ], 1, [
        [AREAS.workbench, 20000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.wooddoor1,
    wait: 10,
    mN: 600,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-wood-door1.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-wood-door1.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI,
    NVvMw: [1, -1, -1, 1],
    wmvvV: [-1, -1, 1, 1],
    vVNvM: [0, 0, 0, 0],
    NnmvM: [0, 0, 0, 0],
    wnwMW: [100, 100, 100, 100],
    VvvNw: [100, 100, 100, 100],
    VvMvv: 17,
    MmVVV: 113,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-wood-door1-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-door1-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-door1-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-wood-door1.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 2500,
    mW: 0
}, {
    id: item.stonedoor1,
    img: {
        src: ["img/inv-stone-door1-out.png", "img/inv-stone-door1-in.png", "img/inv-stone-door1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Door", "Not too heavy to open, I hope.", SKILLS.__BUILDING__, [
        [item.stone, 60]
    ], 1, [
        [AREAS.workbench, 20000]
    ], 3),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.stonedoor1,
    wait: 10,
    mN: 600,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-door1.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-door1.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI,
    NVvMw: [1, -1, -1, 1],
    wmvvV: [-1, -1, 1, 1],
    vVNvM: [0, 0, 0, 0],
    NnmvM: [0, 0, 0, 0],
    wnwMW: [100, 100, 100, 100],
    VvvNw: [100, 100, 100, 100],
    VvMvv: 17,
    MmVVV: 113,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-stone-door1-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-door1-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-door1-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.stone,
    destroyaudio: SOUNDID.stonedes,
    Nn: {
        src: "img/day-stone-door1.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 6000,
    mW: 0
}, {
    id: item.steeldoor1,
    img: {
        src: ["img/inv-steel-door1-out.png", "img/inv-steel-door1-in.png", "img/inv-steel-door1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Door", "I guess you're safe.", SKILLS.__BUILDING__, [
        [item.shapedmetal, 9]
    ], 1, [
        [AREAS.researchbench, 40000]
    ], 6, item.stonedoor1),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.steeldoor1,
    wait: 10,
    mN: 600,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-door1.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-door1.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 1,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI,
    NVvMw: [1, -1, -1, 1],
    wmvvV: [-1, -1, 1, 1],
    vVNvM: [0, 0, 0, 0],
    NnmvM: [0, 0, 0, 0],
    wnwMW: [100, 100, 100, 100],
    VvvNw: [100, 100, 100, 100],
    VvMvv: 17,
    MmVVV: 113,
    draw: Render.WNv,
    NnN: 15,
    wwN: {
        src: "img/e-opendoor.png",
        W: {
            m: 0
        }
    },
    mMnmM: {
        src: "img/e-closedoor.png",
        W: {
            m: 0
        }
    },
    WVW: [{
        src: "img/day-steel-door1-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-door1-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-door1-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-steel-door1.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.steel,
    Mwm: 80,
    WmW: 315360000000,
    health: 12500,
    mW: 0
}, {
    id: item.sulfur,
    img: {
        src: ["img/inv-sulfur-out.png", "img/inv-sulfur-in.png", "img/inv-sulfur-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sulfur", "Sulfur in such a cold landscape?", SKILLS.__MINERAL__, [], 0, [
        [AREAS.extractor, 240000]
    ]),
    wwnWm: 4,
    MwMvv: 8,
    stack: 255,
    loot: Mv.sulfur,
    mW: 32
}, {
    id: item.shapeduranium,
    img: {
        src: ["img/inv-shaped-uranium-out.png", "img/inv-shaped-uranium-in.png", "img/inv-shaped-uranium-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Shaped Uranium", "Are you out of your mind?", SKILLS.__MINERAL__, [
        [item.uranium, 1]
    ], 1, [
        [AREAS.smelter, 20000]
    ]),
    stack: 255,
    loot: Mv.shapeduranium,
    mW: 0
}, {
    id: item.researchbench,
    img: {
        src: ["img/inv-workbench2-out.png", "img/inv-workbench2-in.png", "img/inv-workbench2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Research Bench", "Allow you to make new items", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 6],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.workbench, 50000]
    ], 6),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    MWW: AREAS.researchbench,
    stack: 255,
    loot: Mv.researchbench,
    wait: 10,
    mN: 1000,
    width: [100, 290, 100, 280],
    height: [280, 100, 280, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, -90, 0, -90],
    inmapy: [-90, 0, -90, 0],
    MMnVm: [-1, 0, -1, 0],
    nmMVw: [0, -1, 0, -1],
    putableimg: {
        src: "img/day-clear-blue-workbench2.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-workbench2.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.wMwnV,
    NnN: 16,
    wwN: {
        src: "img/e-workbench2.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-workbench2.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 400,
    mW: 0
}, {
    id: item.uranium,
    img: {
        src: ["img/inv-uranium-out.png", "img/inv-uranium-in.png", "img/inv-uranium-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Uranium", "Do you want to end up as Marie Curie?", SKILLS.__MINERAL__, [], 0, [
        [AREAS.extractor, 240000]
    ]),
    wwnWm: 2,
    MwMvv: 4,
    stack: 255,
    loot: Mv.uranium,
    mW: 45
}, {
    id: item.weavingmachine,
    img: {
        src: ["img/inv-weaving-machine-out.png", "img/inv-weaving-machine-in.png", "img/inv-weaving-machine-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Weaving Machine", "Allow you to sew clothes", SKILLS.__SURVIVAL__, [
        [item.wood, 80],
        [item.stone, 20],
        [item.string, 2]
    ], 1, [
        [AREAS.workbench, 60000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    MWW: AREAS.weavingmachine,
    stack: 255,
    loot: Mv.weavingmachine,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-weaving-machine.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-weaving-machine.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.FCWCcont,
    NnN: 16,
    wwN: {
        src: "img/e-weaving-machine.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-weaving-machine.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.gasoline,
    img: {
        src: ["img/inv-gasoline-out.png", "img/inv-gasoline-in.png", "img/inv-gasoline-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gasoline", "Fuel for Smelter", SKILLS.__SURVIVAL__, [
        [item.rottenorange, 4],
        [item.sulfur, 1]
    ], 1, [
        [AREAS.researchbench, 20000]
    ]),
    stack: 255,
    loot: Mv.gasoline
}, {
    id: item.sulfurpickaxe,
    img: {
        src: ["img/inv-sulfur-pickaxe-out.png", "img/inv-sulfur-pickaxe-in.png", "img/inv-sulfur-pickaxe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sulfur Pickaxe", "Mine also Uranium", SKILLS.__TOOL__, [
        [item.alloys, 2],
        [item.shapedmetal, 6],
        [item.sulfur, 6]
    ], 1, [
        [AREAS.researchbench, 90000]
    ], 9, item.steelpickaxe),
    mnw: 22,     
    stack: 1,
    loot: Mv.sulfurpickaxe,
    wait: 10
}, {
    id: item.chest,
    img: {
        src: ["img/inv-chest-out.png", "img/inv-chest-in.png", "img/inv-chest-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood chest", "You can't store food in.", SKILLS.__BUILDING__, [
        [item.wood, 50],
        [item.stone, 20]
    ], 1, [
        [AREAS.workbench, 30000]
    ], 8),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.chest,
    wait: 10,
    mwV: 1,
    mN: 600,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-chest.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-chest.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    draw: Render.FCWCcont,
    NnN: 25,
    wwN: {
        src: "img/e-chest.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: {
        src: "img/day-chest.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.wood,
    Mwm: 55,
    WmW: 315360000000,
    health: 300,
    mW: 0
}, {
    id: item.fridge,
    img: {
        src: ["img/inv-fridge-out.png", "img/inv-fridge-in.png", "img/inv-fridge-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Fridge", "Save your food.", SKILLS.__BUILDING__, [
        [item.shapedmetal, 5],
        [item.energycell, 4]
    ], 1, [
        [AREAS.researchbench, 90000]
    ], 9),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.fridge,
    wait: 10,
    mwV: 1,
    VVmmM: 1,
    mN: 600,
    width: [50, 100, 50, 100],
    height: [100, 50, 100, 50],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 50, 0],
    inmapy: [0, 0, 0, 50],
    putableimg: {
        src: "img/day-clear-blue-fridge.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-fridge.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    draw: Render.FCWCcont,
    NnN: 25,
    wwN: {
        src: "img/e-fridge.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-fridge.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 55,
    WmW: 315360000000,
    health: 300,
    mW: 0
}, {
    id: item.woodfloor1,
    img: {
        src: ["img/inv-wood-floor-out.png", "img/inv-wood-floor-in.png", "img/inv-wood-floor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.wood, 15]
    ], 2, [
        [AREAS.workbench, 15000]
    ]),
    stack: 255,
    loot: Mv.woodfloor1,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-wood-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-wood-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.woodfloor1,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-wood-floor-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.wooddes,
    Nn: [{
        src: "img/day-wood-floor-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 4000,
    mW: 0
}, {
    id: item.hammer,
    img: {
        src: ["img/inv-hammer-out.png", "img/inv-hammer-in.png", "img/inv-hammer-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Hammer", "Destroy walls quickly.", SKILLS.__TOOL__, [
        [item.wood, 100],
        [item.shapedmetal, 10]
    ], 1, [
        [AREAS.researchbench, 30000]
    ], 7),
    mnw: 23,     
    stack: 1,
    loot: Mv.hammer,
    wait: 10
}, {
    id: item.sleepingbag,
    img: {
        src: ["img/inv-sleeping-bag-out.png", "img/inv-sleeping-bag-in.png", "img/inv-sleeping-bag-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sleeping Bag", "Once dead, you keep your base", SKILLS.__SURVIVAL__, [
        [item.leather, 7],
        [item.animalfat, 7],
        [item.string, 7]
    ], 1, [
        [AREAS.weavingmachine, 20000]
    ], 9),
    stack: 255,
    loot: Mv.sleepingbag,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-sleeping-bag.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-sleeping-bag.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.mvWww,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-sleeping-bag.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.furpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 500,
    mW: 0
}, {
    id: item.repairhammer,
    img: {
        src: ["img/inv-repair-hammer-out.png", "img/inv-repair-hammer-in.png", "img/inv-repair-hammer-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Repair Hammer", "Repair walls but require nails.", SKILLS.__TOOL__, [
        [item.wood, 120],
        [item.shapedmetal, 2]
    ], 1, [
        [AREAS.workbench, 30000]
    ], 5),
    mnw: 24,     
    stack: 1,
    loot: Mv.repairhammer,
    wait: 10
}, {
    id: item.nails,
    img: {
        src: ["img/inv-nails-out.png", "img/inv-nails-in.png", "img/inv-nails-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Nails", "Needed to repair walls.", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 2]
    ], 85, [
        [AREAS.workbench, 20000]
    ]),
    stack: 255,
    loot: Mv.nails
}, {
    id: item.woodfloor2,
    img: {
        src: ["img/inv-wood-floor-light-out.png", "img/inv-wood-floor-light-in.png", "img/inv-wood-floor-light-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Light Wood Floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.wood, 15]
    ], 2, [
        [AREAS.workbench, 15000]
    ]),
    stack: 255,
    loot: Mv.woodfloor2,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-woodlight-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-woodlight-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.woodfloor2,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-wood-floor-light-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.wooddes,
    Nn: [{
        src: "img/day-wood-floor-light-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-floor-light-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.woodpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 4000,
    mW: 0
}, {
    id: item.smallwoodwall,
    img: {
        src: ["img/inv-wood-smallwall-out.png", "img/inv-wood-smallwall-in.png", "img/inv-wood-smallwall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wooden Low Wall", "You can shoot through it.", SKILLS.__BUILDING__, [
        [item.wood, 10]
    ], 1, [
        [AREAS.workbench, 10000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.smallwoodwall,
    wait: 10,
    mN: 1000,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-wood-smallwall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-wood-smallwall.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 1,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    WnW: 0,
    draw: Render.VWN,
    WVW: [{
        src: "img/day-wood-smallwalls-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: [{
        src: "img/day-wood-smallwalls-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-smallwalls-39.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.smallstonewall,
    img: {
        src: ["img/inv-stone-smallwall-out.png", "img/inv-stone-smallwall-in.png", "img/inv-stone-smallwall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Low Wall", "You can shoot through it.", SKILLS.__BUILDING__, [
        [item.stone, 10]
    ], 1, [
        [AREAS.workbench, 15000]
    ], 3),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.smallstonewall,
    wait: 10,
    mN: 1000,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-smallwalls.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-smallwalls.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 1,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    WnW: 0,
    draw: Render.VWN,
    WVW: [{
        src: "img/day-stone-smallwalls-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.stone,
    destroyaudio: SOUNDID.stonedes,
    Nn: [{
        src: "img/day-stone-smallwalls-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-smallwalls-39.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 7000,
    mW: 0
}, {
    id: item.smallsteelwall,
    img: {
        src: ["img/inv-steel-smallwall-out.png", "img/inv-steel-smallwall-in.png", "img/inv-steel-smallwall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Low Wall", "You can shoot through it.", SKILLS.__BUILDING__, [
        [item.shapedmetal, 2]
    ], 1, [
        [AREAS.researchbench, 20000]
    ], 6, item.smallstonewall),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 0,
    stack: 255,
    loot: Mv.smallsteelwall,
    wait: 10,
    mN: 1000,
    width: [100, 35, 100, 35],
    height: [35, 100, 35, 100],
    Wwv: [0, -30, 0, 30],
    nWn: [30, 0, -30, 0],
    inmapx: [0, 0, 0, 65],
    inmapy: [65, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-smallwalls.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-smallwalls.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 1,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    angle: window.Math.PI / 2,
    NVvMw: [1, 0, -1, 0],
    wmvvV: [0, -1, 0, 1],
    vVNvM: [0, 0, 65, 0],
    NnmvM: [0, 0, 0, 65],
    wnwMW: [35, 100, 35, 100],
    VvvNw: [100, 35, 100, 35],
    VvMvv: 6,
    MmVVV: 46,
    WnW: 0,
    draw: Render.VWN,
    WVW: [{
        src: "img/day-steel-smallwalls-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-steel-smallwalls-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-steel-smallwalls-39.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.steel,
    Mwm: 55,
    WmW: 315360000000,
    health: 15000,
    mW: 0
}, {
    id: item.MMnVW,
    WvV: 0,
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: [],
    detail: {
        nww: window.undefined
    },
    NWm: -1,
    draw: Render.mWmnv
}, {
    id: item.tomatosoup,
    img: {
        src: ["img/inv-tomato-soup-out.png", "img/inv-tomato-soup-in.png", "img/inv-tomato-soup-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tomato Soup", "Has not yet been opened.", SKILLS.__SURVIVAL__, [
        [item.can, 1],
        [item.tomato, 2]
    ], 1, [
        [AREAS.firepart, 15000],
        [AREAS.bbq, 7000]
    ]),
    mnw: 25,     
    stack: 5,
    loot: Mv.tomatosoup,
    vWVMV: 2,
    nNmmM: item.can,
    wait: 10
}, {
    id: item.syringe,
    img: {
        src: ["img/inv-syringe-out.png", "img/inv-syringe-in.png", "img/inv-syringe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Syringe", "Useful to make drugs.", SKILLS.__DRUG__, [
        [item.junk, 1]
    ], 1, [
        [AREAS.researchbench, 30000]
    ]),
    stack: 20,
    loot: Mv.syringe,
    mW: 50
}, {
    id: item.chemicalcomponent,
    img: {
        src: ["img/inv-chemical-component-out.png", "img/inv-chemical-component-in.png", "img/inv-chemical-component-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Chemical Component", "Useful to make a drugs."),
    stack: 20,
    loot: Mv.chemicalcomponent,
    mW: 50
}, {
    id: item.radway,
    img: {
        src: ["img/inv-radaway-out.png", "img/inv-radaway-in.png", "img/inv-radaway-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("RadAway", "Reduce your radioactivity a lot.", SKILLS.__DRUG__, [
        [item.syringe, 1],
        [item.chemicalcomponent, 1],
        [item.mushroom2, 1]
    ], 1, [
        [AREAS.agitator, 45000]
    ]),
    mnw: 26,     
    stack: 5,
    loot: Mv.radway,
    wait: 10
}, {
    id: item.tomatoseed,
    img: {
        src: ["img/inv-tomato-seed-out.png", "img/inv-tomato-seed-in.png", "img/inv-tomato-seed-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tomato Seed", "A fruit or vegetable?", SKILLS.__PLANT__, [
        [item.tomato, 4]
    ], 1, [
        [AREAS.firepart, 30000],
        [AREAS.bbq, 20000]
    ]),
    stack: 40,
    loot: Mv.tomatoseed,
    MmwnN: Mv.tomato,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/day-clear-blue-tomato.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-tomato.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__SEED__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.MWnVn,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    Nn: [{
        src: "img/day-plant0-tomato.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant1-tomato.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant2-tomato.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant3-tomato.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant4-tomato.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.tomato,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 250,
    mW: 0
}, {
    id: item.tomato,
    img: {
        src: ["img/inv-tomato-out.png", "img/inv-tomato-in.png", "img/inv-tomato-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tomato", "Why did the tomato blush?"),
    stack: 20,
    loot: Mv.tomato,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottentomato,
    mnw: 27,     
    mW: 24
}, {
    id: item.rottentomato,
    img: {
        src: ["img/inv-rotten-tomato-out.png", "img/inv-rotten-tomato-in.png", "img/inv-rotten-tomato-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Tomato", "Go on, have a bite!"),
    stack: 20,
    loot: Mv.rottentomato,
    wait: 5,
    mnw: 28,     
    mW: 20
}, {
    id: item.can,
    img: {
        src: ["img/inv-can-out.png", "img/inv-can-in.png", "img/inv-can-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Can", "Useful to craft food can.", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 1]
    ], 1, [
        [AREAS.workbench, 20000]
    ]),
    mnw: 0,     
    stack: 255,
    loot: Mv.can
}, {
    id: item.crossbow,
    img: {
        src: ["img/inv-wood-crossbow-out.png", "img/inv-wood-crossbow-in.png", "img/inv-wood-crossbow-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wood Crossbow", "Shoot faster, reload slower", SKILLS.__WEAPON__, [
        [item.wood, 200],
        [item.string, 2],
        [item.shapedmetal, 1]
    ], 1, [
        [AREAS.workbench, 50000]
    ], 6),
    mnw: 29,     
    vMv: item.crossarrow,
    stack: 1,
    loot: Mv.crossbow,
    wait: 10
}, {
    id: item.crossarrow,
    img: {
        src: ["img/inv-wood-crossarrow-out.png", "img/inv-wood-crossarrow-in.png", "img/inv-wood-crossarrow-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Crossbow Arrows", "Needed to use crossbow.", SKILLS.__WEAPON__, [
        [item.wood, 40],
        [item.shapedmetal, 1]
    ], 10, [
        [AREAS.workbench, 30000]
    ]),
    stack: 255,
    loot: Mv.crossarrow
}, {
    id: item.nailgun,
    img: {
        src: ["img/inv-nail-gun-out.png", "img/inv-nail-gun-in.png", "img/inv-nail-gun-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Nail Gun", "Repair walls from a distance", SKILLS.__TOOL__, [
        [item.shapedmetal, 3],
        [item.smallwire, 1],
        [item.junk, 1],
        [item.energycell, 4]
    ], 1, [
        [AREAS.researchbench, 30000]
    ], 7),
    mnw: 30,     
    vMv: item.nails,
    stack: 1,
    loot: Mv.nailgun,
    wait: 10
}, {
    id: item.sawedoff,
    img: {
        src: ["img/inv-sawed-off-shotgun-out.png", "img/inv-sawed-off-shotgun-in.png", "img/inv-sawed-off-shotgun-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sawed Off", "Shoot less far, do more damages", SKILLS.__WEAPON__, [
        [item.shotgun, 1],
        [item.alloys, 6],
        [item.shapedmetal, 6]
    ], 1, [
        [AREAS.researchbench, 200000]
    ], 13, item.shotgun),
    mnw: 31,     
    vMv: item.bulletshotgun,
    stack: 1,
    loot: Mv.sawedoff,
    wait: 10
}, {
    id: item.stonefloor1,
    img: {
        src: ["img/inv-stone-floor-out.png", "img/inv-stone-floor-in.png", "img/inv-stone-floor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.stone, 15]
    ], 2, [
        [AREAS.workbench, 15000]
    ], 4),
    stack: 255,
    loot: Mv.stonefloor1,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.stonefloor1,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-stone-floor-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.stonedes,
    Nn: [{
        src: "img/day-stone-floor-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-floor-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 8000,
    mW: 0
}, {
    id: item.stonefloor2,
    img: {
        src: ["img/inv-tiling-floor-out.png", "img/inv-tiling-floor-in.png", "img/inv-tiling-floor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tiling floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.stone, 15]
    ], 2, [
        [AREAS.workbench, 15000]
    ], 4),
    stack: 255,
    loot: Mv.stonefloor2,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-tiling-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-tiling-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.stonefloor2,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-tiling-floor-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.stonedes,
    Nn: [{
        src: "img/day-tiling-floor-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tiling-floor-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 8000,
    mW: 0
}, {
    id: item.NvMvM,
    WvV: 0,
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: [],
    Nvw: [],
    detail: {
        nww: window.undefined
    },
    NWm: -1,
    draw: Render.NNnmv
}, {
    id: item.chips,
    img: {
        src: ["img/inv-chips-out.png", "img/inv-chips-in.png", "img/inv-chips-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Crisps", "You salty?"),
    mnw: 32,     
    stack: 5,
    loot: Mv.chips,
    vWVMV: 2,
    nNmmM: item.rottenchips,
    wait: 10
}, {
    id: item.rottenchips,
    img: {
        src: ["img/inv-rotten-chips-out.png", "img/inv-rotten-chips-in.png", "img/inv-rotten-chips-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Expired Crisps", "Go on, have a bite!"),
    stack: 5,
    loot: Mv.rottenchips,
    wait: 5,
    mnw: 33,     
    mW: 20
}, {
    id: item.electronicpart,
    img: {
        src: ["img/inv-electronic-part-out.png", "img/inv-electronic-part-in.png", "img/inv-electronic-part-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Electronic Parts", "Break TV's and Computers to find it"),
    stack: 255,
    loot: Mv.electronicpart,
    mW: 100
}, {
    id: item.junk,
    img: {
        src: ["img/inv-junk-out.png", "img/inv-junk-in.png", "img/inv-junk-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Junk", "Find it in houses"),
    stack: 255,
    loot: Mv.junk,
    mW: 40
}, {
    id: item.wires,
    img: {
        src: ["img/inv-wires-out.png", "img/inv-wires-in.png", "img/inv-wires-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Big Wire", "Break big computers in power AREAS (in the city)"),
    stack: 255,
    loot: Mv.wires,
    mW: 40
}, {
    id: item.energycell,
    img: {
        src: ["img/inv-small-energy-cells-out.png", "img/inv-small-energy-cells-in.png", "img/inv-small-energy-cells-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Energy Cells", "Used for energy weapons/buildings", SKILLS.__SURVIVAL__, [
        [item.alloys, 1],
        [item.shapeduranium, 1]
    ], 30, [
        [AREAS.teslabench, 28000]
    ], 6),
    stack: 255,
    loot: Mv.energycell
}, {
    id: item.laserpistol,
    img: {
        src: ["img/inv-laser-pistol-out.png", "img/inv-laser-pistol-in.png", "img/inv-laser-pistol-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Laser Pistol", "Bullets are faster.", SKILLS.__WEAPON__, [
        [item.shapeduranium, 2],
        [item.wires, 1],
        [item.electronicpart, 2],
        [item.alloys, 1],
        [item.shapedmetal, 4]
    ], 1, [
        [AREAS.teslabench, 180000]
    ], 14),
    mnw: 34,     
    vMv: item.energycell,
    stack: 1,
    loot: Mv.laserpistol,
    wait: 10
}, {
    id: item.teslabench,
    img: {
        src: ["img/inv-workbench3-out.png", "img/inv-workbench3-in.png", "img/inv-workbench3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tesla Bench", "Allow you to make powerful items", SKILLS.__SURVIVAL__, [
        [item.alloys, 4],
        [item.shapedmetal, 6],
        [item.electronicpart, 3],
        [item.wires, 4],
        [item.shapeduranium, 2]
    ], 1, [
        [AREAS.researchbench, 120000]
    ], 10, item.researchbench),
    mnw: 21,     
    MNM: 60000,
    WvV: 0,
    z: 1,
    MWW: AREAS.teslabench,
    stack: 255,
    loot: Mv.teslabench,
    wait: 10,
    mN: 1000,
    width: [100, 260, 100, 260],
    height: [260, 100, 260, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, -80, 0, -80],
    inmapy: [-80, 0, -80, 0],
    MMnVm: [-1, 0, -1, 0],
    nmMVw: [0, -1, 0, -1],
    putableimg: {
        src: "img/day-clear-blue-workbench3.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-workbench3.png",
        W: {
            m: 0
        }
    },
    MvWnM: [-20.5, -101.5, 20.5, 101.5],
    VmNMm: [101.5, -20.5, -101, 20.5],
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__AI_CONSTRUCTOR__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.nVWmn,
    NnN: 16,
    wwN: {
        src: "img/e-workbench3.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-workbench3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-workbench3-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-workbench3-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-workbench3-3.png",
        W: {
            m: 0
        }
    }],
    mMW: [{
        src: "img/day-tesla-light0.png",
        W: {
            m: 0
        }
    }, 0, {
        src: "img/day-tesla-light1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tesla-light2.png",
        W: {
            m: 0
        }
    }, 0, {
        src: "img/day-tesla-light3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tesla-light4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-tesla-light5.png",
        W: {
            m: 0
        }
    }, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.alloys,
    img: {
        src: ["img/inv-alloys-out.png", "img/inv-alloys-in.png", "img/inv-alloys-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Alloys", "To craft powerful items", SKILLS.__MINERAL__, [
        [item.steel, 1],
        [item.junk, 1],
        [item.sulfur, 1]
    ], 1, [
        [AREAS.smelter, 10000]
    ]),
    stack: 255,
    loot: Mv.alloys
}, {
    id: item.sulfuraxe,
    img: {
        src: ["img/inv-sulfur-axe-out.png", "img/inv-sulfur-axe-in.png", "img/inv-sulfur-axe-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Sulfur Axe", "You look cool with it.", SKILLS.__TOOL__, [
        [item.stoneaxe, 1],
        [item.alloys, 8],
        [item.shapedmetal, 10],
        [item.sulfur, 20]
    ], 1, [
        [AREAS.researchbench, 200000]
    ], 10, item.stoneaxe),
    mnw: 35,     
    stack: 1,
    loot: Mv.sulfuraxe,
    wait: 10
}, {
    id: item.landmine,
    img: {
        src: ["img/inv-landmine-out.png", "img/inv-landmine-in.png", "img/inv-landmine-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Landmine", "When you feel it, it's too late", SKILLS.__WEAPON__, [
        [item.shapedmetal, 4],
        [item.junk, 1],
        [item.sulfur, 2],
        [item.animalfat, 2]
    ], 1, [
        [AREAS.researchbench, 40000]
    ], 9),
    stack: 20,
    loot: Mv.landmine,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [50, 50, 50, 50],
    height: [50, 50, 50, 50],
    inmapx: [25, 25, 25, 25],
    inmapy: [25, 25, 25, 25],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-landmine.png", //image when you try to put in ground
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-landmine.png",//image when are unnable to put in ground(if you try to put in tree for example)
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 1,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    damage: 200,
    WWv: 400,
    WnW: 0,
    draw: Render.vmMNW,   //visible before - draw: Render.vmMNW
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-landmine-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-landmine-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-landmine-2.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.kakipart,
    Mwm: 80,
    WmW: 315360000000,
    health: 5,
    mW: 0
}, {
    id: item.dynamite,
    img: {
        src: ["img/inv-dynamite-out.png", "img/inv-dynamite-in.png", "img/inv-dynamite-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Dynamite", "Get out of here, it gonna blow!", SKILLS.__WEAPON__, [
        [item.string, 1],
        [item.animalfat, 2],
        [item.sulfur, 2],
        [item.junk, 1]
    ], 1, [
        [AREAS.researchbench, 40000]
    ], 9),
    stack: 10,
    loot: Mv.dynamite,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-dynamite.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-dynamite.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 1,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    damage: 180,
    WWv: 1400,
    WnW: 0,
    draw: Render.VnMww,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.VNv,
    Nn: [{
        src: "img/day-dynamite.png",
        W: {
            m: 0
        }
    }, {
        src: "img/dynamite-yellow.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.redsteelpart,
    Mwm: 80,
    WmW: 5000,
    health: 100,
    mW: 0
}, {
    id: item.c4bomb,
    img: {
        src: ["img/inv-C4-out.png", "img/inv-C4-in.png", "img/inv-C4-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("C4", "Explode when you hit the trigger!", SKILLS.__WEAPON__, [
        [item.dynamite, 2],
        [item.smallwire, 1],
        [item.alloys, 2],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.researchbench, 60000]
    ], 16, item.dynamite),
    stack: 5,
    loot: Mv.c4bomb,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-C4.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-C4.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 1,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    damage: 255,
    WWv: 6000,
    MMN: 0,
    WnW: 0,
    draw: Render.VnMww,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.VNv,
    Nn: [{
        src: "img/day-C4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/C4-red.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.kakipart,
    Mwm: 80,
    WmW: 315360000000,
    health: 100,
    mW: 0
}, {
    id: item.joystic,
    img: {
        src: ["img/inv-joystick-out.png", "img/inv-joystick-in.png", "img/inv-joystick-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("C4 Trigger", "Don't press the button or else...", SKILLS.__WEAPON__, [
        [item.shapedmetal, 5],
        [item.electronicpart, 1],
        [item.energycell, 8],
        [item.smallwire, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 16, item.c4bomb),
    stack: 1,
    loot: Mv.joystic,
    wait: 10,
    mnw: 36,     
    mW: 0
}, {
    id: item.composter,
    img: {
        src: ["img/inv-composter-out.png", "img/inv-composter-in.png", "img/inv-composter-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Compost", "Allows to accelerate rotting", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 4],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 8),
    mnw: 21,     
    MNM: 10000,
    WvV: 0,
    z: 1,
    MWW: AREAS.composter,
    stack: 255,
    loot: Mv.composter,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-composter.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-composter.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.vNvnV,
    NnN: 16,
    wwN: {
        src: "img/e-composter.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-composter-off.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-composter.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 500,
    mW: 0
}, {
    id: item.metalhelmet,
    img: {
        src: ["img/inv-metal-helmet-out.png", "img/inv-metal-helmet-in.png", "img/inv-metal-helmet-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Metal Helmet", "Protects you from melee weapons", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 3],
        [item.animaltendon, 3],
        [item.leather, 3],
        [item.nails, 80]
    ], 1, [
        [AREAS.workbench, 70000]
    ]),
    nwm: 7,
    stack: 1,
    loot: Mv.metalhelmet,
    wait: 10,
    wNV: 0,
    NVw: 0.15,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: -0.01
}, {
    id: item.weldinghelmet,
    img: {
        src: ["img/inv-welding-helmet-out.png", "img/inv-welding-helmet-in.png", "img/inv-welding-helmet-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Welding Helmet", "Protects you from melee weapons", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 10],
        [item.alloys, 2],
        [item.leather, 3],
        [item.nails, 160],
        [item.metalhelmet, 1]
    ], 1, [
        [AREAS.researchbench, 140000]
    ], 7),
    nwm: 8,
    stack: 1,
    loot: Mv.weldinghelmet,
    wait: 10,
    wNV: 0,
    NVw: 0.4,
    MvM: 0,
    mnm: 0,
    Vww: 0.05,
    MWw: 0,
    speed: -0.02
}, {
    id: item.gladiatorhelmet,
    img: {
        src: ["img/inv-gladiator-helmet-out.png", "img/inv-gladiator-helmet-in.png", "img/inv-gladiator-helmet-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gladiator Helmet", "Strength and honor.", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 12],
        [item.alloys, 6],
        [item.leather, 4],
        [item.nails, 255],
        [item.weldinghelmet, 1]
    ], 1, [
        [AREAS.researchbench, 300000]
    ], 17, item.weldinghelmet),
    nwm: 9,
    stack: 1,
    loot: Mv.gladiatorhelmet,
    wait: 10,
    wNV: 0,
    NVw: 0.6,
    MvM: 0.1,
    mnm: 0,
    Vww: 0.2,
    MWw: 0,
    speed: -0.03
}, {
    id: item.leatherjacket,
    img: {
        src: ["img/inv-leather-jacket-out.png", "img/inv-leather-jacket-in.png", "img/inv-leather-jacket-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Leather Jacket", "Protects you from guns", SKILLS.__CLOTHE__, [
        [item.string, 2],
        [item.leather, 4]
    ], 1, [
        [AREAS.weavingmachine, 70000]
    ]),
    nwm: 10,
    stack: 1,
    loot: Mv.leatherjacket,
    wait: 10,
    wNV: 0.0006,
    NVw: 0,
    MvM: 0.2,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.kevlarsuit,
    img: {
        src: ["img/inv-kevlar-suit-out.png", "img/inv-kevlar-suit-in.png", "img/inv-kevlar-suit-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Kevlar Suit", "Protects you from guns", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 6],
        [item.string, 4],
        [item.leather, 6],
        [item.alloys, 2],
        [item.leatherjacket, 1]
    ], 1, [
        [AREAS.weavingmachine, 100000]
    ], 12),
    nwm: 11,
    stack: 1,
    loot: Mv.kevlarsuit,
    wait: 10,
    wNV: 0,
    NVw: 0,
    MvM: 0.4,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.SWATsuit,
    img: {
        src: ["img/inv-SWAT-suit-out.png", "img/inv-SWAT-suit-in.png", "img/inv-SWAT-suit-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("SWAT Suit", "Protects you from guns", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 10],
        [item.string, 10],
        [item.leather, 10],
        [item.alloys, 4],
        [item.kevlarsuit, 1]
    ], 1, [
        [AREAS.weavingmachine, 200000]
    ], 18, item.kevlarsuit),
    nwm: 12,
    stack: 1,
    loot: Mv.SWATsuit,
    wait: 10,
    wNV: 0,
    NVw: 0.1,
    MvM: 0.7,
    mnm: 0,
    Vww: 0.1,
    MWw: 0,
    speed: -0.01
}, {
    id: item.protectivesuit,
    img: {
        src: ["img/inv-protective-suit-out.png", "img/inv-protective-suit-in.png", "img/inv-protective-suit-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Protective Suit", "Protects you from explosives", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 6],
        [item.string, 6],
        [item.leather, 6],
        [item.alloys, 2]
    ], 1, [
        [AREAS.weavingmachine, 200000]
    ], 12, item.lightweightskill),
    nwm: 13,
    stack: 1,
    loot: Mv.protectivesuit,
    wait: 10,
    wNV: 0.00085,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0.9,
    MWw: 0,
    speed: -0.03
}, {
    id: item.tesla1,
    img: {
        src: ["img/inv-tesla-0-out.png", "img/inv-tesla-0-in.png", "img/inv-tesla-0-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Power Armor", "Protects you from energy weapons", SKILLS.__CLOTHE__, [
        [item.shapedmetal, 20],
        [item.shapeduranium, 2],
        [item.electronicpart, 1],
        [item.wires, 2],
        [item.alloys, 2]
    ], 1, [
        [AREAS.teslabench, 150000]
    ], 10),
    nwm: 14,
    stack: 1,
    loot: Mv.tesla1,
    wait: 10,
    wNV: 0,
    NVw: 0,
    MvM: 0,
    mnm: 0.3,
    Vww: 0,
    MWw: 0,
    speed: 0
}, {
    id: item.tesla2,
    img: {
        src: ["img/inv-tesla-armor-out.png", "img/inv-tesla-armor-in.png", "img/inv-tesla-armor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tesla Armor", "Protects you from energy weapons", SKILLS.__CLOTHE__, [
        [item.tesla1, 1],
        [item.shapeduranium, 10],
        [item.electronicpart, 5],
        [item.wires, 5],
        [item.alloys, 10]
    ], 1, [
        [AREAS.teslabench, 300000]
    ], 18, item.tesla1, 3),
    nwm: 15,
    stack: 1,
    loot: Mv.tesla2,
    wait: 10,
    wNV: 0.00085,
    NVw: 0.2,
    MvM: 0.2,
    mnm: 0.75,
    Vww: 0.2,
    MWw: 0.01,
    speed: -0.02
}, {
    id: item.woodespike,
    img: {
        src: ["img/inv-wood-spike-out.png", "img/inv-wood-spike-in.png", "img/inv-wood-spike-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Wooden Spike", "Hurt and slow down", SKILLS.__BUILDING__, [
        [item.wood, 80]
    ], 1, [
        [AREAS.workbench, 25000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    stack: 40,
    loot: Mv.woodespike,
    wait: 10,
    mN: 1000,
    width: [50, 50, 50, 50],
    height: [50, 50, 50, 50],
    inmapx: [25, 25, 25, 25],
    inmapy: [25, 25, 25, 25],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wood-spike.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wood-spike.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.WwVVm,
    hidden: [{
        src: "img/day-wood-spike-cover1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-spike-cover2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-spike-cover3.png",
        W: {
            m: 0
        }
    }],
    vWwvw: [{
        src: "img/day-wood-spike-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-spike-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-wood-spike-3.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.wood,
    Mwm: 80,
    WmW: 315360000000,
    health: 200,
    mW: 0
}, {
    id: item.lasersubmachine,
    img: {
        src: ["img/inv-laser-submachine-out.png", "img/inv-laser-submachine-in.png", "img/inv-laser-submachine-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Laser Submachine", "It's the best weapon", SKILLS.__WEAPON__, [
        [item.alloys, 10],
        [item.shapedmetal, 6],
        [item.shapeduranium, 6],
        [item.wires, 2],
        [item.electronicpart, 3]
    ], 1, [
        [AREAS.teslabench, 180000]
    ], 14, item.laserpistol, 2),
    mnw: 37,     
    vMv: item.energycell,
    stack: 1,
    loot: Mv.lasersubmachine,
    wait: 10
}, {
    id: item.granade,
    img: {
        src: ["img/inv-grenade-out.png", "img/inv-grenade-in.png", "img/inv-grenade-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Grenade", "Explodes when you throw it away.", SKILLS.__WEAPON__, [
        [item.shapedmetal, 2],
        [item.junk, 2],
        [item.sulfur, 2],
        [item.animalfat, 2]
    ], 2, [
        [AREAS.researchbench, 30000]
    ], 10),
    mnw: 38,     
    damage: 130,
    WWv: 400,
    stack: 10,
    loot: Mv.granade,
    wait: 10
}, {
    id: item.superhammer,
    img: {
        src: ["img/inv-super-hammer-out.png", "img/inv-super-hammer-in.png", "img/inv-super-hammer-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Super Hammer", "Destroy indestructible walls."),
    mnw: 39,     
    stack: 1,
    loot: Mv.superhammer,
    wait: 10
}, {
    id: item.ghoulblood,
    img: {
        src: ["img/inv-ghoul-blood-out.png", "img/inv-ghoul-blood-in.png", "img/inv-ghoul-blood-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Ghoul Blood", "Find it on speedy ghouls"),
    stack: 255,
    loot: Mv.ghoulblood,
    mW: 100
}, 

{
    id: item.camouflage,
    img: {
        src: ["img/inv-camouflage-gear-out.png", "img/inv-camouflage-gear-in.png", "img/inv-camouflage-gear-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Camouflage Gear", "Hide you in the forest", SKILLS.__CLOTHE__, [
        [item.wood, 90],
        [item.string, 2],
        [item.leather, 2]
    ], 1, [
        [AREAS.weavingmachine, 40000]
    ]),
    nwm: 16,
    stack: 1,
    loot: Mv.camouflage,
    wait: 10,
    wNV: 0,
    NVw: 0,
    MvM: 0,
    mnm: 0,
    Vww: 0,
    MWw: 0,
    speed: 0
},

{
    id: item.agitator,
    img: {
        src: ["img/inv-agitator-out.png", "img/inv-agitator-in.png", "img/inv-agitator-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Agitator", "Allows to craft drugs", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 6],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 8),
    mnw: 21,     
    MNM: 100000,
    WvV: 0,
    z: 1,
    MWW: AREAS.agitator,
    stack: 255,
    loot: Mv.agitator,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-agitator.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-agitator.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.wNvVV,
    NnN: 16,
    wwN: {
        src: "img/e-agitator.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-agitator1-off.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-agitator1-on.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-agitator-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-agitator-2.png",
        W: {
            m: 0
        }
    }],
    NmVwM: [
        [-25.5, 21],
        [-21, -25.5],
        [25.5, -21],
        [21, 25.5]
    ],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 500,
    mW: 0
}, {
    id: item.ghouldrug,
    img: {
        src: ["img/inv-ghoul-drug-out.png", "img/inv-ghoul-drug-in.png", "img/inv-ghoul-drug-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Ghoul Drug", "Ghouls does not attack you.", SKILLS.__DRUG__, [
        [item.syringe, 1],
        [item.chemicalcomponent, 1],
        [item.mushroom2, 1],
        [item.mushroom3, 1],
        [item.ghoulblood, 1]
    ], 1, [
        [AREAS.agitator, 30000]
    ], 10),
    mnw: 40,     
    stack: 5,
    loot: Mv.ghouldrug,
    wait: 10
}, {
    id: item.mushroom,
    img: {
        src: ["img/inv-mushroom1-out.png", "img/inv-mushroom1-in.png", "img/inv-mushroom1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Amanita", "Poisoned, really dangerous"),
    stack: 20,
    loot: Mv.mushroom,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottenmushroom1,
    mnw: 41,     
    mW: 24
}, {
    id: item.mushroom2,
    img: {
        src: ["img/inv-mushroom2-out.png", "img/inv-mushroom2-in.png", "img/inv-mushroom2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Boletus", "Can be eaten."),
    stack: 20,
    loot: Mv.mushroom2,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottenmushroom2,
    mnw: 42,     
    mW: 24
}, {
    id: item.mushroom3,
    img: {
        src: ["img/inv-mushroom3-out.png", "img/inv-mushroom3-in.png", "img/inv-mushroom3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Russula", "Can be eaten."),
    stack: 20,
    loot: Mv.mushroom3,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottenmushroom3,
    mnw: 43,     
    mW: 24
}, {
    id: item.rottenmushroom1,
    img: {
        src: ["img/inv-rotten-mushroom1-out.png", "img/inv-rotten-mushroom1-in.png", "img/inv-rotten-mushroom1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
    stack: 20,
    loot: Mv.rottenmushroom1,
    wait: 5,
    mnw: 44,     
    mW: 20
}, {
    id: item.rottenmushroom2,
    img: {
        src: ["img/inv-rotten-mushroom2-out.png", "img/inv-rotten-mushroom2-in.png", "img/inv-rotten-mushroom2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
    stack: 20,
    loot: Mv.rottenmushroom2,
    wait: 5,
    mnw: 45,     
    mW: 20
}, {
    id: item.rottenmushroom3,
    img: {
        src: ["img/inv-rotten-mushroom3-out.png", "img/inv-rotten-mushroom3-in.png", "img/inv-rotten-mushroom3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
    stack: 20,
    loot: Mv.rottenmushroom3,
    wait: 5,
    mnw: 46,     
    mW: 20
}, {
    id: item.lapadoine,
    img: {
        src: ["img/inv-lapadoine-out.png", "img/inv-lapadoine-in.png", "img/inv-lapadoine-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Lapadone", "You are faster a certain time.", SKILLS.__DRUG__, [
        [item.syringe, 1],
        [item.chemicalcomponent, 1],
        [item.mushroom, 1],
        [item.ghoulblood, 1]
    ], 1, [
        [AREAS.agitator, 45000]
    ], 14),
    mnw: 47,     
    stack: 5,
    loot: Mv.lapadoine,
    wait: 10
}, {
    id: item.lapabot,
    img: {
        src: ["img/inv-lapabot-out.png", "img/inv-lapabot-in.png", "img/inv-lapabot-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("LapaBot", "Repair your base for you", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 6],
        [item.electronicpart, 1],
        [item.smallwire, 1],
        [item.alloys, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 8),
    stack: 5,
    loot: Mv.lapabot,
    MmwnN: Mv.tomato,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/clear-blue-lapabot.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-lapabot.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__AI_CONSTRUCTOR__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nMnNW,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/lapabot0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/lapabot1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/lapabot2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/lapabot3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/lapabot4.png",
        W: {
            m: 0
        }
    }],
    WnVMV: {
        src: "img/day-lapabot-builder.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 250,
    mW: 0,
    nMnVw: 315360000000,
    vvMMW: AIID.__LAPABOT_REPAIR__,
    vMvvV: 20000,
    mmNMn: 4,
    VVvmM: 1
}, {
    id: item.smallwire,
    img: {
        src: ["img/inv-small-wire-out.png", "img/inv-small-wire-in.png", "img/inv-small-wire-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Small Wire", "Find it on TV's and computers in abandonned houses"),
    stack: 255,
    loot: Mv.smallwire,
    mW: 40
}, {
    id: item.pumpkin,
    img: {
        src: ["img/inv-pumpkin-out.png", "img/inv-pumpkin-in.png", "img/inv-pumpkin-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Pumpkin", "Eat it or craft a pumpkin ghoul"),
    stack: 20,
    loot: Mv.pumpkin,
    wait: 5,
    vWVMV: 10,
    nNmmM: item.rottenpumpkin,
    mnw: 48,     
    mW: 24
}, {
    id: item.rottenpumpkin,
    img: {
        src: ["img/inv-rotten-pumpkin-out.png", "img/inv-rotten-pumpkin-in.png", "img/inv-rotten-pumpkin-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Pumpkin", "You should not click"),
    stack: 20,
    loot: Mv.rottenpumpkin,
    wait: 5,
    mnw: 49,     
    mW: 20
}, {
    id: item.ghoulseed,
    img: {
        src: ["img/inv-ghoul5-out.png", "img/inv-ghoul5-in.png", "img/inv-ghoul5-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Ghoul Seed", "Plant your pumpkin pet", -1, [
        [item.pumpkin, 1],
        [item.ghoulblood, 1]
    ], 1, [
        [AREAS.firepart, 30000],
        [AREAS.bbq, 20000]
    ], 99),
    stack: 40,
    loot: Mv.ghoulseed,
    MmwnN: Mv.tomato,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/clear-blue-root.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-root.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__AI_CONSTRUCTOR__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.MWnVn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: [{
        src: "img/day-root0-ghoul.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-root1-ghoul.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-root2-ghoul.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-root3-ghoul.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-root4-ghoul.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.orange,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 250,
    mW: 0,
    nMnVw: 120000,
    vvMMW: AIID.__PUMPKIN_GHOUL__,
    vMvvV: 15000,
    mmNMn: 3,
    VVvmM: 0
}, {
    id: item.extractor,
    img: {
        src: ["img/inv-extractor-out.png", "img/inv-extractor-in.png", "img/inv-extractor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Extractor", "Allows you to extract minerals from the ground", SKILLS.__SURVIVAL__, [
        [item.alloys, 2],
        [item.shapedmetal, 10],
        [item.shapeduranium, 2],
        [item.smallwire, 2],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 12),
    mnw: 21,     
    MNM: 740000,
    WvV: 0,
    z: 1,
    MWW: AREAS.extractor,
    stack: 255,
    loot: Mv.extractor,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-extractor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-extractor.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.vwMnv,
    NnN: 16,
    wwN: {
        src: "img/e-extractor.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-extractor.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-extractor-rotate.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-extractor-off.png",
        W: {
            m: 0
        }
    }],
    NmVwM: [
        [0, 0],
        [0, 0],
        [0, 0],
        [0, 0]
    ],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 500,
    mW: 0
}, {
    id: item.antidote,
    img: {
        src: ["img/inv-antidote-out.png", "img/inv-antidote-in.png", "img/inv-antidote-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Antidote", "Remove the withdrawal effects (pink skin)", SKILLS.__DRUG__, [
        [item.syringe, 1],
        [item.chemicalcomponent, 1],
        [item.mushroom, 1],
        [item.antidoteflower, 1]
    ], 1, [
        [AREAS.agitator, 45000]
    ], 14),
    mnw: 50,     
    stack: 5,
    loot: Mv.antidote,
    wait: 10
}, {
    id: item.antidoteflower,
    img: {
        src: ["img/inv-antidote-flower-out.png", "img/inv-antidote-flower-in.png", "img/inv-antidote-flower-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rare Flower", "Use it to make an antidote"),
    stack: 5,
    loot: Mv.antidoteflower,
    mW: 400
}, {
    id: item.treeseed,
    img: {
        src: ["img/inv-seed-tree-out.png", "img/inv-seed-tree-in.png", "img/inv-seed-tree-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tree Seed", "Plant your forest", SKILLS.__PLANT__, [
        [item.acorn, 1]
    ], 5, [
        [AREAS.firepart, 60000],
        [AREAS.bbq, 40000]
    ]),
    stack: 100,
    loot: Mv.treeseed,
    MmwnN: Mv.orange,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/clear-blue-plant-tree.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-plant-tree.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__SEED_RESOURCE__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.NMVvM,
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    Nn: [{
        src: "img/day-plant-tree0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant-tree1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant-tree2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant-tree3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-plant4-orange.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.wood,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 150,
    mW: 0
}, {
    id: item.acorn,
    img: {
        src: ["img/inv-acorn-out.png", "img/inv-acorn-in.png", "img/inv-acorn-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Acorn", "Eat it or plant a tree"),
    stack: 20,
    loot: Mv.acorn,
    wait: 5,
    vWVMV: 3,
    nNmmM: item.rottenacorn,
    mnw: 51,     
    mW: 24
}, {
    id: item.rottenacorn,
    img: {
        src: ["img/inv-rotten-acorn-out.png", "img/inv-rotten-acorn-in.png", "img/inv-rotten-acorn-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Rotten Acorn", "Not really good"),
    stack: 20,
    loot: Mv.rottenacorn,
    wait: 5,
    mnw: 52,     
    mW: 20
}, {
    id: item.lasersniper,
    img: {
        src: ["img/inv-laser-sniper-out.png", "img/inv-laser-sniper-in.png", "img/inv-laser-sniper-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Laser Sniper", "Faster than a sniper", SKILLS.__WEAPON__, [
        [item.alloys, 8],
        [item.shapedmetal, 6],
        [item.shapeduranium, 5],
        [item.wires, 3],
        [item.electronicpart, 3]
    ], 1, [
        [AREAS.teslabench, 180000]
    ], 14, item.laserpistol, 2),
    mnw: 53,     
    vMv: item.energycell,
    stack: 1,
    loot: Mv.lasersniper,
    wait: 10
}, {
    id: item.halbot,
    img: {
        src: ["img/inv-hal-bot-out.png", "img/inv-hal-bot-in.png", "img/inv-hal-bot-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("HAL Bot", "Protect you", SKILLS.__SURVIVAL__, [
        [item.shapedmetal, 6],
        [item.electronicpart, 1],
        [item.smallwire, 1],
        [item.alloys, 1]
    ], 1, [
        [AREAS.researchbench, 100000]
    ], 8),
    stack: 5,
    loot: Mv.halbot,
    MmwnN: Mv.tomato,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/clear-blue-hal-bot.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-hal-bot.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__AI_CONSTRUCTOR__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nMnNW,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/hal-bot0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/hal-bot1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/hal-bot2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/hal-bot3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/hal-bot4.png",
        W: {
            m: 0
        }
    }],
    WnVMV: {
        src: "img/day-hal-bot-builder.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 400,
    mW: 0,
    nMnVw: 315360000000,
    vvMMW: AIID.__HAL_BOT__,
    vMvvV: 8000,
    mmNMn: 4,
    VVvmM: 1
}, {
    id: item.teslabot,
    img: {
        src: ["img/inv-tesla-bot-out.png", "img/inv-tesla-bot-in.png", "img/inv-tesla-bot-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Tesla Bot", "Protect you", SKILLS.__SURVIVAL__, [
        [item.shapeduranium, 3],
        [item.electronicpart, 1],
        [item.smallwire, 3],
        [item.wires, 3],
        [item.alloys, 3]
    ], 1, [
        [AREAS.teslabench, 200000]
    ], 16),
    stack: 5,
    loot: Mv.teslabot,
    MmwnN: Mv.tomato,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [30, 30, 30, 30],
    height: [30, 30, 30, 30],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [35, 35, 35, 35],
    inmapy: [35, 35, 35, 35],
    putableimg: {
        src: "img/clear-blue-tesla-bot.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-tesla-bot.png",
        W: {
            m: 0
        }
    },
    WNv: 0,
    mwM: 0,
    behavior: BEHAVIOR.__AI_CONSTRUCTOR__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nMnNW,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/tesla-bot0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/tesla-bot1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/tesla-bot2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/tesla-bot3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/tesla-bot4.png",
        W: {
            m: 0
        }
    }],
    WnVMV: {
        src: "img/day-lapabot-builder.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 68,
    WmW: ((5 * 8) * 60) * 1000,
    health: 500,
    mW: 0,
    nMnVw: 315360000000,
    vvMMW: AIID.__TESLA_BOT__,
    vMvvV: 20000,
    mmNMn: 4,
    VVvmM: 1
}, {
    id: item.cable,
    img: {
        src: ["img/inv-wire0-out.png", "img/inv-wire0-in.png", "img/inv-wire0-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable", "Create automatic mechanisms", SKILLS.__LOGIC__, [
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.cable,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wire0.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wire0.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [1, 1, 0, 0],
        [0, 0, 1, 1],
        [1, 1, 0, 0],
        [0, 0, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-wire0.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.barrel,
    Mwm: 40,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.cable2,
    img: {
        src: ["img/inv-wire1-out.png", "img/inv-wire1-in.png", "img/inv-wire1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable", "Create automatic mechanisms", SKILLS.__LOGIC__, [
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.cable2,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wire1.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wire1.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-wire1.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.barrel,
    Mwm: 40,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.cable3,
    img: {
        src: ["img/inv-wire2-out.png", "img/inv-wire2-in.png", "img/inv-wire2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable", "Create automatic mechanisms", SKILLS.__LOGIC__, [
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.cable3,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wire2.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wire2.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [0, 1, 0, 1],
        [0, 1, 1, 0],
        [1, 0, 1, 0],
        [1, 0, 0, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-wire2.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.barrel,
    Mwm: 40,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.cable4,
    img: {
        src: ["img/inv-wire3-out.png", "img/inv-wire3-in.png", "img/inv-wire3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable", "Create automatic mechanisms", SKILLS.__LOGIC__, [
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.cable4,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wire3.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wire3.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [0, 1, 1, 1],
        [1, 1, 1, 0],
        [1, 0, 1, 1],
        [1, 1, 0, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-wire3.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.barrel,
    Mwm: 40,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.switch,
    img: {
        src: ["img/inv-switch-out.png", "img/inv-switch-in.png", "img/inv-switch-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Switch", "Turn on/off mechanisms", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.switch,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-switch.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-switch.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.mvVVM,
    NnN: 37,
    wwN: {
        src: "img/e-turnon.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-switch-off.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-switch-on.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.orgate,
    img: {
        src: ["img/inv-switch-or-out.png", "img/inv-switch-or-in.png", "img/inv-switch-or-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gate OR", "Activate only if an entry is on.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.orgate,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-switch-or.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-switch-or.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 0, 0, 0],
        [0, 0, 0, 1],
        [0, 1, 0, 0],
        [0, 0, 1, 0]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-switch-or.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.andgate,
    img: {
        src: ["img/inv-switch-and-out.png", "img/inv-switch-and-in.png", "img/inv-switch-and-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gate AND", "Activate only if all entries are on.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.andgate,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-switch-and.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-switch-and.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 0, 0, 0],
        [0, 0, 0, 1],
        [0, 1, 0, 0],
        [0, 0, 1, 0]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-switch-and.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.notgate,
    img: {
        src: ["img/inv-switch-reverse-out.png", "img/inv-switch-reverse-in.png", "img/inv-switch-reverse-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gate NOT", "Activate only if no entry is on.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.notgate,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-switch-reverse.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-switch-reverse.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 0, 1, 1],
        [1, 1, 0, 1],
        [0, 1, 1, 1],
        [1, 1, 1, 0]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-switch-reverse.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.lamp,
    img: {
        src: ["img/inv-lamp-white-out.png", "img/inv-lamp-white-in.png", "img/inv-lamp-white-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Lamp", "Turn on when connected, damage ghoul", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.lamp,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-lamp.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-lamp.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 2,
    wwW: 22,
    WnW: 0,
    draw: Render.vnVwv,
    VvmvM: Render.mVwvv,
    NnN: 36,
    wwN: {
        src: "img/e-light.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-lamp-off.png",
        W: {
            m: 0
        }
    },
    wVnWm: [{
        src: "img/day-lamp-white.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-yellow.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-green.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-clear-blue.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-purple.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-pink.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-orange.png",
        W: {
            m: 0
        }
    }],
    MwmWn: [{
        src: "img/day-lamp-light-white.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-yellow.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-green.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-clear-blue.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-purple.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-pink.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-lamp-light-orange.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 600,
    mW: 0
}, {
    id: item.cablewall,
    img: {
        src: ["img/inv-cable-wall-out.png", "img/inv-cable-wall-in.png", "img/inv-cable-wall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable  - Wall", "Wall that can be connected to a cable", SKILLS.__LOGIC__, [
        [item.shapedmetal, 8],
        [item.smallwire, 1]
    ], 1, [
        [AREAS.weldingmachine, 15000]
    ], 7),
    stack: 255,
    loot: Mv.cablewall,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-cable-wall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-cable-wall.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [1, 1, 0, 0],
        [0, 0, 1, 1],
        [1, 1, 0, 0],
        [0, 0, 1, 1]
    ],
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.VWWwm,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-cable-wall.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-cable-wall1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-cable-wall2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-cable-wall3.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 40,
    WmW: 315360000000,
    health: 15000,
    mW: 0
}, {
    id: item.autodoor,
    img: {
        src: ["img/inv-automatic-door-out.png", "img/inv-automatic-door-in.png", "img/inv-automatic-door-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Automatic Door", "Connect it to a switch to open and close it.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 8],
        [item.smallwire, 2],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.weldingmachine, 15000]
    ], 7),
    stack: 255,
    loot: Mv.autodoor,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-automatic-door.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-automatic-door.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [0, 1, 1, 1],
        [1, 1, 1, 0],
        [1, 0, 1, 1],
        [1, 1, 0, 1]
    ],
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.WvNvn,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [
        [{
            src: "img/day-automatic-door-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door1-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door2-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door3-off.png",
            W: {
                m: 0
            }
        }],
        [{
            src: "img/day-automatic-door-on.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door1-on.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door2-on.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-automatic-door3-on.png",
            W: {
                m: 0
            }
        }]
    ],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 15000,
    mW: 0
}, {
    id: item.platform,
    img: {
        src: ["img/inv-platform-out.png", "img/inv-platform-in.png", "img/inv-platform-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Platform", "Weight detector", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.platform,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-platform-off.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-platform-off.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.mvWww,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-platform-off.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.fridge,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.stonecave,
    img: {
        src: ["img/inv-stone-cave-out.png", "img/inv-stone-cave-in.png", "img/inv-stone-cave-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Stone Cave", "Build mountains.", -1, [
        [item.stone, 140]
    ], 1, [
        [AREAS.workbench, 30000]
    ], 99),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.stonecave,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-stone-cave.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-stone-cave.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.stonecave,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.Mvw,
    MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WVW: [{
        src: "img/day-stone-cave-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.stone,
    destroyaudio: SOUNDID.stonedes,
    Nn: [{
        src: "img/day-stone-cave0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-stone-cave46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.stone,
    Mwm: 80,
    WmW: 315360000000,
    health: 300,
    mW: 0
}, {
    id: item.bunkerwall,
    img: {
        src: ["img/inv-bunker-wall-out.png", "img/inv-bunker-wall-in.png", "img/inv-bunker-wall-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Bunker Wall", "Good old memory of the wasteland.", -1, [
        [item.stone, 150],
        [item.shapedmetal, 12]
    ], 1, [
        [AREAS.workbench, 30000]
    ], 99),
    mnw: 21,     
    MNM: -1,
    WvV: 1,
    z: 1,
    stack: 255,
    loot: Mv.bunkerwall,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-bunker-wall.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-bunker-wall.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.stonecave,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.Mvw,
    MmvNw: [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    WVW: [{
        src: "img/day-bunker-wall-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-bunker-wall0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-bunker-wall46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.steel,
    Mwm: 80,
    WmW: 315360000000,
    health: 10000,
    mW: 0
}, {
    id: item.mustardfloor,
    img: {
        src: ["img/inv-mustard-floor-out.png", "img/inv-mustard-floor-in.png", "img/inv-mustard-floor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Golden Floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.leather, 2]
    ], 2, [
        [AREAS.workbench, 15000]
    ]),
    stack: 255,
    loot: Mv.mustardfloor,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.mustardfloor,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-mustard-floor-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.pillowdes,
    Nn: [{
        src: "img/day-mustard-floor-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-mustard-floor-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.gold,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.redfloor,
    img: {
        src: ["img/inv-red-floor-out.png", "img/inv-red-floor-in.png", "img/inv-red-floor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Red floor", "Players can't spawn on it", SKILLS.__BUILDING__, [
        [item.leather, 2]
    ], 2, [
        [AREAS.workbench, 15000]
    ]),
    stack: 255,
    loot: Mv.redfloor,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: 2,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/day-clear-blue-stone-floor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/day-redprint-stone-floor.png",
        W: {
            m: 0
        }
    },
    Mvw: 1,
    vVwVM: item.redfloor,
    VWN: 0,
    WNv: 0,
    Vvm: 1,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.nwVWW,
    WVW: [{
        src: "img/day-red-floor-broken0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-broken1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-broken2.png",
        W: {
            m: 0
        }
    }],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.pillowdes,
    Nn: [{
        src: "img/day-red-floor-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-9.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-10.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-11.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-12.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-13.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-14.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-15.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-16.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-17.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-18.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-19.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-20.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-21.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-22.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-23.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-24.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-25.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-26.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-27.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-28.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-29.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-30.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-31.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-32.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-33.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-34.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-35.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-36.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-37.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-38.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-39.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-40.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-41.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-42.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-43.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-44.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-45.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-red-floor-46.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.mushroom,
    Mwm: 80,
    WmW: 315360000000,
    health: 3000,
    mW: 0
}, {
    id: item.weldingmachine,
    img: {
        src: ["img/inv-welding-machine-out.png", "img/inv-welding-machine-in.png", "img/inv-welding-machine-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Welding Machine", "Allow you to make logic gates", SKILLS.__SURVIVAL__, [
        [item.junk, 2],
        [item.shapedmetal, 4],
        [item.electronicpart, 1]
    ], 1, [
        [AREAS.workbench, 50000]
    ]),
    mnw: 21,     
    MNM: -1,
    WvV: 0,
    z: 1,
    MWW: AREAS.weldingmachine,
    stack: 255,
    loot: Mv.weldingmachine,
    wait: 10,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-welding-machine.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-welding-machine.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__NO__,
    MWv: 0,
    nvN: 0,
    MMN: 1,
    WnW: 0,
    draw: Render.FCWCcont,
    NnN: 16,
    wwN: {
        src: "img/e-welding-machine.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-welding-machine.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 500,
    mW: 0
}, {
    id: item.cable4,
    img: {
        src: ["img/inv-wire4-out.png", "img/inv-wire4-in.png", "img/inv-wire4-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Cable  - Bridge", "Create automatic mechanisms", SKILLS.__LOGIC__, [
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.cable4,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-wire4.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-wire4.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 0,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-wire4.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.barrel,
    Mwm: 40,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.timer,
    img: {
        src: ["img/inv-timer-out.png", "img/inv-timer-in.png", "img/inv-timer-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gate Timer", "Emit a signal regularly.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.timer,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-timer.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-timer.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1],
        [1, 1, 1, 1]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.Mvnmn,
    NnN: 38,
    wwN: {
        src: "img/e-light.png",
        W: {
            m: 0
        }
    },
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: [{
        src: "img/day-timer-0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-timer-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-timer-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-timer-3.png",
        W: {
            m: 0
        }
    }],
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
}, {
    id: item.xorgate,
    img: {
        src: ["img/inv-xor-out.png", "img/inv-xor-in.png", "img/inv-xor-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Gate Xor", "Activate only if only one entry is on.", SKILLS.__LOGIC__, [
        [item.shapedmetal, 1],
        [item.smallwire, 1]
    ], 3, [
        [AREAS.weldingmachine, 15000]
    ]),
    stack: 255,
    loot: Mv.xorgate,
    wait: 10,
    mnw: 21,     
    MNM: -1,
    WvV: -1,
    z: 0,
    mN: 1000,
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    Wwv: [0, 0, 0, 0],
    nWn: [0, 0, 0, 0],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    putableimg: {
        src: "img/clear-blue-xor.png",
        W: {
            m: 0
        }
    },
    notputableimg: {
        src: "img/redprint-xor.png",
        W: {
            m: 0
        }
    },
    Mvw: 0,
    VWN: 0,
    WNv: 0,
    Vvm: 0,
    mwM: 0,
    behavior: BEHAVIOR.__LOGIC__,
    mwv: 1,
    MWv: [
        [1, 0, 0, 0],
        [0, 0, 0, 1],
        [0, 1, 0, 0],
        [0, 0, 1, 0]
    ],
    nvN: 0,
    MMN: 0,
    WnW: 0,
    draw: Render.NnMNn,
    impactaudio: SOUNDID.metal,
    destroyaudio: SOUNDID.metaldes,
    Nn: {
        src: "img/day-xor.png",
        W: {
            m: 0
        }
    },
    NWm: particulesitems.metalpart,
    Mwm: 80,
    WmW: 315360000000,
    health: 250,
    mW: 0
},



{
    id: item.skilleye1,
    img: {
        src: ["img/skill-eye1-out.png", "img/skill-eye1-in.png", "img/skill-eye1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Vision 1", "Improve your vision", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 0),
    scale: -0.25
},

{
    id: item.skilleye2,
    img: {
        src: ["img/skill-eye2-out.png", "img/skill-eye2-in.png", "img/skill-eye2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Vision 2", "Improve your vision", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 5, item.skilleye1),
    scale: -0.35
},

{
    id: item.skilleye3,
    img: {
        src: ["img/skill-eye3-out.png", "img/skill-eye3-in.png", "img/skill-eye3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Vision 3", "Improve your vision", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 7, item.skilleye2),
    scale: -0.45
},


{
    id: item.builderskill1,
    img: {
        src: ["img/skill-builder1-out.png", "img/skill-builder1-in.png", "img/skill-builder1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Builder 1", "Multiplies some craft by two", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 6, window.undefined, 2)
}, {
    id: item.builderskill2,
    img: {
        src: ["img/skill-builder2-out.png", "img/skill-builder2-in.png", "img/skill-builder2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Builder 2", "Repair much faster", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 18, item.builderskill1)
},



{
    id: item.inventoryskill1,
    img: {
        src: ["img/skill-inv1-out.png", "img/skill-inv1-in.png", "img/skill-inv1-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Inventory 1", "Add a slot in your inventory", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 0),
    vvmNV: 1
},

{
    id: item.inventoryskill2,
    img: {
        src: ["img/skill-inv2-out.png", "img/skill-inv2-in.png", "img/skill-inv2-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Inventory 2", "Add a slot in your inventory", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 5, item.inventoryskill1),
    vvmNV: 1
},

{
    id: item.inventoryskill3,
    img: {
        src: ["img/skill-inv3-out.png", "img/skill-inv3-in.png", "img/skill-inv3-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Inventory 3", "Add a slot in your bag", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 7, item.inventoryskill2),
    vvmNV: 1
},

{
    id: item.inventoryskill4,
    img: {
        src: ["img/skill-inv4-out.png", "img/skill-inv4-in.png", "img/skill-inv4-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Inventory 4", "Add two slots in your bag", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 10, item.inventoryskill3, 2),
    vvmNV: 2
},

{
    id: item.inventoryskill5,
    img: {
        src: ["img/skill-inv5-out.png", "img/skill-inv5-in.png", "img/skill-inv5-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Inventory 5", "Add three slots in your bag", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 12, item.inventoryskill4, 3),
    vvmNV: 3
},



    
{
    id: item.lightweightskill,
    img: {
        src: ["img/skill-lightweight-out.png", "img/skill-lightweight-in.png", "img/skill-lightweight-click.png"],
        W: [{
            m: 0
        }, {
            m: 0
        }, {
            m: 0
        }]
    },
    detail: new vn("Light Weight", "Less likely to trigger traps.", SKILLS.__SKILL__, window.undefined, window.undefined, window.undefined, 8)
}];
COUNTER = 0;
var nW = {
    sofapart: COUNTER++,
    sofapart2: COUNTER++,
    sofapart3: COUNTER++,
    WwvNW: COUNTER++,
    NWNnm: COUNTER++,
    bedpart: COUNTER++,
    bedpart2: COUNTER++,
    vWVWW: COUNTER++,
    textnumberitem: COUNTER++,
    WNVMm: COUNTER++,
    NvWVV: COUNTER++,
    NMvVn: COUNTER++,
    VWw: COUNTER++,
    MVvwm: COUNTER++,
    mmV: COUNTER++,
    wwVWW: COUNTER++,
    NwvnV: COUNTER++,
    vWwVv: COUNTER++,
    safepart: COUNTER++,
    vwNWV: COUNTER++,
    wnMNM: COUNTER++,
    WNWVm: COUNTER++,
    nWwvV: COUNTER++,
    MnWmv: COUNTER++,
    vVV: COUNTER++,
    vMw: COUNTER++,
    garbagepart: COUNTER++,
    mmwVV: COUNTER++,
    VVvnV: COUNTER++,
    nnMmW: COUNTER++,
    MNmWW: COUNTER++,
    NnwvW: COUNTER++,
    Vnwmv: COUNTER++,
    mmmwn: COUNTER++,
    nNnVv: COUNTER++,
    nnM: COUNTER++,
    NvmwW: COUNTER++,
    vwmnW: COUNTER++,
    nmWMm: COUNTER++,
    wNmMv: COUNTER++,
    vWwmV: COUNTER++,
    NNvnv: COUNTER++,
    vNWWv: COUNTER++,
    VWnwN: COUNTER++,
    NWwwM: COUNTER++,
    NMWVV: COUNTER++,
    WVWWM: COUNTER++,
    wVmWM: COUNTER++,
    WmNvV: COUNTER++,
    WmmNw: COUNTER++,
    Mmvmn: COUNTER++,
    VwWNv: COUNTER++,
    NwwNM: COUNTER++,
    NvVmW: COUNTER++,
    MMmnW: COUNTER++,
    nWNnm: COUNTER++,
    nVwnn: COUNTER++,
    VmNVm: COUNTER++,
    NVwVM: COUNTER++
};
COUNTER = 0;
var MwmnM = items[item.NvMvM].nvN;
MwmnM[COUNTER] = {
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    Nn: {
        src: "img/day-road0.png",
        W: {
            m: 0
        }
    },
    detail: new vn("", "", -1, [
        [item.stone, 100]
    ]),
    health: 100000000,
    mW: 0,
    NWm: particulesitems.woodtree,
    Mwm: 70,
    angle: window.Math.PI,
    WvwVM: 0,
    VVmmM: 0,
    loot: null,
    MMN: 0,
    z: 0,
    WvV: 2,
    WnW: 0,
    WmW: 315360000000
};
for (var i = 0; i < 45; i++) {
    COUNTER++;
    MwmnM[COUNTER] = window.JSON.parse(window.JSON.stringify(MwmnM[0]));
    MwmnM[COUNTER].Nn.src = ("img/day-road" + COUNTER) + ".png";
}
var VV = items[item.MMnVW].nvN;
VV[nW.sofapart] = {
    width: [100, 100, 100, 100],
    height: [100, 100, 100, 100],
    inmapx: [0, 0, 0, 0],
    inmapy: [0, 0, 0, 0],
    impactaudio: SOUNDID.pillow,
    destroyaudio: SOUNDID.pillowdes,
    Nn: {
        src: "img/day-sofa0.png",
        W: {
            m: 0
        }
    },
    detail: new vn("", "", -1, [
        [item.wood, 99],
        [item.leather, 9],
        [item.string, 6]
    ]),
    health: 450,
    mW: 0,
    NWm: particulesitems.sofapart,
    Mwm: 70,
    angle: window.Math.PI,
    WvwVM: 0,
    VVmmM: 0,
    loot: null,
    MMN: 1,
    z: 1,
    WvV: 0,
    WnW: 0,
    NnN: 25,
    mwM: 0,
    damage: 0,
    WWv: 0,
    WmW: 315360000000
};
VV[nW.sofapart2] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.sofapart2].Nn.src = "img/day-sofa1.png";
VV[nW.sofapart2].NWm = particulesitems.sofapart2;
VV[nW.sofapart3] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart2]));
VV[nW.sofapart3].Nn.src = "img/day-sofa2.png";
VV[nW.WwvNW] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.WwvNW].Nn.src = "img/day-sofa3.png";
VV[nW.WwvNW].NWm = particulesitems.sofapart3;
VV[nW.NWNnm] = window.JSON.parse(window.JSON.stringify(VV[nW.WwvNW]));
VV[nW.NWNnm].Nn.src = "img/day-sofa4.png";
VV[nW.vNWWv] = window.JSON.parse(window.JSON.stringify(VV[nW.WwvNW]));
VV[nW.vNWWv].Nn.src = "img/day-sofa6.png";
VV[nW.NNvnv] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.NNvnv].Nn.src = "img/day-renforced-door.png";
VV[nW.NNvnv].NWm = particulesitems.steel;
VV[nW.NNvnv].detail = new vn("", "", -1, [
    [item.shapedmetal, 40]
]);
VV[nW.NNvnv].health = 7000;
VV[nW.mmmwn] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.mmmwn].Nn.src = "img/day-electronic-box0.png";
VV[nW.mmmwn].impactaudio = SOUNDID.metal;
VV[nW.mmmwn].destroyaudio = SOUNDID.metaldes;
VV[nW.mmmwn].NWm = particulesitems.steel;
VV[nW.mmmwn].detail = new vn("", "", -1, [
    [item.energycell, 8],
    [item.electronicpart, 4],
    [item.shapedmetal, 4],
    [item.junk, 12]
]);
VV[nW.mmmwn].width = [100, 100, 100, 100];
VV[nW.mmmwn].height = [100, 100, 100, 100];
VV[nW.mmmwn].inmapx = [0, 0, 0, 0];
VV[nW.mmmwn].inmapy = [0, 0, 0, 0];
VV[nW.mmmwn].health = 800;
VV[nW.nNnVv] = window.JSON.parse(window.JSON.stringify(VV[nW.mmmwn]));
VV[nW.nNnVv].Nn.src = "img/day-electronic-box1.png";
VV[nW.nNnVv].width = [120, 120, 120, 120];
VV[nW.nNnVv].height = [120, 120, 120, 120];
VV[nW.nNnVv].inmapx = [-10, -10, -10, -10];
VV[nW.nNnVv].inmapy = [-10, -10, -10, -10];
VV[nW.nNnVv].detail = new vn("", "", -1, [
    [item.energycell, 16],
    [item.electronicpart, 16],
    [item.wires, 8],
    [item.shapedmetal, 16]
]);
VV[nW.nNnVv].health = 1400;
VV[nW.bedpart] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.bedpart].Nn.src = "img/day-bed0.png";
VV[nW.bedpart].NWm = particulesitems.bedpart;
VV[nW.bedpart].detail = new vn("", "", -1, [
    [item.wood, 200],
    [item.leather, 20]
]);
VV[nW.bedpart2] = window.JSON.parse(window.JSON.stringify(VV[nW.bedpart]));
VV[nW.bedpart2].Nn.src = "img/day-bed1.png";
VV[nW.bedpart2].NWm = particulesitems.bedpart2;
VV[nW.WmNvV] = window.JSON.parse(window.JSON.stringify(VV[nW.bedpart]));
VV[nW.WmNvV].Nn.src = "img/day-bed2.png";
VV[nW.WmNvV].NWm = particulesitems.greysteelpart;
VV[nW.WmNvV].detail = new vn("", "", -1, [
    [item.shapedmetal, 12],
    [item.leather, 20],
    [item.animalfat, 12]
]);
VV[nW.vWVWW] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.vWVWW].Nn.src = "img/day-table0.png";
VV[nW.vWVWW].impactaudio = SOUNDID.wood;
VV[nW.vWVWW].destroyaudio = SOUNDID.wooddes;
VV[nW.vWVWW].NWm = particulesitems.wood;
VV[nW.vWVWW].detail = new vn("", "", -1, [
    [item.wood, 200]
]);
VV[nW.WVWWM] = window.JSON.parse(window.JSON.stringify(VV[nW.vWVWW]));
VV[nW.WVWWM].Nn.src = "img/day-table1.png";
VV[nW.WVWWM].width = [100, 290, 100, 280];
VV[nW.WVWWM].height = [280, 100, 280, 100];
VV[nW.WVWWM].MMnVm = [-1, 0, -1, 0];
VV[nW.WVWWM].nmMVw = [0, -1, 0, -1];
VV[nW.WVWWM].inmapx = [0, -90, 0, -90];
VV[nW.WVWWM].inmapy = [-90, 0, -90, 0];
VV[nW.nVwnn] = window.JSON.parse(window.JSON.stringify(VV[nW.vWVWW]));
VV[nW.nVwnn].Nn.src = "img/day-table2.png";
VV[nW.nVwnn].impactaudio = SOUNDID.metal;
VV[nW.nVwnn].destroyaudio = SOUNDID.metaldes;
VV[nW.nVwnn].NWm = particulesitems.steel;
VV[nW.nVwnn].detail = new vn("", "", -1, [
    [item.shapedmetal, 8]
]);
VV[nW.textnumberitem] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.textnumberitem].Nn.src = "img/day-tv0.png";
VV[nW.textnumberitem].impactaudio = SOUNDID.metal;
VV[nW.textnumberitem].destroyaudio = SOUNDID.metaldes;
VV[nW.textnumberitem].NWm = particulesitems.safepart;
VV[nW.textnumberitem].detail = new vn("", "", -1, [
    [item.electronicpart, 4],
    [item.shapedmetal, 16],
    [item.smallwire, 4],
    [item.junk, 12]
]);
VV[nW.WNVMm] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.WNVMm].Nn.src = "img/day-computer0.png";
VV[nW.WNVMm].impactaudio = SOUNDID.metal;
VV[nW.WNVMm].destroyaudio = SOUNDID.metaldes;
VV[nW.WNVMm].NWm = particulesitems.metalpart;
VV[nW.WNVMm].detail = new vn("", "", -1, [
    [item.smallwire, 4],
    [item.shapedmetal, 16],
    [item.junk, 12],
    [item.electronicpart, 4]
]);
VV[nW.NvWVV] = window.JSON.parse(window.JSON.stringify(VV[nW.WNVMm]));
VV[nW.NvWVV].Nn.src = "img/day-chair0.png";
VV[nW.NvWVV].detail = new vn("", "", -1, [
    [item.leather, 8],
    [item.shapedmetal, 8]
]);
VV[nW.NwwNM] = window.JSON.parse(window.JSON.stringify(VV[nW.WNVMm]));
VV[nW.NwwNM].Nn.src = "img/day-chair1.png";
VV[nW.NwwNM].detail = new vn("", "", -1, [
    [item.leather, 8],
    [item.shapedmetal, 8]
]);
VV[nW.NvVmW] = window.JSON.parse(window.JSON.stringify(VV[nW.WNVMm]));
VV[nW.NvVmW].Nn.src = "img/day-chair2.png";
VV[nW.NvVmW].detail = new vn("", "", -1, [
    [item.leather, 8],
    [item.shapedmetal, 8]
]);
VV[nW.NMvVn] = window.JSON.parse(window.JSON.stringify(VV[nW.sofapart]));
VV[nW.NMvVn].Nn.src = "img/day-washbasin0.png";
VV[nW.NMvVn].impactaudio = SOUNDID.wood;
VV[nW.NMvVn].destroyaudio = SOUNDID.wooddes;
VV[nW.NMvVn].NWm = particulesitems.woodpart;
VV[nW.NMvVn].detail = new vn("", "", -1, [
    [item.wood, 150],
    [item.shapedmetal, 8]
]);
VV[nW.VVvnV] = window.JSON.parse(window.JSON.stringify(VV[nW.NMvVn]));
VV[nW.VVvnV].Nn.src = "img/day-pharma0.png";
VV[nW.VVvnV].detail = new vn("", "", -1, [
    [item.shapedmetal, 8],
    [item.stone, 60]
]);
VV[nW.VVvnV].impactaudio = SOUNDID.stone;
VV[nW.VVvnV].destroyaudio = SOUNDID.stonedes;
VV[nW.VVvnV].NWm = particulesitems.toilet;
VV[nW.VVvnV].WvwVM = 1;
VV[nW.VVvnV].loot = [
    [item.bandage, 1, 0.1],
    [item.medkit, 1, 0.03],
    [item.radway, 1, 0.05],
    [item.chemicalcomponent, 2, 0.2],
    [item.syringe, 1, 0.1]
];
VV[nW.nWNnm] = window.JSON.parse(window.JSON.stringify(VV[nW.NMvVn]));
VV[nW.nWNnm].Nn.src = "img/day-shower0.png";
VV[nW.nWNnm].detail = new vn("", "", -1, [
    [item.shapedmetal, 8],
    [item.stone, 60]
]);
VV[nW.nWNnm].impactaudio = SOUNDID.stone;
VV[nW.nWNnm].destroyaudio = SOUNDID.stonedes;
VV[nW.nWNnm].NWm = particulesitems.toilet;
VV[nW.nWNnm].width = [70, 100, 70, 100];
VV[nW.nWNnm].height = [100, 70, 100, 70];
VV[nW.nWNnm].inmapx = [0, 0, 30, 0];
VV[nW.nWNnm].inmapy = [0, 0, 0, 30];
VV[nW.VWw] = window.JSON.parse(window.JSON.stringify(VV[nW.NMvVn]));
VV[nW.VWw].Nn.src = "img/day-furniture0.png";
VV[nW.VWw].width = [50, 100, 50, 100];
VV[nW.VWw].height = [100, 50, 100, 50];
VV[nW.VWw].inmapx = [0, 0, 50, 0];
VV[nW.VWw].inmapy = [0, 0, 0, 50];
VV[nW.VWw].detail = new vn("", "", -1, [
    [item.wood, 200]
]);
VV[nW.VWw].WvwVM = 1;
VV[nW.VWw].loot = [
    [item.headscarf, 1, 0.004],
    [item.gazmask, 1, 0.004],
    [item.pistol, 1, 0.005],
    [item.bullet9mm, 30, 0.02],
    [item.bandage, 1, 0.05],
    [item.tomatoseed, 1, 0.08],
    [item.nails, 40, 0.1],
    [item.seedorange, 2, 0.1],
    [item.sleepingbag, 1, 0.01],
    [item.energycell, 4, 0.05],
    [item.junk, 1, 0.2],
    [item.string, 2, 0.1]
];
VV[nW.MVvwm] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.MVvwm].Nn.src = "img/day-furniture1.png";
VV[nW.MVvwm].width = [70, 100, 70, 100];
VV[nW.MVvwm].height = [100, 70, 100, 70];
VV[nW.MVvwm].inmapx = [0, 0, 30, 0];
VV[nW.MVvwm].inmapy = [0, 0, 0, 30];
VV[nW.mmV] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.mmV].Nn.src = "img/day-furniture2.png";
VV[nW.mmV].width = [70, 70, 70, 70];
VV[nW.mmV].height = [70, 70, 70, 70];
VV[nW.mmV].inmapx = [15, 15, 15, 15];
VV[nW.mmV].inmapy = [15, 15, 15, 15];
VV[nW.mmV].detail = new vn("", "", -1, [
    [item.wood, 100]
]);
VV[nW.wwVWW] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.wwVWW].Nn.src = "img/day-furniture3.png";
VV[nW.WmmNw] = window.JSON.parse(window.JSON.stringify(VV[nW.MVvwm]));
VV[nW.WmmNw].Nn.src = "img/day-furniture4.png";
VV[nW.WmmNw].impactaudio = SOUNDID.metal;
VV[nW.WmmNw].destroyaudio = SOUNDID.metaldes;
VV[nW.WmmNw].NWm = particulesitems.greysteelpart;
VV[nW.WmmNw].loot = [
    [item.headscarf, 1, 0.004],
    [item.gazmask, 1, 0.004],
    [item.pistol, 1, 0.005],
    [item.bullet9mm, 30, 0.02],
    [item.bandage, 1, 0.05],
    [item.smallwire, 4, 0.1],
    [item.lamp, 1, 0.08],
    [item.platform, 1, 0.08],
    [item.sleepingbag, 1, 0.01],
    [item.energycell, 8, 0.05],
    [item.junk, 2, 0.2],
    [item.string, 2, 0.1]
];
VV[nW.Mmvmn] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.Mmvmn].Nn.src = "img/day-furniture5.png";
VV[nW.Mmvmn].impactaudio = SOUNDID.metal;
VV[nW.Mmvmn].destroyaudio = SOUNDID.metaldes;
VV[nW.Mmvmn].NWm = particulesitems.greysteelpart;
VV[nW.Mmvmn].loot = window.JSON.parse(window.JSON.stringify(VV[nW.WmmNw].loot));
VV[nW.VwWNv] = window.JSON.parse(window.JSON.stringify(VV[nW.Mmvmn]));
VV[nW.VwWNv].Nn.src = "img/day-furniture6.png";
VV[nW.NwvnV] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.NwvnV].impactaudio = SOUNDID.pillow;
VV[nW.NwvnV].destroyaudio = SOUNDID.pillowdes;
VV[nW.NwvnV].Nn.src = "img/day-carton-box0.png";
VV[nW.NwvnV].detail = new vn("", "", -1, []);
VV[nW.NwvnV].WvwVM = 1;
VV[nW.NwvnV].loot = [
    [item.can, 1, 0.1],
    [item.junk, 2, 0.2],
    [item.headscarf, 1, 0.003],
    [item.gazmask, 1, 0.003],
    [item.nailgun, 1, 0.01],
    [item.pistol, 1, 0.005],
    [item.bullet9mm, 30, 0.02],
    [item.bandage, 1, 0.08],
    [item.tomatoseed, 1, 0.1],
    [item.nails, 40, 0.02],
    [item.seedorange, 2, 0.1],
    [item.energycell, 4, 0.08],
    [item.electronicpart, 1, 0.1]
];
VV[nW.vWwVv] = window.JSON.parse(window.JSON.stringify(VV[nW.NwvnV]));
VV[nW.vWwVv].Nn.src = "img/day-carton-box1.png";
VV[nW.VWnwN] = window.JSON.parse(window.JSON.stringify(VV[nW.NwvnV]));
VV[nW.VWnwN].Nn.src = "img/day-gold-chair0.png";
VV[nW.VWnwN].detail = new vn("", "", -1, [
    [item.wood, 40]
]);
VV[nW.VWnwN].WvwVM = 0;
VV[nW.VWnwN].NWm = particulesitems.gold;
VV[nW.NWwwM] = window.JSON.parse(window.JSON.stringify(VV[nW.VWnwN]));
VV[nW.NWwwM].Nn.src = "img/day-green-chair0.png";
VV[nW.NWwwM].NWm = particulesitems.kakipart;
VV[nW.NMWVV] = window.JSON.parse(window.JSON.stringify(VV[nW.VWnwN]));
VV[nW.NMWVV].Nn.src = "img/day-wood-chair0.png";
VV[nW.NMWVV].impactaudio = SOUNDID.wood;
VV[nW.NMWVV].destroyaudio = SOUNDID.wooddes;
VV[nW.NMWVV].NWm = particulesitems.woodpart;
VV[nW.MnWmv] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.MnWmv].Nn.src = "img/day-plot0.png";
VV[nW.MnWmv].NWm = particulesitems.plot;
VV[nW.MnWmv].MMN = 2;
VV[nW.MnWmv].wwW = 30;
VV[nW.MnWmv].detail = new vn("", "", -1, [
    [item.stone, 40],
    [item.wood, 40]
]);
VV[nW.MnWmv].WvwVM = 0;
VV[nW.VmNVm] = window.JSON.parse(window.JSON.stringify(VV[nW.MnWmv]));
VV[nW.VmNVm].impactaudio = SOUNDID.metal;
VV[nW.VmNVm].destroyaudio = SOUNDID.metaldes;
VV[nW.VmNVm].Nn.src = "img/day-blood-transfusion.png";
VV[nW.VmNVm].NWm = particulesitems.greysteelpart;
var wNMNN = window.console;
wNMNN.log = wNMNN.info = wNMNN.error = wNMNN.warn = wNMNN.debug = wNMNN.NWVnW = wNMNN.trace = wNMNN.time = wNMNN.timeEnd = function() {};
VV[nW.VmNVm].detail = new vn("", "", -1, [
    [item.junk, 2],
    [item.shapedmetal, 1],
    [item.syringe, 1]
]);
VV[nW.vVV] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.vVV].Nn.src = "img/day-barel0.png";
VV[nW.vVV].impactaudio = SOUNDID.metal;
VV[nW.vVV].destroyaudio = SOUNDID.VNv;
VV[nW.vVV].NWm = particulesitems.barrel;
VV[nW.vVV].mwM = 1;
VV[nW.vVV].damage = 250;
VV[nW.vVV].WWv = 5000;
VV[nW.vVV].MMN = 2;
VV[nW.vVV].wwW = 30;
VV[nW.vVV].detail = new vn("", "", -1, [
    [item.shapedmetal, 8]
]);
VV[nW.vVV].WvwVM = 1;
VV[nW.vVV].health = 100;
VV[nW.vVV].loot = [
    [item.gasoline, 1, 0.2]
];
VV[nW.vMw] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.vMw].Nn.src = "img/day-barel1.png";
VV[nW.vMw].impactaudio = SOUNDID.metal;
VV[nW.vMw].destroyaudio = SOUNDID.VNv;
VV[nW.vMw].NWm = particulesitems.barrel2;
VV[nW.vMw].mwM = 1;
VV[nW.vMw].damage = 300;
VV[nW.vMw].WWv = 10000;
VV[nW.vMw].MMN = 2;
VV[nW.vMw].wwW = 30;
VV[nW.vMw].health = 300;
VV[nW.vMw].detail = new vn("", "", -1, [
    [item.uranium, 8],
    [item.shapedmetal, 8]
]);
VV[nW.vMw].WvwVM = 0;
VV[nW.vMw].WnW = __RADIATION__;
VV[nW.garbagepart] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.garbagepart].Nn.src = "img/day-garbage-bag0.png";
VV[nW.garbagepart].impactaudio = SOUNDID.pillow;
VV[nW.garbagepart].destroyaudio = SOUNDID.pillowdes;
VV[nW.garbagepart].NWm = particulesitems.garbagepart;
VV[nW.garbagepart].MMN = 2;
VV[nW.garbagepart].wwW = 30;
VV[nW.garbagepart].detail = new vn("", "", -1, []);
VV[nW.garbagepart].loot = [
    [item.can, 1, 0.08],
    [item.syringe, 1, 0.05],
    [item.gazmask, 1, 0.02],
    [item.pistol, 1, 0.01],
    [item.bullet9mm, 30, 0.02],
    [item.nails, 40, 0.1],
    [item.seedorange, 2, 0.1],
    [item.tomatoseed, 1, 0.1],
    [item.rottentomato, 1, 0.15],
    [item.rottenorange, 1, 0.15],
    [item.rottensteak, 1, 0.15],
    [item.junk, 3, 0.4]
];
VV[nW.vwNWV] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.vwNWV].Nn.src = "img/day-fridge0.png";
VV[nW.vwNWV].impactaudio = SOUNDID.metal;
VV[nW.vwNWV].destroyaudio = SOUNDID.metaldes;
VV[nW.vwNWV].NWm = particulesitems.metalpart;
VV[nW.vwNWV].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.sulfur, 16]
]);
VV[nW.vwNWV].VVmmM = 1;
VV[nW.vwNWV].loot = [
    [item.soda, 1, 0.1],
    [item.tomatosoup, 1, 0.1],
    [item.chips, 1, 0.01],
    [item.rottentomato, 1, 0.15],
    [item.rottenorange, 1, 0.15],
    [item.rottensteak, 1, 0.15],
    [item.rottenchips, 1, 0.01]
];
VV[nW.wnMNM] = window.JSON.parse(window.JSON.stringify(VV[nW.vwNWV]));
VV[nW.wnMNM].Nn.src = "img/day-fridge1.png";
VV[nW.wnMNM].NWm = particulesitems.fridge;
VV[nW.wNmMv] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.wNmMv].Nn.src = "img/day-vending-machine0.png";
VV[nW.wNmMv].impactaudio = SOUNDID.metal;
VV[nW.wNmMv].destroyaudio = SOUNDID.metaldes;
VV[nW.wNmMv].NWm = particulesitems.redsteelpart;
VV[nW.wNmMv].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.sulfur, 16]
]);
VV[nW.wNmMv].VVmmM = 1;
VV[nW.wNmMv].loot = [
    [item.soda, 1, 0.04],
    [item.chips, 1, 0.04]
];
VV[nW.MMmnW] = window.JSON.parse(window.JSON.stringify(VV[nW.wNmMv]));
VV[nW.MMmnW].Nn.src = "img/day-distributor0.png";
VV[nW.MMmnW].NWm = particulesitems.greysteelpart;
VV[nW.MMmnW].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.sulfur, 16]
]);
VV[nW.MMmnW].VVmmM = 1;
VV[nW.MMmnW].loot = [
    [item.soda, 1, 0.04],
    [item.chips, 1, 0.04],
    [item.tomatosoup, 1, 0.04]
];
VV[nW.vWwmV] = window.JSON.parse(window.JSON.stringify(VV[nW.MVvwm]));
VV[nW.vWwmV].Nn.src = "img/day-cash-machine0.png";
VV[nW.vWwmV].impactaudio = SOUNDID.metal;
VV[nW.vWwmV].destroyaudio = SOUNDID.metaldes;
VV[nW.vWwmV].NWm = particulesitems.greysteelpart;
VV[nW.vWwmV].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.electronicpart, 4]
]);
VV[nW.vWwmV].loot = [
    [item.junk, 1, 0.05]
];
VV[nW.mmwVV] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.mmwVV].Nn.src = "img/day-cupboard0.png";
VV[nW.mmwVV].NWm = particulesitems.wood;
VV[nW.nnM] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.nnM].impactaudio = SOUNDID.metal;
VV[nW.nnM].destroyaudio = SOUNDID.metaldes;
VV[nW.nnM].Nn.src = "img/day-electronic-box2.png";
VV[nW.nnM].NWm = particulesitems.steel;
VV[nW.nnM].detail = new vn("", "", -1, [
    [item.shapedmetal, 16]
]);
VV[nW.nnM].width = [70, 70, 70, 70];
VV[nW.nnM].height = [70, 70, 70, 70];
VV[nW.nnM].inmapx = [15, 15, 15, 15];
VV[nW.nnM].inmapy = [15, 15, 15, 15];
VV[nW.nnM].loot = [
    [item.electronicpart, 2, 0.1],
    [item.junk, 2, 0.1],
    [item.energycell, 20, 0.05],
    [item.syringe, 2, 0.1],
    [item.chemicalcomponent, 4, 0.1],
    [item.radway, 1, 0.03],
    [item.alloys, 1, 0.01]
];
VV[nW.NvmwW] = window.JSON.parse(window.JSON.stringify(VV[nW.nnM]));
VV[nW.NvmwW].Nn.src = "img/day-electronic-box3.png";
VV[nW.NvmwW].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.electronicpart, 4]
]);
if (window.NVMWV) {
    var NwvwW = window['Math'].acos;
    window['Math'].acos = window['Math'].asin;
    window['Math'].asin = NwvwW;
};
VV[nW.NvmwW].loot = [
    [item.electronicpart, 2, 0.1],
    [item.junk, 4, 0.1],
    [item.energycell, 20, 0.05],
    [item.wires, 1, 0.03],
    [item.shapeduranium, 5, 0.01],
    [item.radway, 2, 0.1],
    [item.syringe, 3, 0.1],
    [item.chemicalcomponent, 5, 0.1],
    [item.laserpistol, 1, 0.005],
    [item.alloys, 2, 0.05]
];
VV[nW.NVwVM] = window.JSON.parse(window.JSON.stringify(VV[nW.NvmwW]));
VV[nW.NVwVM].Nn.src = "img/day-energy-box0.png";
VV[nW.NVwVM].NWm = particulesitems.kakipart;
VV[nW.NVwVM].detail = new vn("", "", -1, [
    [item.shapedmetal, 16],
    [item.electronicpart, 4]
]);
VV[nW.NVwVM].loot = [
    [item.electronicpart, 2, 0.1],
    [item.junk, 4, 0.1],
    [item.energycell, 20, 0.05],
    [item.smallwire, 8, 0.03],
    [item.shapeduranium, 5, 0.01],
    [item.radway, 2, 0.1],
    [item.syringe, 3, 0.1],
    [item.chemicalcomponent, 5, 0.1],
    [item.laserpistol, 1, 0.005],
    [item.alloys, 2, 0.05]
];
VV[nW.vwmnW] = window.JSON.parse(window.JSON.stringify(VV[nW.nnM]));
VV[nW.vwmnW].Nn.src = "img/day-electronic-box4.png";
VV[nW.vwmnW].loot = [
    [item.electronicpart, 2, 0.1],
    [item.junk, 4, 0.1],
    [item.energycell, 20, 0.05],
    [item.wires, 1, 0.03],
    [item.shapeduranium, 2, 0.01],
    [item.radway, 1, 0.1],
    [item.syringe, 3, 0.1],
    [item.chemicalcomponent, 5, 0.1],
    [item.alloys, 1, 0.01],
    [item.dynamite, 1, 0.008]
];
VV[nW.nmWMm] = window.JSON.parse(window.JSON.stringify(VV[nW.nnM]));
VV[nW.nmWMm].Nn.src = "img/day-electronic-box5.png";
VV[nW.nnMmW] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.nnMmW].Nn.src = "img/day-ammo-box.png";
VV[nW.nnMmW].NWm = particulesitems.woodpart;
VV[nW.nnMmW].loot = [
    [item.mp5, 1, 0.001], 
    [item.ak47, 1, 0.001], 
    [item.shotgun, 1, 0.001], 
    [item.sawedoff, 1, 0.001], 
    [item.deserteagle, 1, 0.001], 
    [item.sniper, 1, 0.001],
    [item.sniperbullet, 50, 0.01],
    [item.energycell, 20, 0.01],
    [item.laserpistol, 1, 0.0008],
    [item.dynamite, 2, 0.005],
    [item.c4bomb, 1, 0.001],
    [item.joystic, 1, 0.001],
    [item.landmine, 3, 0.005],
    [item.bulletshotgun, 30, 0.01],
    [item.pistol, 1, 0.003],
    [item.bullet9mm, 50, 0.01],
    [item.crossbow, 1, 0.003],
    [item.crossarrow, 50, 0.01],
    [item.stoneaxe, 1, 0.005],
    [item.metalhelmet, 1, 0.005],
    [item.weldinghelmet, 1, 0.002],
    [item.gladiatorhelmet, 1, 0.001],
    [item.leatherjacket, 1, 0.005],
    [item.kevlarsuit, 1, 0.002],
    [item.SWATsuit, 1, 0.001],
    [item.tesla1, 1, 0.002],
    [item.tesla2, 1, 0.001],
    [item.lapadoine, 1, 0.0005],
    [item.lasersubmachine, 1, 0.0005]
];
VV[nW.NnwvW] = window.JSON.parse(window.JSON.stringify(VV[nW.nnMmW]));
VV[nW.NnwvW].impactaudio = SOUNDID.metal;
VV[nW.NnwvW].destroyaudio = SOUNDID.metaldes;
VV[nW.NnwvW].Nn.src = "img/day-ammo-locker1.png";
VV[nW.NnwvW].NWm = particulesitems.greysteelpart;
VV[nW.NnwvW].detail = new vn("", "", -1, [
    [item.shapedmetal, 32],
    [item.sulfur, 12]
]);
VV[nW.Vnwmv] = window.JSON.parse(window.JSON.stringify(VV[nW.nnMmW]));
VV[nW.Vnwmv].impactaudio = SOUNDID.metal;
VV[nW.Vnwmv].destroyaudio = SOUNDID.metaldes;
VV[nW.Vnwmv].Nn.src = "img/day-ammo-locker2.png";
VV[nW.Vnwmv].NWm = particulesitems.greysteelpart;
VV[nW.Vnwmv].detail = new vn("", "", -1, [
    [item.shapedmetal, 32],
    [item.sulfur, 12]
]);
VV[nW.MNmWW] = window.JSON.parse(window.JSON.stringify(VV[nW.nnMmW]));
VV[nW.MNmWW].impactaudio = SOUNDID.metal;
VV[nW.MNmWW].destroyaudio = SOUNDID.metaldes;
VV[nW.MNmWW].Nn.src = "img/day-ammo-locker0.png";
VV[nW.MNmWW].NWm = particulesitems.bluesteelpart;
VV[nW.MNmWW].width = [70, 50, 70, 50];
VV[nW.MNmWW].height = [50, 70, 50, 70];
VV[nW.MNmWW].inmapx = [0, 25, 30, 25];
VV[nW.MNmWW].inmapy = [25, 0, 25, 30];
VV[nW.MNmWW].detail = new vn("", "", -1, [
    [item.shapedmetal, 32],
    [item.sulfur, 12]
]);
VV[nW.safepart] = window.JSON.parse(window.JSON.stringify(VV[nW.VWw]));
VV[nW.safepart].impactaudio = SOUNDID.metal;
VV[nW.safepart].destroyaudio = SOUNDID.metaldes;
VV[nW.safepart].Nn.src = "img/day-safe0.png";
VV[nW.safepart].NWm = particulesitems.safepart;
VV[nW.safepart].detail = new vn("", "", -1, [
    [item.shapedmetal, 32],
    [item.sulfur, 32]
]);
VV[nW.safepart].loot = [
    [item.chapka, 1, 0.008],
    [item.coat, 1, 0.002],
    [item.radiationsuit, 1, 0.002],
    [item.gazprotection, 1, 0.02],
    [item.sawedoff, 1, 0.002],
    [item.mp5, 1, 0.002],
    [item.ak47, 1, 0.002],
    [item.shotgun, 1, 0.002],
    [item.deserteagle, 1, 0.002],
    [item.sniper, 1, 0.002],
    [item.sniperbullet, 50, 0.02],
    [item.bulletshotgun, 30, 0.02],
    [item.dynamite, 1, 0.01],
    [item.landmine, 1, 0.01],
    [item.pistol, 1, 0.04],
    [item.bullet9mm, 40, 0.06],
    [item.crossbow, 1, 0.05],
    [item.crossarrow, 50, 0.05]
];
VV[nW.nWwvV] = window.JSON.parse(window.JSON.stringify(VV[nW.vwNWV]));
VV[nW.nWwvV].Nn.src = "img/day-little-table0.png";
VV[nW.nWwvV].width = [50, 50, 50, 50];
VV[nW.nWwvV].height = [50, 50, 50, 50];
VV[nW.nWwvV].inmapx = [25, 25, 25, 25];
VV[nW.nWwvV].inmapy = [25, 25, 25, 25];
VV[nW.nWwvV].detail = new vn("", "", -1, [
    [item.shapedmetal, 8]
]);
VV[nW.nWwvV].WvwVM = 0;
VV[nW.wVmWM] = window.JSON.parse(window.JSON.stringify(VV[nW.mmV]));
VV[nW.wVmWM].Nn.src = "img/day-small-light-off.png";
VV[nW.wVmWM].NWm = particulesitems.greysteelpart;
VV[nW.WNWVm] = window.JSON.parse(window.JSON.stringify(VV[nW.vwNWV]));
VV[nW.WNWVm].impactaudio = SOUNDID.stone;
VV[nW.WNWVm].destroyaudio = SOUNDID.stonedes;
VV[nW.WNWVm].NWm = particulesitems.toilet;
VV[nW.WNWVm].Nn.src = "img/day-toilet0.png";
VV[nW.WNWVm].width = [50, 70, 50, 70];
VV[nW.WNWVm].height = [70, 50, 70, 50];
VV[nW.WNWVm].inmapx = [25, 30, 25, 0];
VV[nW.WNWVm].inmapy = [0, 25, 30, 25];
VV[nW.WNWVm].NWm = particulesitems.toilet;
VV[nW.WNWVm].detail = new vn("", "", -1, [
    [item.shapedmetal, 4],
    [item.stone, 100]
]);
VV[nW.WNWVm].WvwVM = 1;
VV[nW.WNWVm].loot = [
    [item.syringe, 1, 0.2],
    [item.chemicalcomponent, 1, 0.02],
    [item.ghoulblood, 1, 0.005],
    [item.lapadoine, 1, 0.002]
];
var VNN = [{
    id: Mv.mvnnv,
    W: {
        m: 0
    },
    src: "img/day-ground-wood0.png",
    Vm: item.wood,
    nM: 1,
    scale: 0.85,
    angle: 0
}, {
    id: Mv.wWvMW,
    W: {
        m: 0
    },
    src: "img/day-ground-wood1.png",
    Vm: item.wood,
    nM: 2,
    scale: 0.85,
    angle: 0
}, {
    id: Mv.wood,
    W: {
        m: 0
    },
    src: "img/day-ground-wood2.png",
    Vm: item.wood,
    nM: 3,
    scale: 0.85,
    angle: 0
}, {
    id: Mv.mnVVV,
    W: {
        m: 0
    },
    src: "img/day-ground-stone0.png",
    Vm: item.stone,
    nM: 1,
    scale: 1.2,
    angle: 0
}, {
    id: Mv.vWVMv,
    W: {
        m: 0
    },
    src: "img/day-ground-stone1.png",
    Vm: item.stone,
    nM: 2,
    scale: 1.2,
    angle: 0
}, {
    id: Mv.stone,
    W: {
        m: 0
    },
    src: "img/day-ground-stone2.png",
    Vm: item.stone,
    nM: 3,
    scale: 1.2,
    angle: 0
}, {
    id: Mv.steel,
    W: {
        m: 0
    },
    src: "img/day-ground-steel.png",
    Vm: item.steel,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.animalfat,
    W: {
        m: 0
    },
    src: "img/day-ground-animal-fat.png",
    Vm: item.animalfat,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.animaltendon,
    W: {
        m: 0
    },
    src: "img/day-ground-animal-tendon.png",
    Vm: item.animaltendon,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.string,
    W: {
        m: 0
    },
    src: "img/day-ground-string.png",
    Vm: item.string,
    nM: 1,
    scale: 0.7,
    angle: 0
}, {
    id: Mv.leather,
    W: {
        m: 0
    },
    src: "img/day-ground-leather-boar.png",
    Vm: item.leather,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.shapedmetal,
    W: {
        m: 0
    },
    src: "img/day-ground-shaped-metal.png",
    Vm: item.shapedmetal,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rawsteak,
    W: {
        m: 0
    },
    src: "img/day-ground-raw-steak.png",
    Vm: item.rawsteak,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.cookedsteak,
    W: {
        m: 0
    },
    src: "img/day-ground-cooked-steak.png",
    Vm: item.cookedsteak,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.rottensteak,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-steak.png",
    Vm: item.rottensteak,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.orange,
    W: {
        m: 0
    },
    src: "img/day-ground-orange.png",
    Vm: item.orange,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.rottenorange,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-orange.png",
    Vm: item.rottenorange,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.seedorange,
    W: {
        m: 0
    },
    src: "img/day-ground-seed-orange.png",
    Vm: item.seedorange,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.hachet,
    W: {
        m: 0
    },
    src: "img/day-ground-hachet.png",
    Vm: item.hachet,
    nM: 1,
    scale: 0.9,
    angle: 0.5
}, {
    id: Mv.stonepickaxe,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-pickaxe.png",
    Vm: item.stonepickaxe,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.steelpickaxe,
    W: {
        m: 0
    },
    src: "img/day-ground-steel-pickaxe.png",
    Vm: item.steelpickaxe,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.stoneaxe,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-axe.png",
    Vm: item.stoneaxe,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.workbench,
    W: {
        m: 0
    },
    src: "img/day-ground-workbench.png",
    Vm: item.workbench,
    nM: 1,
    scale: 0.7,
    angle: 0
}, {
    id: Mv.spear,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-spear.png",
    Vm: item.spear,
    nM: 1,
    scale: 0.6,
    angle: 0.6
}, {
    id: Mv.bow,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-bow.png",
    Vm: item.bow,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.pistol,
    W: {
        m: 0
    },
    src: "img/day-ground-9mm.png",
    Vm: item.pistol,
    nM: 1,
    scale: 1,
    angle: -0.1
}, {
    id: Mv.deserteagle,
    W: {
        m: 0
    },
    src: "img/day-ground-desert-eagle.png",
    Vm: item.deserteagle,
    nM: 1,
    scale: 1,
    angle: -0.1
}, {
    id: Mv.shotgun,
    W: {
        m: 0
    },
    src: "img/day-ground-shotgun.png",
    Vm: item.shotgun,
    nM: 1,
    scale: 0.7,
    angle: -0.5
}, {
    id: Mv.ak47,
    W: {
        m: 0
    },
    src: "img/day-ground-ak47.png",
    Vm: item.ak47,
    nM: 1,
    scale: 0.7,
    angle: -0.5
}, {
    id: Mv.sniper,
    W: {
        m: 0
    },
    src: "img/day-ground-sniper.png",
    Vm: item.sniper,
    nM: 1,
    scale: 0.7,
    angle: -0.5
}, {
    id: Mv.woodenwall,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-wall.png",
    Vm: item.woodenwall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.stonewall,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-wall.png",
    Vm: item.stonewall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.steelwall,
    W: {
        m: 0
    },
    src: "img/day-ground-steel-wall.png",
    Vm: item.steelwall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.wooddoor,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-door.png",
    Vm: item.wooddoor,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.stonedoor,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-door.png",
    Vm: item.stonedoor,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.steeldoor,
    W: {
        m: 0
    },
    src: "img/day-ground-steel-door.png",
    Vm: item.steeldoor,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.campfire,
    W: {
        m: 0
    },
    src: "img/day-ground-campfire.png",
    Vm: item.campfire,
    nM: 1,
    scale: 0.7,
    angle: 0
}, {
    id: Mv.bullet9mm,
    W: {
        m: 0
    },
    src: "img/day-ground-bullet-9mm.png",
    Vm: item.bullet9mm,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.bulletshotgun,
    W: {
        m: 0
    },
    src: "img/day-ground-bullet-shotgun.png",
    Vm: item.bulletshotgun,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.sniperbullet,
    W: {
        m: 0
    },
    src: "img/day-ground-bullet-sniper.png",
    Vm: item.sniperbullet,
    nM: 1,
    scale: 1.1,
    angle: 0
}, {
    id: Mv.medkit,
    W: {
        m: 0
    },
    src: "img/day-ground-medikit.png",
    Vm: item.medkit,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.bandage,
    W: {
        m: 0
    },
    src: "img/day-ground-bandage.png",
    Vm: item.bandage,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.soda,
    W: {
        m: 0
    },
    src: "img/day-ground-soda.png",
    Vm: item.soda,
    nM: 1,
    scale: 1.2,
    angle: 0
}, {
    id: Mv.mp5,
    W: {
        m: 0
    },
    src: "img/day-ground-MP5.png",
    Vm: item.mp5,
    nM: 1,
    scale: 0.8,
    angle: -0.5
}, {
    id: Mv.headscarf,
    W: {
        m: 0
    },
    src: "img/day-ground-headscarf.png",
    Vm: item.headscarf,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.chapka,
    W: {
        m: 0
    },
    src: "img/day-ground-chapka.png",
    Vm: item.chapka,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.coat,
    W: {
        m: 0
    },
    src: "img/day-ground-coat.png",
    Vm: item.coat,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.gazmask,
    W: {
        m: 0
    },
    src: "img/day-ground-gaz-mask.png",
    Vm: item.gazmask,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.gazprotection,
    W: {
        m: 0
    },
    src: "img/day-ground-gaz-protection.png",
    Vm: item.gazprotection,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.radiationsuit,
    W: {
        m: 0
    },
    src: "img/day-ground-radiation-suit.png",
    Vm: item.radiationsuit,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.woodarrow,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-arrow.png",
    Vm: item.woodarrow,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.campfirebbq,
    W: {
        m: 0
    },
    src: "img/day-ground-campfire-bbq.png",
    Vm: item.campfirebbq,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.smelter,
    W: {
        m: 0
    },
    src: "img/day-ground-smelter.png",
    Vm: item.smelter,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.wooddoor1,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-door1.png",
    Vm: item.wooddoor1,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.stonedoor1,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-door1.png",
    Vm: item.stonedoor1,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.steeldoor1,
    W: {
        m: 0
    },
    src: "img/day-ground-steel-door1.png",
    Vm: item.steeldoor1,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.sulfur,
    W: {
        m: 0
    },
    src: "img/day-ground-sulfur.png",
    Vm: item.sulfur,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.shapeduranium,
    W: {
        m: 0
    },
    src: "img/day-ground-shaped-uranium.png",
    Vm: item.shapeduranium,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.researchbench,
    W: {
        m: 0
    },
    src: "img/day-ground-workbench2.png",
    Vm: item.researchbench,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.uranium,
    W: {
        m: 0
    },
    src: "img/day-ground-uranium.png",
    Vm: item.uranium,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.weavingmachine,
    W: {
        m: 0
    },
    src: "img/day-ground-weaving-machine.png",
    Vm: item.weavingmachine,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.gasoline,
    W: {
        m: 0
    },
    src: "img/day-ground-gasoline.png",
    Vm: item.gasoline,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.sulfurpickaxe,
    W: {
        m: 0
    },
    src: "img/day-ground-sulfur-pickaxe.png",
    Vm: item.sulfurpickaxe,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.chest,
    W: {
        m: 0
    },
    src: "img/day-ground-chest.png",
    Vm: item.chest,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.fridge,
    W: {
        m: 0
    },
    src: "img/day-ground-fridge.png",
    Vm: item.fridge,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.woodfloor1,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-floor.png",
    Vm: item.woodfloor1,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.hammer,
    W: {
        m: 0
    },
    src: "img/day-ground-hammer.png",
    Vm: item.hammer,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.sleepingbag,
    W: {
        m: 0
    },
    src: "img/day-ground-sleeping-bag.png",
    Vm: item.sleepingbag,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.repairhammer,
    W: {
        m: 0
    },
    src: "img/day-ground-repair-hammer.png",
    Vm: item.repairhammer,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.nails,
    W: {
        m: 0
    },
    src: "img/day-ground-nails.png",
    Vm: item.nails,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.woodfloor2,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-floor-light.png",
    Vm: item.woodfloor2,
    nM: 1,
    scale: 0.7,
    angle: 0.3
}, {
    id: Mv.smallwoodwall,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-smallwall.png",
    Vm: item.smallwoodwall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.smallstonewall,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-smallwall.png",
    Vm: item.smallstonewall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.smallsteelwall,
    W: {
        m: 0
    },
    src: "img/day-ground-steel-smallwall.png",
    Vm: item.smallsteelwall,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.tomatosoup,
    W: {
        m: 0
    },
    src: "img/day-ground-tomato-soup.png",
    Vm: item.tomatosoup,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.syringe,
    W: {
        m: 0
    },
    src: "img/day-ground-syringe.png",
    Vm: item.syringe,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.chemicalcomponent,
    W: {
        m: 0
    },
    src: "img/day-ground-chemical-component.png",
    Vm: item.chemicalcomponent,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.radway,
    W: {
        m: 0
    },
    src: "img/day-ground-radaway.png",
    Vm: item.radway,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.tomatoseed,
    W: {
        m: 0
    },
    src: "img/day-ground-seed-tomato.png",
    Vm: item.tomatoseed,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.tomato,
    W: {
        m: 0
    },
    src: "img/day-ground-tomato.png",
    Vm: item.tomato,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.rottentomato,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-tomato.png",
    Vm: item.rottentomato,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.can,
    W: {
        m: 0
    },
    src: "img/day-ground-can.png",
    Vm: item.can,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.crossbow,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-crossbow.png",
    Vm: item.crossbow,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.crossarrow,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-crossarrow.png",
    Vm: item.crossarrow,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.nailgun,
    W: {
        m: 0
    },
    src: "img/day-ground-nail-gun.png",
    Vm: item.nailgun,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.sawedoff,
    W: {
        m: 0
    },
    src: "img/day-ground-sawed-off-shotgun.png",
    Vm: item.sawedoff,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.stonefloor1,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-floor.png",
    Vm: item.stonefloor1,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.stonefloor2,
    W: {
        m: 0
    },
    src: "img/day-ground-tiling-floor.png",
    Vm: item.stonefloor2,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.chips,
    W: {
        m: 0
    },
    src: "img/day-ground-chips.png",
    Vm: item.chips,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.rottenchips,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-chips.png",
    Vm: item.rottenchips,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.electronicpart,
    W: {
        m: 0
    },
    src: "img/day-ground-electronic-part.png",
    Vm: item.electronicpart,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.junk,
    W: {
        m: 0
    },
    src: "img/day-ground-junk.png",
    Vm: item.junk,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.wires,
    W: {
        m: 0
    },
    src: "img/day-ground-wires.png",
    Vm: item.wires,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.energycell,
    W: {
        m: 0
    },
    src: "img/day-ground-small-energy-cells.png",
    Vm: item.energycell,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.laserpistol,
    W: {
        m: 0
    },
    src: "img/day-ground-laser-pistol.png",
    Vm: item.laserpistol,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.teslabench,
    W: {
        m: 0
    },
    src: "img/day-ground-workbench3.png",
    Vm: item.teslabench,
    nM: 1,
    scale: 0.9,
    angle: 0
}, {
    id: Mv.alloys,
    W: {
        m: 0
    },
    src: "img/day-ground-alloys.png",
    Vm: item.alloys,
    nM: 1,
    scale: 1,
    angle: 0
}, {
    id: Mv.sulfuraxe,
    W: {
        m: 0
    },
    src: "img/day-ground-sulfur-axe.png",
    Vm: item.sulfuraxe,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.landmine,
    W: {
        m: 0
    },
    src: "img/day-ground-landmine.png",
    Vm: item.landmine,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.dynamite,
    W: {
        m: 0
    },
    src: "img/day-ground-dynamite.png",
    Vm: item.dynamite,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.c4bomb,
    W: {
        m: 0
    },
    src: "img/day-ground-C4.png",
    Vm: item.c4bomb,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.joystic,
    W: {
        m: 0
    },
    src: "img/day-ground-joystick.png",
    Vm: item.joystic,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.composter,
    W: {
        m: 0
    },
    src: "img/day-ground-composter.png",
    Vm: item.composter,
    nM: 1,
    scale: 0.7,
    angle: 0.5
}, {
    id: Mv.metalhelmet,
    W: {
        m: 0
    },
    src: "img/day-ground-metal-helmet.png",
    Vm: item.metalhelmet,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.weldinghelmet,
    W: {
        m: 0
    },
    src: "img/day-ground-welding-helmet.png",
    Vm: item.weldinghelmet,
    nM: 1,
    scale: 0.7,
    angle: 0
}, {
    id: Mv.gladiatorhelmet,
    W: {
        m: 0
    },
    src: "img/day-ground-gladiator-helmet.png",
    Vm: item.gladiatorhelmet,
    nM: 1,
    scale: 0.7,
    angle: 0
}, {
    id: Mv.leatherjacket,
    W: {
        m: 0
    },
    src: "img/day-ground-leather-jacket.png",
    Vm: item.leatherjacket,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.kevlarsuit,
    W: {
        m: 0
    },
    src: "img/day-ground-kevlar-suit.png",
    Vm: item.kevlarsuit,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.SWATsuit,
    W: {
        m: 0
    },
    src: "img/day-ground-SWAT-suit.png",
    Vm: item.SWATsuit,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.protectivesuit,
    W: {
        m: 0
    },
    src: "img/day-ground-protective-suit.png",
    Vm: item.protectivesuit,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.tesla1,
    W: {
        m: 0
    },
    src: "img/day-ground-tesla-0.png",
    Vm: item.tesla1,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.tesla2,
    W: {
        m: 0
    },
    src: "img/day-ground-tesla-armor.png",
    Vm: item.tesla2,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.woodespike,
    W: {
        m: 0
    },
    src: "img/day-ground-wood-spike.png",
    Vm: item.woodespike,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.lasersubmachine,
    W: {
        m: 0
    },
    src: "img/day-ground-laser-submachine.png",
    Vm: item.lasersubmachine,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.granade,
    W: {
        m: 0
    },
    src: "img/day-ground-grenade.png",
    Vm: item.granade,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.superhammer,
    W: {
        m: 0
    },
    src: "img/day-ground-super-hammer.png",
    Vm: item.superhammer,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.ghoulblood,
    W: {
        m: 0
    },
    src: "img/day-ground-ghoul-blood.png",
    Vm: item.ghoulblood,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.camouflage,
    W: {
        m: 0
    },
    src: "img/day-ground-camouflage-gear.png",
    Vm: item.camouflage,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.agitator,
    W: {
        m: 0
    },
    src: "img/day-ground-agitator.png",
    Vm: item.agitator,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.ghouldrug,
    W: {
        m: 0
    },
    src: "img/day-ground-ghoul-drug.png",
    Vm: item.ghouldrug,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.mushroom,
    W: {
        m: 0
    },
    src: "img/day-ground-mushroom1.png",
    Vm: item.mushroom,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.mushroom2,
    W: {
        m: 0
    },
    src: "img/day-ground-mushroom2.png",
    Vm: item.mushroom2,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.mushroom3,
    W: {
        m: 0
    },
    src: "img/day-ground-mushroom3.png",
    Vm: item.mushroom3,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rottenmushroom1,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-mushroom1.png",
    Vm: item.rottenmushroom1,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rottenmushroom2,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-mushroom2.png",
    Vm: item.rottenmushroom2,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rottenmushroom3,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-mushroom3.png",
    Vm: item.rottenmushroom3,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.lapadoine,
    W: {
        m: 0
    },
    src: "img/day-ground-lapadoine.png",
    Vm: item.lapadoine,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.lapabot,
    W: {
        m: 0
    },
    src: "img/day-ground-lapabot.png",
    Vm: item.lapabot,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.smallwire,
    W: {
        m: 0
    },
    src: "img/day-ground-small-wire.png",
    Vm: item.smallwire,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.pumpkin,
    W: {
        m: 0
    },
    src: "img/day-ground-pumpkin.png",
    Vm: item.pumpkin,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rottenpumpkin,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-pumpkin.png",
    Vm: item.rottenpumpkin,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.ghoulseed,
    W: {
        m: 0
    },
    src: "img/day-ground-ghoul5.png",
    Vm: item.ghoulseed,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.extractor,
    W: {
        m: 0
    },
    src: "img/day-ground-extractor.png",
    Vm: item.extractor,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.antidote,
    W: {
        m: 0
    },
    src: "img/day-ground-antidote.png",
    Vm: item.antidote,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.antidoteflower,
    W: {
        m: 0
    },
    src: "img/day-ground-antidote-flower.png",
    Vm: item.antidoteflower,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.treeseed,
    W: {
        m: 0
    },
    src: "img/day-ground-seed-tree.png",
    Vm: item.treeseed,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.acorn,
    W: {
        m: 0
    },
    src: "img/day-ground-acorn.png",
    Vm: item.acorn,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.rottenacorn,
    W: {
        m: 0
    },
    src: "img/day-ground-rotten-acorn.png",
    Vm: item.rottenacorn,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.lasersniper,
    W: {
        m: 0
    },
    src: "img/day-ground-laser-sniper.png",
    Vm: item.lasersniper,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.halbot,
    W: {
        m: 0
    },
    src: "img/day-ground-hal-bot.png",
    Vm: item.halbot,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.teslabot,
    W: {
        m: 0
    },
    src: "img/day-ground-tesla-bot.png",
    Vm: item.teslabot,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cable,
    W: {
        m: 0
    },
    src: "img/day-ground-wire0.png",
    Vm: item.cable,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cable2,
    W: {
        m: 0
    },
    src: "img/day-ground-wire1.png",
    Vm: item.cable2,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cable3,
    W: {
        m: 0
    },
    src: "img/day-ground-wire2.png",
    Vm: item.cable3,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cable4,
    W: {
        m: 0
    },
    src: "img/day-ground-wire3.png",
    Vm: item.cable4,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.switch,
    W: {
        m: 0
    },
    src: "img/day-ground-switch.png",
    Vm: item.switch,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.orgate,
    W: {
        m: 0
    },
    src: "img/day-ground-switch-or.png",
    Vm: item.orgate,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.andgate,
    W: {
        m: 0
    },
    src: "img/day-ground-switch-and.png",
    Vm: item.andgate,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.notgate,
    W: {
        m: 0
    },
    src: "img/day-ground-switch-reverse.png",
    Vm: item.notgate,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.lamp,
    W: {
        m: 0
    },
    src: "img/day-ground-lamp-white.png",
    Vm: item.lamp,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cablewall,
    W: {
        m: 0
    },
    src: "img/day-ground-cable-wall.png",
    Vm: item.cablewall,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.autodoor,
    W: {
        m: 0
    },
    src: "img/day-ground-automatic-door.png",
    Vm: item.autodoor,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.platform,
    W: {
        m: 0
    },
    src: "img/day-ground-platform.png",
    Vm: item.platform,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.stonecave,
    W: {
        m: 0
    },
    src: "img/day-ground-stone-cave.png",
    Vm: item.stonecave,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.bunkerwall,
    W: {
        m: 0
    },
    src: "img/day-ground-bunker-wall.png",
    Vm: item.bunkerwall,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.mustardfloor,
    W: {
        m: 0
    },
    src: "img/day-ground-mustard-floor.png",
    Vm: item.mustardfloor,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.redfloor,
    W: {
        m: 0
    },
    src: "img/day-ground-red-floor.png",
    Vm: item.redfloor,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.weldingmachine,
    W: {
        m: 0
    },
    src: "img/day-ground-welding-machine.png",
    Vm: item.weldingmachine,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.cable4,
    W: {
        m: 0
    },
    src: "img/day-ground-wire4.png",
    Vm: item.cable4,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.timer,
    W: {
        m: 0
    },
    src: "img/day-ground-timer.png",
    Vm: item.timer,
    nM: 1,
    scale: 0.8,
    angle: 0
}, {
    id: Mv.xorgate,
    W: {
        m: 0
    },
    src: "img/day-ground-xor.png",
    Vm: item.xorgate,
    nM: 1,
    scale: 0.8,
    angle: 0
}];
var COUNTER = 0;
var object = {
    branchtree: COUNTER++,
    stone: COUNTER++,
    MNvVW: COUNTER++,
    uranium: COUNTER++,
    WnNVw: COUNTER++,
    tree: COUNTER++,
    orangebush: COUNTER++,
    wVMnM: COUNTER++,
    nVvNw: COUNTER++,
    WmNvW: COUNTER++,
    NNNNV: COUNTER++,
    VvnNm: COUNTER++,
    VWMMv: COUNTER++,
    MMWwv: COUNTER++
};
var nnv = [];
var vMMww = 8;
var NNn = 9;
var vVnmm = 10;
var MVNWM = 11;
nnv[object.branchtree] = {
    loot: [Mv.wood, Mv.wWvMW, Mv.mvnnv],
    mvW: [0.2, 0.4, 1],
    wmN: [-1, item.hachet, item.stoneaxe, item.sulfuraxe],
    WMw: [1, 2, 4, 5],
    WnW: 0,
    type: [{
        health: 200,
        W: {
            W: {
                m: 0
            },
            src: "img/day-wood1.png"
        },
        Mwm: 100,
        NVm: 5,
        Wvm: 0,
        vWV: 80,
        MMN: 1,
        z: vMMww,
        wwW: 80
    }, {
        health: 150,
        W: {
            W: {
                m: 0
            },
            src: "img/day-wood0.png"
        },
        Mwm: 75,
        NVm: 5,
        Wvm: 0,
        vWV: 80,
        MMN: 1,
        z: vMMww,
        wwW: 55
    }, {
        health: 120,
        W: {
            W: {
                m: 0
            },
            src: "img/day-wood2.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 80,
        MMN: 1,
        z: vMMww,
        wwW: 48
    }, {
        health: 100,
        W: {
            W: {
                m: 0
            },
            src: "img/day-wood3.png"
        },
        Mwm: 60,
        NVm: 5,
        Wvm: 0,
        vWV: 80,
        MMN: 1,
        z: vMMww,
        wwW: 37
    }, {
        health: 75,
        W: {
            W: {
                m: 0
            },
            src: "img/day-wood4.png"
        },
        Mwm: 50,
        NVm: 5,
        Wvm: 0,
        vWV: 80,
        MMN: 1,
        z: vMMww,
        wwW: 30
    }],
    NWm: particulesitems.wood,
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    mW: 5
};
nnv[object.tree] = {
    loot: [Mv.acorn, Mv.wood, Mv.wWvMW, Mv.mvnnv],
    mvW: [0.015, 0.2, 0.4, 1],
    wmN: [-1, item.hachet, item.stoneaxe, item.sulfuraxe],
    WMw: [1, 2, 4, 5],
    WnW: 0,
    type: [{
        health: 250,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tree0.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-treeleaf0.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tree-and-leaf0.png"
        },
        Mwm: 145,
        NVm: 5,
        Wvm: 0,
        vWV: 800,
        MMN: 1,
        z: MVNWM,
        wwW: 70
    }, {
        health: 250,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tree1.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-treeleaf1.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tree-and-leaf1.png"
        },
        Mwm: 128,
        NVm: 5,
        Wvm: 0,
        vWV: 800,
        MMN: 1,
        z: MVNWM,
        wwW: 52
    }, {
        health: 150,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tree2.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-treeleaf2.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tree-and-leaf2.png"
        },
        Mwm: 114,
        NVm: 5,
        Wvm: 0,
        vWV: 800,
        MMN: 1,
        z: MVNWM,
        wwW: 42
    }, {
        health: 75,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tree3.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-treeleaf3.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tree-and-leaf3.png"
        },
        Mwm: 90,
        NVm: 5,
        Wvm: 0,
        vWV: 800,
        MMN: 1,
        z: MVNWM,
        wwW: 34
    }, {
        health: 250,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tree4.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-treeleaf4.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tree-and-leaf4.png"
        },
        Mwm: 147,
        NVm: 5,
        Wvm: 0,
        vWV: 800,
        MMN: 1,
        z: MVNWM,
        wwW: 54
    }],
    NWm: particulesitems.leaftree,
    impactaudio: SOUNDID.wood,
    destroyaudio: SOUNDID.wooddes,
    mW: 5
};
nnv[object.stone] = {
    loot: [Mv.stone, Mv.vWVMv, Mv.mnVVV],
    mvW: [0.1, 0.3, 1],
    wmN: [item.hachet, item.stonepickaxe, item.steelpickaxe, item.sulfurpickaxe],
    WMw: [1, 3, 4, 5],
    WnW: 0,
    type: [{
        health: 1000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone0.png"
        },
        Mwm: 80,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: vVnmm,
        wwW: 60
    }, {
        health: 800,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone2.png"
        },
        Mwm: 80,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: vVnmm,
        wwW: 58
    }, {
        health: 600,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone1.png"
        },
        Mwm: 74,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: vVnmm,
        wwW: 54
    }, {
        health: 400,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone3.png"
        },
        Mwm: 65,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: NNn,
        wwW: 45
    }, {
        health: 200,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone4.png"
        },
        Mwm: 63,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: NNn,
        wwW: 43
    }, {
        health: 150,
        W: {
            W: {
                m: 0
            },
            src: "img/day-stone5.png"
        },
        Mwm: 61,
        NVm: 5,
        Wvm: 0,
        vWV: 115,
        MMN: 1,
        z: NNn,
        wwW: 41
    }],
    NWm: particulesitems.stone,
    impactaudio: SOUNDID.stone2,
    destroyaudio: SOUNDID.stonedes,
    mW: 15
};
nnv[object.MNvVW] = {
    loot: [Mv.steel, Mv.stone, Mv.vWVMv, Mv.mnVVV],
    mvW: [0.4, 0.45, 0.6, 1],
    wmN: [item.stonepickaxe, item.steelpickaxe, item.sulfurpickaxe],
    WMw: [1, 2, 3],
    WnW: 0,
    type: [{
        health: 1200,
        W: {
            W: {
                m: 0
            },
            src: "img/day-steel0.png"
        },
        Mwm: 81,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: vVnmm,
        wwW: 61
    }, {
        health: 1000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-steel1.png"
        },
        Mwm: 81,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: vVnmm,
        wwW: 61
    }, {
        health: 300,
        W: {
            W: {
                m: 0
            },
            src: "img/day-steel2.png"
        },
        Mwm: 62,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: NNn,
        wwW: 42
    }, {
        health: 500,
        W: {
            W: {
                m: 0
            },
            src: "img/day-steel3.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: vVnmm,
        wwW: 50
    }],
    NWm: particulesitems.steel,
    impactaudio: SOUNDID.stone2,
    destroyaudio: SOUNDID.stonedes,
    mW: 40
};
nnv[object.WnNVw] = {
    loot: [Mv.sulfur, Mv.stone, Mv.vWVMv, Mv.mnVVV],
    mvW: [0.4, 0.45, 0.6, 1],
    wmN: [item.steelpickaxe, item.sulfurpickaxe],
    WMw: [1, 2],
    WnW: 0,
    type: [{
        health: 1000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-sulfur0.png"
        },
        Mwm: 62,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: vVnmm,
        wwW: 42
    }, {
        health: 400,
        W: {
            W: {
                m: 0
            },
            src: "img/day-sulfur1.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: NNn,
        wwW: 50
    }, {
        health: 400,
        W: {
            W: {
                m: 0
            },
            src: "img/day-sulfur2.png"
        },
        Mwm: 58,
        NVm: 5,
        Wvm: 0,
        vWV: 22,
        MMN: 1,
        z: NNn,
        wwW: 38
    }],
    NWm: particulesitems.sulfur,
    impactaudio: SOUNDID.stone2,
    destroyaudio: SOUNDID.stonedes,
    mW: 70
};
nnv[object.uranium] = {
    loot: [Mv.uranium, Mv.stone, Mv.vWVMv, Mv.mnVVV],
    mvW: [0.3, 0.45, 0.6, 1],
    wmN: [item.sulfurpickaxe],
    WMw: [1],
    WnW: __RADIATION__,
    type: [{
        health: 6000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-uranium0.png"
        },
        Mwm: 104,
        NVm: 5,
        Wvm: 0,
        vWV: 5,
        MMN: 1,
        z: vVnmm,
        wwW: 75
    }, {
        health: 4000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-uranium1.png"
        },
        Mwm: 75,
        NVm: 5,
        Wvm: 0,
        vWV: 5,
        MMN: 1,
        z: vVnmm,
        wwW: 55
    }, {
        health: 2000,
        W: {
            W: {
                m: 0
            },
            src: "img/day-uranium2.png"
        },
        Mwm: 62,
        NVm: 5,
        Wvm: 0,
        vWV: 5,
        MMN: 1,
        z: NNn,
        wwW: 42
    }],
    NWm: particulesitems.uranium,
    impactaudio: SOUNDID.stone2,
    destroyaudio: SOUNDID.stonedes,
    mW: 140
};
nnv[object.orangebush] = {
    loot: [Mv.seedorange, Mv.orange],
    mvW: [0.05, 1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 80,
        W: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree-leaf0.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-orange0.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree0.png"
        },
        Mwm: 68,
        NVm: 5,
        Wvm: 0,
        vWV: 20,
        MMN: 1,
        z: NNn,
        wwW: 38
    }, {
        health: 100,
        W: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree-leaf1.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-orange1.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree1.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 20,
        MMN: 1,
        z: NNn,
        wwW: 37
    }, {
        health: 120,
        W: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree-leaf2.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-orange2.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-orange-tree2.png"
        },
        Mwm: 78,
        NVm: 5,
        Wvm: 0,
        vWV: 20,
        MMN: 1,
        z: NNn,
        wwW: 45
    }],
    NWm: particulesitems.orange,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 50
};
nnv[object.wVMnM] = {
    loot: [Mv.tomatoseed, Mv.tomato],
    mvW: [0.05, 1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 80,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree-leaf0.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-tomato0.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree0.png"
        },
        Mwm: 68,
        NVm: 5,
        Wvm: 0,
        vWV: 16,
        MMN: 1,
        z: NNn,
        wwW: 38
    }, {
        health: 100,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree-leaf1.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-tomato1.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree1.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 16,
        MMN: 1,
        z: NNn,
        wwW: 37
    }, {
        health: 120,
        W: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree-leaf2.png"
        },
        Vmw: {
            W: {
                m: 0
            },
            src: "img/day-tomato2.png"
        },
        MnWmV: {
            W: {
                m: 0
            },
            src: "img/day-tomato-tree2.png"
        },
        Mwm: 78,
        NVm: 5,
        Wvm: 0,
        vWV: 16,
        MMN: 1,
        z: NNn,
        wwW: 45
    }],
    NWm: particulesitems.tomato,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 50
};
nnv[object.nVvNw] = {
    loot: [Mv.rawsteak, Mv.animalfat, Mv.leather],
    mvW: [0.25, 0.85, 1],
    wmN: [item.hachet, item.stoneaxe, item.sulfuraxe],
    WMw: [1, 3, 4],
    WnW: 0,
    type: [{
        health: 250,
        W: {
            W: {
                m: 0
            },
            src: "img/day-boar-dead.png"
        },
        Mwm: 70,
        NVm: 5,
        Wvm: 0,
        vWV: 18,
        MMN: 1,
        z: NNn,
        wwW: 47
    }],
    NWm: particulesitems.blood,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 40
};
nnv[object.WmNvW] = {
    loot: [Mv.rawsteak, Mv.animaltendon, Mv.leather, Mv.animalfat],
    mvW: [0.28, 0.7, 0.85, 1],
    wmN: [item.hachet, item.stoneaxe, item.sulfuraxe],
    WMw: [1, 3, 4],
    WnW: 0,
    type: [{
        health: 200,
        W: {
            W: {
                m: 0
            },
            src: "img/day-deer-dead.png"
        },
        Mwm: 73,
        NVm: 5,
        Wvm: 0,
        vWV: 18,
        MMN: 1,
        z: NNn,
        wwW: 53
    }],
    NWm: particulesitems.blood,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 40
};
nnv[object.NNNNV] = {
    loot: [Mv.mushroom],
    mvW: [1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom1.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 2,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom2.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 2,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom3.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 2,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom4.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 2,
        MMN: 0,
        z: NNn,
        wwW: 32
    }],
    NWm: particulesitems.mushroom,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 40
};
nnv[object.MMWwv] = {
    loot: [Mv.antidoteflower],
    mvW: [1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-antidote-tree.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 1,
        MMN: 0,
        z: NNn,
        wwW: 32
    }],
    NWm: particulesitems.flower,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 1000
};
nnv[object.VvnNm] = {
    loot: [Mv.mushroom2],
    mvW: [1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom5.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom6.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom7.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom8.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }],
    NWm: particulesitems.mushroom2,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 40
};
nnv[object.VWMMv] = {
    loot: [Mv.mushroom3],
    mvW: [1],
    wmN: [-1],
    WMw: [1],
    WnW: 0,
    type: [{
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom9.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom10.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom11.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }, {
        health: 1,
        W: {
            W: {
                m: 0
            },
            src: "img/day-mushroom12.png"
        },
        Mwm: 18,
        NVm: 2,
        Wvm: 0,
        vWV: 6,
        MMN: 0,
        z: NNn,
        wwW: 32
    }],
    NWm: particulesitems.mushroom3,
    impactaudio: SOUNDID.VNv,
    destroyaudio: SOUNDID.VNv,
    mW: 40
};
var wNWWn = [-26, 25, -7, 0];
var WVNvv = [-28, -15, 25, 0];
var NWWWW = [{
    src: "img/day-campfire-light-1.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-campfire-light-2.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-campfire-light-3.png",
    W: {
        m: 0
    }
}, {
    src: "img/day-campfire-light-down.png",
    W: {
        m: 0
    }
}, {
    src: "img/ghoul-hurt.png",
    W: {
        m: 0
    }
}, {
    src: "img/heal-player.png",
    W: {
        m: 0
    }
}];
var karma = [{
    src: "img/karma4.png",
    W: {
        m: 0
    }
}, {
    src: "img/karma3.png",
    W: {
        m: 0
    }
}, {
    src: "img/karma2.png",
    W: {
        m: 0
    }
}, {
    src: "img/karma1.png",
    W: {
        m: 0
    }
}, {
    src: "img/karma0.png",
    W: {
        m: 0
    }
}, {
    src: "img/karma5.png",
    W: {
        m: 0
    }
}];
var COUNTER = 0;
var vMW = {
    mVVvn: COUNTER++,
    mVmnm: COUNTER++,
    MwWnV: COUNTER++,
    wMmmw: COUNTER++,
    vVMwW: COUNTER++,
    MnmmV: COUNTER++,
    VnMvm: COUNTER++,
    MMVVM: COUNTER++,
    nvMmm: COUNTER++,
    VVVnN: COUNTER++,
    vNmvW: COUNTER++,
    vnMwV: COUNTER++
};
var nWW = [];
var vnwNv = {};
try {
    if (VwM !== window.undefined) {
        nN = {
            v: 0,
            b: 0,
            V: -1,
            r: 0
        };
        vw = {
            v: item.woodfloor1,
            b: 0,
            V: -1,
            r: 0
        };
        wV = {
            v: item.woodfloor2,
            b: 0,
            V: -1,
            r: 0
        };
        VWV = {
            v: item.stonefloor1,
            b: 0,
            V: -1,
            r: 0
        };
        Wnm = {
            v: item.stonefloor2,
            b: 0,
            V: -1,
            r: 0
        };
        nNMnW = {
            v: item.mustardfloor,
            b: 0,
            V: -1,
            r: 0
        };
        VvWvw = {
            v: item.redfloor,
            b: 0,
            V: -1,
            r: 0
        };
        Wmnvv = {
            v: 0,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        wNM = {
            v: item.woodfloor1,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        mNV = {
            v: item.woodfloor2,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        wWvvv = {
            v: item.stonefloor1,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        MVMvM = {
            v: item.stonefloor2,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        nNMmm = {
            v: item.mustardfloor,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        VWWVm = {
            v: item.redfloor,
            b: item.woodenwall,
            V: -1,
            r: 0
        };
        vWW = {
            v: 0,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        MM = {
            v: item.woodfloor1,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        VVN = {
            v: item.woodfloor2,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        wnNNV = {
            v: item.stonefloor1,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        mVW = {
            v: item.stonefloor2,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        mMnMV = {
            v: item.mustardfloor,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        NmwVM = {
            v: item.redfloor,
            b: item.stonewall,
            V: -1,
            r: 0
        };
        vNM = {
            v: 0,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        nMv = {
            v: item.woodfloor1,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        nNW = {
            v: item.woodfloor2,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        MWn = {
            v: item.stonefloor1,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        Vvn = {
            v: item.stonefloor2,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        nvvmv = {
            v: item.mustardfloor,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        nNNvw = {
            v: item.redfloor,
            b: item.steelwall,
            V: -1,
            r: 0
        };
        MN = {
            v: 0,
            b: item.stonecave,
            V: -1,
            r: 0
        };
        nvNMN = {
            v: item.stonefloor1,
            b: item.stonecave,
            V: -1,
            r: 0
        };
        wmMmV = {
            v: item.stonefloor2,
            b: item.stonecave,
            V: -1,
            r: 0
        };
        MWVnn = {
            v: 0,
            b: item.bunkerwall,
            V: -1,
            r: 0
        };
        vWNVw = {
            v: item.stonefloor1,
            b: item.bunkerwall,
            V: -1,
            r: 0
        };
        MNm = {
            v: item.stonefloor2,
            b: item.bunkerwall,
            V: -1,
            r: 0
        };
        nWW[vMW.mVVvn] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, wNM, wNM, wNM, {
                    v: 62,
                    b: 30,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 30,
                    V: -1,
                    r: 2
                }, wNM, wNM],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 0,
                    r: 3
                }, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 1
                }, wNM],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 22,
                    r: 3
                }, vw, vw, vw, vw, {
                    v: 62,
                    b: 30,
                    V: -1,
                    r: 3
                }],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 1
                }, vw, vw, vw, {
                    v: 62,
                    b: 30,
                    V: -1,
                    r: 3
                }],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 17,
                    r: 0
                }, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 19,
                    r: 2
                }, wNM],
                [nN, wNM, wNM, wNM, wNM, wNM, wNM, wNM]
            ]
        };
        nWW[vMW.mVmnm] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, VVN, VVN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN],
                [nN, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 28,
                    r: 3
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 21,
                    r: 1
                }, VVN],
                [nN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, VVN, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 1
                }, vw, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 15,
                    r: 1
                }, VVN],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, VVN, wV, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 1
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 5,
                    r: 1
                }, VVN],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, MM, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, MM],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 2
                }, vw, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 1
                }, MM],
                [nN, nN, MM, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 0
                }, wV, wV, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 1,
                    r: 1
                }, MM],
                [nN, nN, MM, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 2,
                    r: 1
                }, MM],
                [nN, nN, MM, {
                    v: 67,
                    b: 71,
                    V: 20,
                    r: 0
                }, wV, wV, vw, vw, vw, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 1
                }, MM, MM, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, MM, MM],
                [nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 2
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }]
            ]
        };
        nWW[vMW.MwWnV] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, nN, nN, MM, MM, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, MM, MM, VVN, VVN, VVN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nN, nN, MM, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 0
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 3
                }, MM, {
                    v: 67,
                    b: 71,
                    V: 5,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 1
                }, VVN, vw, vw, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, MM, {
                    v: 67,
                    b: 71,
                    V: 20,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 16,
                    r: 2
                }, MM, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 1
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, vw, {
                    v: 62,
                    b: 71,
                    V: 2,
                    r: 1
                }, MM, {
                    v: 67,
                    b: 71,
                    V: 11,
                    r: 3
                }, wV, wV, wV, MM, wV, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 2
                }, VVN, VVN, VVN, vWW],
                [nN, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 3
                }, wV, wV, VVN, {
                    v: 67,
                    b: 71,
                    V: 25,
                    r: 2
                }, {
                    v: 67,
                    b: 71,
                    V: 3,
                    r: 1
                }, VVN],
                [nN, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, MM, wV, wV, {
                    v: 67,
                    b: 51,
                    V: -1,
                    r: 1
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 18,
                    r: 2
                }, VVN],
                [nN, vw, vw, vWW, {
                    v: 62,
                    b: 71,
                    V: 3,
                    r: 3
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 16,
                    r: 2
                }, MM, VVN, VVN, VVN, VVN, VVN, VVN],
                [nN, vw, {
                    v: 62,
                    b: 71,
                    V: 26,
                    r: 0
                }, MM, {
                    v: 0,
                    b: 71,
                    V: 4,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 22,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 1
                }, MM, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 1
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }],
                [nN, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 1
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 1
                }, MM, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, MM, MM, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, MM, MM, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 1
                }]
            ]
        };
        nWW[vMW.wMmmw] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, VVN],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 2
                }, nN, nN, nN, nN, nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 21,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 28,
                    r: 0
                }, VVN],
                [nN, MM, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, MM, MM, nN, VVN, wV, wV, VVN],
                [nN, MM, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 0
                }, vw, vw, vw, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 0
                }, VVN, VVN],
                [nN, MM, vw, {
                    v: 62,
                    b: 71,
                    V: 2,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 1
                }, MM, vw, vw, vw, vw, MM],
                [nN, MM, {
                    v: 62,
                    b: 71,
                    V: 0,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 1
                }, MM, vw, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 5,
                    r: 2
                }, vw, MM],
                [nN, MM, vw, {
                    v: 62,
                    b: 71,
                    V: 1,
                    r: 2
                }, vw, vw, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, MM, MM, MM, MM, VVN],
                [nN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, vw, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 3
                }, wV, wV, VVN],
                [nN, MM, vw, vw, vw, vw, vw, vw, vw, VVN, {
                    v: 67,
                    b: 71,
                    V: 25,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 18,
                    r: 3
                }, VVN],
                [nN, MM, MM, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, MM, MM, MM, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, VVN],
                [nN, MM, {
                    v: 62,
                    b: 71,
                    V: 20,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 11,
                    r: 0
                }, vw, vw, MM, {
                    v: 67,
                    b: 71,
                    V: 24,
                    r: 0
                }, wV, wV, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }],
                [nN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, MM, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 0
                }, wV, wV, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }],
                [nN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, MM, MM, MM, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }],
                [nN, MM, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 3
                }, vw, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 2
                }, MM],
                [nN, MM, MM, MM, MM, MM, VVN, MM, MM]
            ]
        };
        nWW[vMW.vVMwW] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, VVN, VVN, VVN, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 5,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 11,
                    r: 1
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 0
                }, wV, wV, VVN],
                [nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 0
                }, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 19,
                    r: 2
                }, VVN, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 21,
                    r: 1
                }, VVN],
                [nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 9,
                    r: 3
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 1
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 26,
                    r: 3
                }, VVN, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 28,
                    r: 1
                }, VVN],
                [nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 0
                }, wV, wV, wV, wV, VVN, wV, VVN, VVN, VVN],
                [nN, VVN, {
                    v: 67,
                    b: 71,
                    V: 9,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 10,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 3
                }, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 2
                }, VVN],
                [nN, VVN, VVN, VVN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, VVN, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 0
                }, VVN, VVN, VVN],
                [nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 3
                }]
            ]
        };
        nWW[vMW.MnmmV] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM],
                [nN, MM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 0
                }, vw, MM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 1,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 2,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 1
                }, MM, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 1
                }],
                [nN, MM, wV, wV, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 2
                }, vw, MM, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 0
                }, vw, vw, vw, vw, vw, MM],
                [nN, MM, {
                    v: 67,
                    b: 71,
                    V: 39,
                    r: 3
                }, wV, wV, wV, wV, wV, wV, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, wV, wV, wV, wV, wV, wV, {
                    v: 67,
                    b: 51,
                    V: -1,
                    r: 1
                }],
                [nN, MM, {
                    v: 85,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 85,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, wV, wV, wV, wV, wV, wV, {
                    v: 67,
                    b: 51,
                    V: -1,
                    r: 3
                }],
                [nN, MM, {
                    v: 85,
                    b: 71,
                    V: 28,
                    r: 3
                }, Wnm, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 40,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 1
                }, MM],
                [nN, MM, {
                    v: 85,
                    b: 71,
                    V: 21,
                    r: 3
                }, Wnm, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 1
                }, MM],
                [nN, MM, MM, MM, MM, MM, MM, MM, MM, mVW, {
                    v: 0,
                    b: 71,
                    V: 41,
                    r: 2
                }, mVW, mVW, mVW, MM, MM, MM],
                [nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 3
                }, nN, nN, nN, mVW, Wnm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 18,
                    r: 2
                }, mVW, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, mVW, {
                    v: 85,
                    b: 71,
                    V: 25,
                    r: 1
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 19,
                    r: 2
                }, mVW],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, mVW, mVW, mVW, mVW, mVW]
            ]
        };
        nWW[vMW.VnMvm] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, wNM, wNM, wNM, {
                    v: 67,
                    b: 50,
                    V: -1,
                    r: 2
                }, wNM, wNM, wNM],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 0
                }, wV, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 6,
                    r: 0
                }, wNM],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 2
                }, vw, wV, vw, vw, wNM],
                [nN, {
                    v: 67,
                    b: 50,
                    V: -1,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 144,
                    V: -1,
                    r: 0
                }, wV, {
                    v: 67,
                    b: 50,
                    V: -1,
                    r: 3
                }],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 28,
                    r: 3
                }, vw, wV, vw, {
                    v: 62,
                    b: 71,
                    V: 19,
                    r: 2
                }, wNM],
                [nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 21,
                    r: 3
                }, vw, wV, vw, {
                    v: 62,
                    b: 71,
                    V: 26,
                    r: 2
                }, wNM],
                [nN, wNM, wNM, wNM, {
                    v: 67,
                    b: 50,
                    V: -1,
                    r: 0
                }, wNM, wNM, wNM]
            ]
        };
        nWW[vMW.MMVVM] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, vWW, vWW, vWW, vWW, vWW, vWW, vWW, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 16,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 1
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 0
                }, vWW],
                [nN, vWW, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, vw, vw, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 1
                }, vWW],
                [nN, vWW, vWW, vWW, {
                    v: 84,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 84,
                    b: 31,
                    V: -1,
                    r: 2
                }, vWW, vWW, vWW, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 1
                }],
                [nN, vWW, {
                    v: 84,
                    b: 71,
                    V: 8,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 8,
                    r: 0
                }, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 8,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 8,
                    r: 0
                }, vWW, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }],
                [nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }]
            ]
        };
        nWW[vMW.nvMmm] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, wV, {
                    v: 67,
                    b: 148,
                    V: -1,
                    r: 0
                }, wV, wV, wV, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 148,
                    V: -1,
                    r: 3
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 3
                }],
                [nN, nNW, {
                    v: 67,
                    b: 149,
                    V: -1,
                    r: 0
                }, nNW, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 0
                }, nNW, {
                    v: 67,
                    b: 149,
                    V: -1,
                    r: 0
                }, nMv, nMv, vNM, vNM, vNM, vNM],
                [nN, vNM, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 151,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 143,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 143,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, nMv, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 28,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 28,
                    r: 0
                }, vNM, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 3
                }],
                [nN, vNM, vw, wV, wV, wV, wV, {
                    v: 62,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 146,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 32,
                    V: -1,
                    r: 3
                }, VWV, VWV, VWV, vNM],
                [nN, vNM, {
                    v: 62,
                    b: 71,
                    V: 4,
                    r: 3
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, wV, {
                    v: 62,
                    b: 71,
                    V: 3,
                    r: 1
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, vNM, vNM, Wnm, Wnm, vNM],
                [nN, vNM, {
                    v: 62,
                    b: 71,
                    V: 3,
                    r: 3
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, wV, {
                    v: 62,
                    b: 71,
                    V: 4,
                    r: 1
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 71,
                    V: 21,
                    r: 3
                }, {
                    v: 85,
                    b: 32,
                    V: -1,
                    r: 3
                }, Wnm, Wnm, vNM],
                [nN, vNM, vw, wV, wV, wV, wV, vw, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, vNM, vNM, vNM, vNM, vNM],
                [nN, vNM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 3
                }, vw, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 3
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, vNM],
                [nN, nNW, nNW, nNW, {
                    v: 67,
                    b: 52,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 52,
                    V: -1,
                    r: 2
                }, nNW, nNW, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, nNW],
                [nN, nNW, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 1
                }, wV, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 16,
                    r: 1
                }, {
                    v: 67,
                    b: 144,
                    V: -1,
                    r: 3
                }, nNW],
                [nN, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 1
                }, wV, vw, vw, vw, wV, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 0
                }, wV, nNW],
                [nN, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 1
                }, wV, {
                    v: 62,
                    b: 71,
                    V: 4,
                    r: 3
                }, vw, vw, wV, {
                    v: 67,
                    b: 71,
                    V: 9,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 10,
                    r: 1
                }, nNW, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 3
                }],
                [nN, nNW, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 0
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 3,
                    r: 2
                }, wV, wV, wV, nNW, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 2
                }],
                [nN, nNW, {
                    v: 67,
                    b: 71,
                    V: 18,
                    r: 0
                }, wV, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 3
                }, nNW],
                [nN, nNW, nNW, nNW, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 0
                }, nNW, nNW, nNW, nNW]
            ]
        };
        nWW[vMW.VVVnN] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 151,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 151,
                    V: -1,
                    r: 0
                }],
                [nN, Wmnvv, Wmnvv, {
                    v: 0,
                    b: 30,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 30,
                    V: -1,
                    r: 2
                }, Vvn, Vvn, {
                    v: 67,
                    b: 149,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 149,
                    V: -1,
                    r: 0
                }, Vvn],
                [nN, Wmnvv, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 3
                }, nN, nN, Vvn, {
                    v: 67,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 67,
                    b: 143,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 143,
                    V: -1,
                    r: 1
                }, Vvn, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 2
                }],
                [nN, Wmnvv, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 3
                }, Vvn, {
                    v: 67,
                    b: 71,
                    V: 10,
                    r: 2
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }, wV, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }, Vvn, Vvn, Vvn],
                [nN, Wmnvv, {
                    v: 0,
                    b: 144,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 144,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 144,
                    V: -1,
                    r: 3
                }, Vvn, wV, wV, wV, wV, {
                    v: 62,
                    b: 71,
                    V: 20,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 11,
                    r: 0
                }, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }],
                [nN, Vvn, {
                    v: 85,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 149,
                    V: -1,
                    r: 0
                }, Vvn, {
                    v: 62,
                    b: 32,
                    V: -1,
                    r: 2
                }, nMv, {
                    v: 67,
                    b: 71,
                    V: 8,
                    r: 0
                }, wV, vw, vw, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }],
                [nN, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 1
                }, {
                    v: 85,
                    b: 147,
                    V: -1,
                    r: 2
                }, {
                    v: 85,
                    b: 146,
                    V: -1,
                    r: 2
                }, {
                    v: 85,
                    b: 140,
                    V: -1,
                    r: 2
                }, Vvn, vw, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }, wV, wV, vw, vw, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }],
                [nN, Vvn, {
                    v: 85,
                    b: 71,
                    V: 31,
                    r: 0
                }, {
                    v: 85,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 85,
                    b: 146,
                    V: -1,
                    r: 1
                }, {
                    v: 85,
                    b: 150,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 5,
                    r: 2
                }, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 0,
                    r: 2
                }, wV, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 0
                }, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }],
                [nN, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, {
                    v: 85,
                    b: 32,
                    V: -1,
                    r: 2
                }, Vvn, Vvn, Vvn],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, Vvn, {
                    v: 85,
                    b: 71,
                    V: 28,
                    r: 3
                }, Wnm, Wnm, Vvn, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, Vvn, {
                    v: 85,
                    b: 71,
                    V: 21,
                    r: 3
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 18,
                    r: 3
                }, Vvn],
                [nN, nN, nN, nN, nN, nN, Vvn, Vvn, Vvn, Vvn, Vvn]
            ]
        };
        nWW[vMW.vNmvW] = {
            width: 0,
            height: 0,
            nVv: __RADIATION__,
            Nn: [
                [nN],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 3
                }, nN, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 3
                }, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 24,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nNW, nNW, nNW, nNW, nNW, nNW, nNW, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, {
                    v: 85,
                    b: 71,
                    V: 37,
                    r: 1
                }, {
                    v: 85,
                    b: 71,
                    V: 28,
                    r: 0
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 31,
                    r: 1
                }, {
                    v: 85,
                    b: 71,
                    V: 32,
                    r: 1
                }, Vvn, {
                    v: 85,
                    b: 71,
                    V: 37,
                    r: 1
                }, Wnm, Wnm, Vvn, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nNW, vw, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 3
                }, wV, wV, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 2
                }, nNW, MWn, MWn, MWn, MWn],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, Wnm, Wnm, Wnm, Wnm, Wnm, Vvn, Wnm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 36,
                    r: 1
                }, Vvn, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, nNW, vw, {
                    v: 62,
                    b: 71,
                    V: 40,
                    r: 2
                }, wV, wV, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 2
                }, nNW, {
                    v: 84,
                    b: 71,
                    V: 26,
                    r: 3
                }, {
                    v: 84,
                    b: 71,
                    V: 17,
                    r: 3
                }, VWV, MWn],
                [nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, MWn, MWn, {
                    v: 84,
                    b: 52,
                    V: -1,
                    r: 0
                }, MWn, MWn, Vvn, Vvn, MWn, {
                    v: 85,
                    b: 71,
                    V: 41,
                    r: 0
                }, MWn, {
                    v: 85,
                    b: 71,
                    V: 41,
                    r: 0
                }, Vvn, vNM, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 151,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, vw, nNW, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 18,
                    r: 2
                }, MWn],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, VWV, VWV, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 35,
                    r: 2
                }, {
                    v: 84,
                    b: 71,
                    V: 35,
                    r: 2
                }, VWV, VWV, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 35,
                    r: 2
                }, {
                    v: 84,
                    b: 71,
                    V: 35,
                    r: 2
                }, VWV, VWV, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 33,
                    r: 2
                }, Vvn, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 151,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, vw, {
                    v: 67,
                    b: 71,
                    V: 41,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 18,
                    r: 2
                }, MWn],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                    v: 84,
                    b: 71,
                    V: 9,
                    r: 0
                }, VWV, VWV, VWV, VWV, VWV, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 1
                }, VWV, VWV, VWV, VWV, VWV, VWV, {
                    v: 85,
                    b: 71,
                    V: 33,
                    r: 2
                }, Vvn, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, nNW, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 2
                }, nNW, {
                    v: 84,
                    b: 71,
                    V: 26,
                    r: 2
                }, VWV, {
                    v: 84,
                    b: 71,
                    V: 16,
                    r: 2
                }, MWn, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 1
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                    v: 84,
                    b: 71,
                    V: 10,
                    r: 2
                }, VWV, VWV, VWV, MWn, MWn, {
                    v: 84,
                    b: 149,
                    V: -1,
                    r: 2
                }, {
                    v: 85,
                    b: 150,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 150,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 149,
                    V: -1,
                    r: 2
                }, MWn, MWn, VWV, VWV, Vvn, MWn, Vvn, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nNW, nNW, nNW, nNW, {
                    v: 0,
                    b: 52,
                    V: -1,
                    r: 0
                }, nNW, nNW, MWn, MWn, MWn, MWn],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, MWn, MWn, {
                    v: 84,
                    b: 71,
                    V: 33,
                    r: 0
                }, VWV, MWn, {
                    v: 84,
                    b: 71,
                    V: 32,
                    r: 0
                }, {
                    v: 84,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 85,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 142,
                    V: -1,
                    r: 2
                }, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 2
                }, {
                    v: 84,
                    b: 150,
                    V: -1,
                    r: 1
                }, VWV, {
                    v: 84,
                    b: 71,
                    V: 33,
                    r: 2
                }, Vvn, {
                    v: 0,
                    b: 71,
                    V: 37,
                    r: 1
                }, {
                    v: 0,
                    b: 71,
                    V: 38,
                    r: 1
                }, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, VWV, VWV, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                    v: 84,
                    b: 71,
                    V: 22,
                    r: 0
                }, VWV, MWn, VWV, {
                    v: 84,
                    b: 71,
                    V: 34,
                    r: 3
                }, Wnm, {
                    v: 85,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 84,
                    b: 71,
                    V: 34,
                    r: 3
                }, VWV, MWn, VWV, {
                    v: 84,
                    b: 71,
                    V: 38,
                    r: 0
                }, Vvn, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 32,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 24,
                    r: 0
                }],
                [nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 24,
                    r: 0
                }, nN, MWn, vNM, {
                    v: 84,
                    b: 32,
                    V: -1,
                    r: 0
                }, MWn, {
                    v: 84,
                    b: 142,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 146,
                    V: -1,
                    r: 1
                }, {
                    v: 85,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 142,
                    V: -1,
                    r: 1
                }, MWn, {
                    v: 84,
                    b: 32,
                    V: -1,
                    r: 0
                }, vNM, Vvn, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 35,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 31,
                    r: 0
                }],
                [nN, nN, nN, Vvn, Vvn, Vvn, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 3
                }, Wnm, Wnm, MWn, {
                    v: 84,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 34,
                    r: 1
                }, {
                    v: 85,
                    b: 140,
                    V: -1,
                    r: 2
                }, Wnm, {
                    v: 84,
                    b: 71,
                    V: 34,
                    r: 1
                }, {
                    v: 84,
                    b: 140,
                    V: -1,
                    r: 2
                }, MWn, Wnm, Wnm, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 1
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, nN, nN, nN, vw],
                [nN, nN, nN, Vvn, {
                    v: 85,
                    b: 71,
                    V: 33,
                    r: 1
                }, {
                    v: 85,
                    b: 71,
                    V: 33,
                    r: 1
                }, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 2
                }, VWV, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 1
                }, {
                    v: 84,
                    b: 145,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 142,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 147,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 142,
                    V: -1,
                    r: 1
                }, {
                    v: 84,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, VWV, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 1
                }, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, mNV, mNV, {
                    v: 67,
                    b: 30,
                    V: -1,
                    r: 2
                }, mNV, mNV, vw, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }],
                [nN, nN, nN, MWn, VWV, VWV, MWn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 32,
                    V: -1,
                    r: 3
                }, Wnm, Wnm, Wnm, MWn, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, MWn, Wnm, Wnm, Wnm, {
                    v: 0,
                    b: 32,
                    V: -1,
                    r: 1
                }, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, mNV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 6,
                    r: 1
                }, mNV, vw, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, nN, nN, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, nN, {
                    v: 84,
                    b: 71,
                    V: 41,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 41,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 0
                }, VWV, VWV, VWV, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, VWV, VWV, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, {
                    v: 84,
                    b: 144,
                    V: -1,
                    r: 1
                }, VWV, VWV, VWV, {
                    v: 85,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 1
                }, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 30,
                    V: -1,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 19,
                    r: 2
                }, wNM, vw, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, nN, nN, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, nN, Vvn, {
                    v: 85,
                    b: 71,
                    V: 36,
                    r: 2
                }, {
                    v: 85,
                    b: 71,
                    V: 37,
                    r: 3
                }, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 85,
                    b: 71,
                    V: 39,
                    r: 0
                }, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 35,
                    r: 1
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 1
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, mNV, {
                    v: 67,
                    b: 71,
                    V: 8,
                    r: 3
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 0,
                    r: 1
                }, mNV, vw, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 1
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }, Vvn, Vvn, Vvn, Vvn, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 32,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 32,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 70,
                    V: -1,
                    r: 1
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, mNV, mNV, mNV, mNV, mNV, vw, VVN, VVN, VVN, VVN, nN, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, vw, vw, vw, vw, vw, vw, vw, VVN, vw, {
                    v: 62,
                    b: 71,
                    V: 21,
                    r: 1
                }, MM, wV, wV, wV, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [{
                    v: 0,
                    b: 86,
                    V: 26,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 33,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 32,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 33,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 32,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 24,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, MM, MM, {
                    v: 67,
                    b: 51,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, VVN],
                [{
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 28,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 13,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 1
                }, wV, wV, VVN, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 3
                }, wV, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [{
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 27,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, vw, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, wV, wV, VVN, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }],
                [{
                    v: 0,
                    b: 86,
                    V: 30,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 42,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 43,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 34,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, wV, wV, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, VVN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 1
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 7,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 0
                }, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 15,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 4,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 3,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 14,
                    r: 0
                }, wV, wV, wV, wV, wV, VVN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }],
                [nN, nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 26,
                    r: 1
                }, vw, vw, wNM, {
                    v: 62,
                    b: 71,
                    V: 16,
                    r: 2
                }, vw, vw, wNM, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 15,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, nN, nMv, nMv, nMv, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, nMv, nMv, nMv, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 4,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 7,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 3,
                    r: 1
                }, wV, vw, vw, vw, wV, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, wNM, {
                    v: 62,
                    b: 71,
                    V: 17,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 22,
                    r: 1
                }, wNM, {
                    v: 62,
                    b: 71,
                    V: 17,
                    r: 2
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 15,
                    r: 1
                }, wNM, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, nMv, {
                    v: 62,
                    b: 71,
                    V: 16,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 1
                }, vw, vw, vw, nMv, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, wV, wV, wV, wV, wV, vw, vw, vw, wV, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, wNM, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 0,
                    r: 1
                }, wNM, {
                    v: 62,
                    b: 71,
                    V: 1,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 1
                }, wNM, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, vNM, MWn, MWn, nMv, vw, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 27,
                    r: 2
                }, nMv, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 8,
                    r: 2
                }, {
                    v: 67,
                    b: 71,
                    V: 27,
                    r: 3
                }, wV, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 2
                }, VVN],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, wNM, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 2
                }, vw, vw, wNM, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 2
                }, Wmnvv, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 2
                }, MWn, {
                    v: 84,
                    b: 71,
                    V: 16,
                    r: 1
                }, {
                    v: 84,
                    b: 71,
                    V: 19,
                    r: 1
                }, MWn, {
                    v: 62,
                    b: 32,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 70,
                    V: -1,
                    r: 0
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 2
                }, nMv, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, VVN, VVN, VVN, VVN, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 0
                }, VVN, VVN, VVN, VVN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 1
                }],
                [nN, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }, Wmnvv, wNM, wNM, wNM, wNM, wNM, wNM, Wmnvv, Wmnvv, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 0
                }, MWn, VWV, VWV, MWn, wV, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, vw, vw, vw, nMv, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, VWV, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 0
                }, VVN, {
                    v: 62,
                    b: 71,
                    V: 20,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 28,
                    r: 0
                }, MM, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 20,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 1
                }, MM],
                [nN, nN, nN, MM, MM, MM, MM, MM, MM, vw, vw, vw, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, MWn, VWV, VWV, nNW, wV, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, vw, vw, vw, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 0
                }, VWV, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 1
                }, vw, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 3
                }, vw, vw, vw, vw, vw, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 6,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 15,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 5,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 2
                }, vw, vw, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 16,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, MWn, {
                    v: 84,
                    b: 71,
                    V: 18,
                    r: 3
                }, VWV, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 40,
                    r: 2
                }, vw, vw, vw, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, {
                    v: 84,
                    b: 151,
                    V: -1,
                    r: 3
                }, VWV, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 143,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 3
                }, vw, vw, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 3
                }, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nN, nN, MM, vw, vw, vw, vw, MM, VVN, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, VVN, VVN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 13,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, MWn, MWn, MWn, nNW, {
                    v: 67,
                    b: 144,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 39,
                    r: 2
                }, nMv, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, VWV, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 0
                }, MM, MM, MM, MM, MM, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 2
                }, VVN, VVN, VVN, VVN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }],
                [nN, nN, nN, MM, {
                    v: 62,
                    b: 71,
                    V: 0,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 2,
                    r: 0
                }, vw, vw, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, wV, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 0
                }, VVN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, nNW, {
                    v: 67,
                    b: 148,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 151,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 151,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 27,
                    r: 2
                }, nMv, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, VVN, {
                    v: 67,
                    b: 71,
                    V: 16,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 26,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 2
                }, {
                    v: 67,
                    b: 71,
                    V: 17,
                    r: 1
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }],
                [nN, nN, nN, MM, vw, vw, vw, vw, MM, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 0
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 2
                }, VVN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, nN, nNW, nNW, nNW, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 3
                }, nMv, nMv, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, nN, nN, vw, vw, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }],
                [nN, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 1,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 8,
                    r: 2
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 2
                }, MM, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 2
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 20,
                    r: 2
                }, VVN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 23,
                    r: 0
                }, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, nN, nN, vw, vw, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 1
                }, wV, wV, wV, wV, wV, wV, {
                    v: 67,
                    b: 31,
                    V: -1,
                    r: 3
                }],
                [nN, nN, nN, MM, MM, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, MM, MM, VVN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 0
                }, VVN, VVN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, VWV, VWV, VWV, VWV, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 21,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 20,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 15,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 36,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 4,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 45,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 32,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 25,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 24,
                    r: 0
                }],
                [{
                    v: 0,
                    b: 86,
                    V: 17,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 4,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 5,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 3,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 37,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 35,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 29,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 31,
                    r: 0
                }],
                [{
                    v: 0,
                    b: 86,
                    V: 16,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 11,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 10,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 9,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 38,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 1,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 34,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, wV, wV, wV, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }, wV, wV, wV],
                [{
                    v: 0,
                    b: 86,
                    V: 40,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 0,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 39,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, nN, nN, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, MM, MM, vWW, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, MM, MM, MM, {
                    v: 0,
                    b: 71,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, wV, MM, {
                    v: 62,
                    b: 71,
                    V: 27,
                    r: 1
                }, {
                    v: 62,
                    b: 71,
                    V: 27,
                    r: 1
                }, vw, vw, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 1
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 1
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nNW, nNW, nNW, nNW, nNW, nNW, nNW, nNW, nMv, nMv, nMv, nMv, nMv, nMv, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, wV, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 1
                }, vw, vw, vw, vw, vw, {
                    v: 62,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 148,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }],
                [nN, nNW, {
                    v: 67,
                    b: 71,
                    V: 35,
                    r: 2
                }, wV, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 1
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 17,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 16,
                    r: 1
                }, nMv, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 3,
                    r: 1
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 22,
                    r: 2
                }, {
                    v: 62,
                    b: 71,
                    V: 20,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 11,
                    r: 2
                }, vw, MM, MM, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 1
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 111,
                    V: -1,
                    r: 1
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [nN, nNW, wV, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 149,
                    V: -1,
                    r: 2
                }, vNM, vNM, nMv, vw, vw, vw, vw, nMv, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 3
                }, VVN, VVN, MM, MM, MM, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 2
                }, MM, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 3
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 69,
                    V: -1,
                    r: 1
                }],
                [{
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 1
                }, nNW, wV, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 150,
                    V: -1,
                    r: 1
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 32,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, {
                    v: 0,
                    b: 69,
                    V: -1,
                    r: 2
                }, vWW, {
                    v: 62,
                    b: 71,
                    V: 14,
                    r: 0
                }, {
                    v: 62,
                    b: 71,
                    V: 5,
                    r: 0
                }, vw, vw, vw, vw, MM, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }, nN, wV, {
                    v: 67,
                    b: 71,
                    V: 45,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 45,
                    r: 0
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 1
                }, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 24,
                    r: 1
                }],
                [nN, nNW, wV, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 70,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 71,
                    V: 7,
                    r: 3
                }, vw, {
                    v: 62,
                    b: 32,
                    V: -1,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 0
                }, MM, vw, vw, vw, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 13,
                    r: 2
                }, MM, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }],
                [{
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 1
                }, nNW, wV, wV, {
                    v: 67,
                    b: 71,
                    V: 3,
                    r: 0
                }, {
                    v: 67,
                    b: 148,
                    V: -1,
                    r: 3
                }, nNW, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 147,
                    V: -1,
                    r: 3
                }, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 1
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, vw, vw, vw, nMv, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 0
                }, MM, {
                    v: 62,
                    b: 71,
                    V: 12,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 23,
                    r: 3
                }, vw, vw, {
                    v: 62,
                    b: 71,
                    V: 10,
                    r: 3
                }, {
                    v: 62,
                    b: 71,
                    V: 9,
                    r: 1
                }, MM, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 3
                }, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }],
                [{
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }, nNW, wV, vw, vw, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 0
                }, nNW, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 1
                }, vNM, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, vw, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 144,
                    V: -1,
                    r: 0
                }, nMv, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, MM, MM, MM, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 31,
                    V: -1,
                    r: 0
                }, MM, MM, MM, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 23,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 22,
                    r: 0
                }],
                [nN, nNW, wV, vw, vw, {
                    v: 67,
                    b: 71,
                    V: 10,
                    r: 0
                }, nNW, {
                    v: 67,
                    b: 71,
                    V: 14,
                    r: 3
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 0
                }, nMv, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 0
                }, nMv, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 0
                }, {
                    v: 62,
                    b: 149,
                    V: -1,
                    r: 0
                }, nMv, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 1
                }, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 1
                }, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 30,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 31,
                    r: 0
                }],
                [nN, nNW, {
                    v: 67,
                    b: 71,
                    V: 36,
                    r: 2
                }, {
                    v: 67,
                    b: 151,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 71,
                    V: 12,
                    r: 3
                }, {
                    v: 67,
                    b: 71,
                    V: 9,
                    r: 2
                }, nNW, {
                    v: 67,
                    b: 71,
                    V: 16,
                    r: 2
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 71,
                    V: 17,
                    r: 3
                }, {
                    v: 67,
                    b: 147,
                    V: -1,
                    r: 2
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 0
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 2
                }, vNM, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }],
                [nN, nNW, nNW, {
                    v: 67,
                    b: 150,
                    V: -1,
                    r: 2
                }, nNW, nNW, nNW, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 2
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 140,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 146,
                    V: -1,
                    r: 3
                }, {
                    v: 67,
                    b: 142,
                    V: -1,
                    r: 2
                }, wV, {
                    v: 67,
                    b: 71,
                    V: 23,
                    r: 2
                }, vNM, {
                    v: 0,
                    b: 71,
                    V: 24,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }],
                [nN, nN, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 2
                }, {
                    v: 0,
                    b: 71,
                    V: 16,
                    r: 1
                }, {
                    v: 0,
                    b: 71,
                    V: 17,
                    r: 1
                }, {
                    v: 0,
                    b: 71,
                    V: 26,
                    r: 1
                }, vNM, vNM, vNM, vNM, vNM, vNM, vNM, vNM, vNM, nN, {
                    v: 0,
                    b: 86,
                    V: 14,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 12,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 6,
                    r: 0
                }],
                [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                    v: 0,
                    b: 86,
                    V: 40,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 1,
                    r: 0
                }, {
                    v: 0,
                    b: 86,
                    V: 41,
                    r: 0
                }]
            ]
        };
        nWW[vMW.vnMwV] = {
            width: 0,
            height: 0,
            nVv: 0,
            Nn: [
                [nN],
                [nN, nN, nN, nN, nN, nN, MN, MN, MN, nN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MN, MN, nN, nN, nN, nN, nN, nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, nN, nN, nN, nN, MN, MNm, MNm, {
                    v: 85,
                    b: 52,
                    V: -1,
                    r: 2
                }, MNm, MNm, nN, nN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, nN, nN, MN, MN, MN, MN, MNm, Wnm, Wnm, Wnm, MNm, MN, nN, nN, MN, MN, MN, MN, MN, MN],
                [nN, nN, MN, MN, MN, MN, MNm, MNm, MNm, MNm, Wnm, Wnm, Wnm, MNm, MN, MN, nN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MN, MNm, {
                    v: 85,
                    b: 71,
                    V: 9,
                    r: 0
                }, {
                    v: 85,
                    b: 71,
                    V: 58,
                    r: 0
                }, MNm, {
                    v: 85,
                    b: 71,
                    V: 33,
                    r: 3
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 33,
                    r: 3
                }, MNm, MN, MN, nN, MN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MN, MNm, {
                    v: 85,
                    b: 71,
                    V: 10,
                    r: 2
                }, Wnm, MNm, MNm, VWV, vWNVw, vWNVw, MWVnn, MN, nN, nN, MN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MN, MNm, Wnm, Wnm, VWV, VWV, VWV, VWV, {
                    v: 84,
                    b: 71,
                    V: 51,
                    r: 1
                }, vWNVw, MN, MN, nN, nN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, MNm, MNm, MNm, MNm, VWV, VWV, VWV, VWV, vWNVw, MWVnn, MN, MN, nN, MN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, VWV, VWV, VWV, MNm, MNm, VWV, VWV, VWV, vWNVw, MNm, MNm, MN, nN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, VWV, MNm, VWV, VWV, VWV, VWV, MNm, Wnm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 55,
                    r: 2
                }, MNm, MN, nN, MN, MN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, VWV, MNm, MNm, MNm, MNm, VWV, MNm, {
                    v: 85,
                    b: 71,
                    V: 28,
                    r: 3
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 21,
                    r: 1
                }, MNm, MN, nN, nN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 23,
                    r: 1
                }, {
                    v: 85,
                    b: 71,
                    V: 53,
                    r: 3
                }, {
                    v: 85,
                    b: 71,
                    V: 56,
                    r: 2
                }, MNm, VWV, MNm, MNm, MNm, MNm, MNm, MN, nN, nN, MN, MN, MN],
                [nN, nN, nN, MN, MN, MNm, Wnm, Wnm, Wnm, {
                    v: 85,
                    b: 71,
                    V: 53,
                    r: 2
                }, MNm, VWV, VWV, Wnm, {
                    v: 85,
                    b: 71,
                    V: 51,
                    r: 0
                }, {
                    v: 85,
                    b: 71,
                    V: 48,
                    r: 0
                }, MNm, MN, MN],
                [nN, MN, MN, MN, MN, MNm, Wnm, Wnm, Wnm, Wnm, MNm, MNm, MNm, Wnm, Wnm, Wnm, MNm, MN, MN, MN],
                [nN, MN, MN, MN, MN, MNm, {
                    v: 85,
                    b: 71,
                    V: 20,
                    r: 3
                }, {
                    v: 85,
                    b: 71,
                    V: 11,
                    r: 2
                }, {
                    v: 85,
                    b: 71,
                    V: 49,
                    r: 3
                }, Wnm, {
                    v: 85,
                    b: 71,
                    V: 54,
                    r: 2
                }, MNm, MNm, {
                    v: 85,
                    b: 71,
                    V: 48,
                    r: 2
                }, {
                    v: 85,
                    b: 71,
                    V: 50,
                    r: 2
                }, {
                    v: 85,
                    b: 71,
                    V: 49,
                    r: 3
                }, MNm, MN, MN, MN, MN, MN, MN],
                [nN, nN, MN, MN, MN, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MN, MN, MN, MN, MN, MN],
                [nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                [nN, nN, nN, nN, MN, MN, MN, nN, nN, nN, nN, MN, MN, MN, MN, MN]
            ]
        };
    }
} catch (error) {};
for (var i = 0; i < nWW.length; i++) {
    var VnVmm = nWW[i];
    var vVNnW = nWW[i].Nn;
    VnVmm.height = vVNnW.length;
    for (var j = 0; j < vVNnW.length; j++)
        VnVmm.width = window.Math.max(vVNnW[j].length, VnVmm.width);
}
var VmwwM = [];
VmwwM[AREAS.firepart] = item.campfire;
VmwwM[AREAS.bbq] = item.campfirebbq;
VmwwM[AREAS.workbench] = item.workbench;
VmwwM[AREAS.researchbench] = item.researchbench;
VmwwM[AREAS.teslabench] = item.teslabench;
VmwwM[AREAS.smelter] = item.smelter;
VmwwM[AREAS.weavingmachine] = item.weavingmachine;
VmwwM[AREAS.composter] = item.composter;
VmwwM[AREAS.agitator] = item.agitator;
VmwwM[AREAS.extractor] = item.extractor;
var NWVnn = null;
var ENTITIES2 = null;
var NWwVV = null;
var mwwnn = null;
var MMNMn = null;
var vNNVn = null;
var VNVwN = null;
var MwWmN = "#\x33\x38\x35\x31\x33\x44";
var wwVWm = "#\x30\x42\x31\x44\x32\x33";
var nNnVn = [{
    id: item.stone,
    nM: 50,
    health: 255
}, {
    id: item.wood,
    nM: 100,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}];
var mvv = [];
COUNTER = 0;
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 20,
    health: 255
}, {
    id: item.wood,
    nM: 40,
    health: 255
}, {
    id: item.orange,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 20,
    health: 255
}, {
    id: item.wood,
    nM: 40,
    health: 255
}, {
    id: item.orange,
    nM: 3,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 30,
    health: 255
}, {
    id: item.wood,
    nM: 50,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.orange,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 30,
    health: 255
}, {
    id: item.wood,
    nM: 60,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.orange,
    nM: 5,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 40,
    health: 255
}, {
    id: item.wood,
    nM: 90,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stone,
    nM: 40,
    health: 255
}, {
    id: item.wood,
    nM: 150,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 2,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfire,
    nM: 1,
    health: 255
}, {
    id: item.steel,
    nM: 6,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 2,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.spear,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 3,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.bow,
    nM: 1,
    health: 255
}, {
    id: item.woodarrow,
    nM: 20,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.woodenwall,
    nM: 10,
    health: 255
}, {
    id: item.wooddoor,
    nM: 2,
    health: 255
}, {
    id: item.workbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.woodenwall,
    nM: 16,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 14,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.landmine,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 14,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.metalhelmet,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 14,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.stonepickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 16,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.chest,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 16,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.chest,
    nM: 1,
    health: 255
}, {
    id: item.workbench,
    nM: 2,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.hachet,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 16,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.chest,
    nM: 1,
    health: 255
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 16,
    health: 255
}, {
    id: item.stonedoor,
    nM: 2,
    health: 255
}, {
    id: item.chest,
    nM: 1,
    health: 255
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 2,
    health: 255
}, {
    id: item.stonewall,
    nM: 20,
    health: 255
}, {
    id: item.stonedoor,
    nM: 4,
    health: 255
}, {
    id: item.chest,
    nM: 2,
    health: 255
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}, {
    id: item.rawsteak,
    nM: 4,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.campfirebbq,
    nM: 2,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.stonedoor,
    nM: 6,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}, {
    id: item.seedorange,
    nM: 8,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.headscarf,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.stonedoor,
    nM: 6,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}, {
    id: item.seedorange,
    nM: 8,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.steelpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.headscarf,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.stonedoor,
    nM: 6,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.headscarf,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.stonedoor,
    nM: 6,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.stoneaxe,
    nM: 1,
    health: 255
}, {
    id: item.headscarf,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.headscarf,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.chapka,
    nM: 1,
    health: 255
}, {
    id: item.stonewall,
    nM: 26,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.chapka,
    nM: 1,
    health: 255
}, {
    id: item.steelwall,
    nM: 14,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.pistol,
    nM: 1,
    health: 20
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.chapka,
    nM: 1,
    health: 255
}, {
    id: item.steelwall,
    nM: 14,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.chest,
    nM: 3,
    health: 255
}, {
    id: item.deserteagle,
    nM: 1,
    health: 7
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.chapka,
    nM: 1,
    health: 255
}, {
    id: item.steelwall,
    nM: 14,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.dynamite,
    nM: 6,
    health: 255
}, {
    id: item.deserteagle,
    nM: 1,
    health: 7
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
mvv[COUNTER++] = [{
    id: item.sulfurpickaxe,
    nM: 1,
    health: 255
}, {
    id: item.sulfuraxe,
    nM: 1,
    health: 255
}, {
    id: item.chapka,
    nM: 1,
    health: 255
}, {
    id: item.steelwall,
    nM: 20,
    health: 255
}, {
    id: item.smelter,
    nM: 1,
    health: 255
}, {
    id: item.landmine,
    nM: 6,
    health: 255
}, {
    id: item.deserteagle,
    nM: 1,
    health: 7
}, {
    id: item.researchbench,
    nM: 1,
    health: 255
}];
COUNTER = 0;
var hostile = {
    yes: COUNTER++,
    no: COUNTER++
};
var VVv = [];
VVv[AIID.__NORMAL_GHOUL__] = {
    vmWVv: 700,
    WVVvW: 550,
    NNNMM: 0.5,
    Wnwvw: 1,
    mode: hostile.yes,
    vNWnv: ((2 * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 30,
    WnW: 0,
    wwW: 38,
    health: 160,
    speed: [0.12, 0.22],
    MvnwW: [0.14, 0.25],
    loot: [
        [item.animalfat, 4, Mv.animalfat]
    ],
    mMW: 1,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [8, 20],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 1200
};
VVv[AIID.__FAST_GHOUL__] = {
    vmWVv: 300,
    WVVvW: 150,
    NNNMM: 0.5,
    Wnwvw: 2,
    mode: hostile.yes,
    vNWnv: (((2 * 2) * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -40,
        src: "img/day-ghoul3-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 40,
        src: "img/day-ghoul3-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul3.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul3-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul3-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 18,
    WnW: 0,
    wwW: 38,
    health: 100,
    speed: [0.18, 0.28],
    MvnwW: [0.22, 0.38],
    loot: [
        [item.ghoulblood, 4, Mv.ghoulblood]
    ],
    mMW: 1,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [7, 14],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 1000
};
VVv[AIID.__EXPLOSIVE_GHOUL__] = {
    vmWVv: 500,
    WVVvW: 350,
    NNNMM: 0.5,
    Wnwvw: 4,
    mode: hostile.yes,
    vNWnv: (((3 * 2) * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -48,
        src: "img/day-ghoul4-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 48,
        src: "img/day-ghoul4-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul4.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul4-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul4-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 14,
    WnW: 0,
    wwW: 38,
    health: 100,
    speed: [0.12, 0.23],
    MvnwW: [0.14, 0.26],
    loot: [
        [item.sulfur, 4, Mv.sulfur],
        [item.animalfat, 4, Mv.animalfat],
        [item.junk, 4, Mv.junk]
    ],
    mMW: 1,
    WnW: 0,
    mwM: 1,
    mMNNv: 120,
    WWv: 500,
    WNWwM: 40,
    NMWWm: 50,
    damage: [6, 20],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 500
};
VVv[AIID.__RADIOACTIVE_GHOUL__] = {
    vmWVv: 500,
    WVVvW: 350,
    NNNMM: 0.5,
    Wnwvw: 8,
    mode: hostile.yes,
    vNWnv: (((4 * 2) * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -40,
        src: "img/day-ghoul2-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 40,
        src: "img/day-ghoul2-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul2.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul2-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul2-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 10,
    WnW: 0,
    wwW: 38,
    health: 160,
    speed: [0.12, 0.23],
    MvnwW: [0.14, 0.26],
    loot: [
        [item.uranium, 4, Mv.uranium]
    ],
    mMW: 1,
    WnW: __RADIATION__,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [5, 15],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 1500
};
VVv[AIID.__ARMORED_GHOUL__] = {
    vmWVv: 700,
    WVVvW: 550,
    NNNMM: 0.5,
    Wnwvw: 16,
    mode: hostile.yes,
    vNWnv: (((5 * 2) * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul1-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul1-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul1.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul1-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul1-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 14,
    WnW: 0,
    wwW: 38,
    health: 800,
    speed: [0.11, 0.21],
    MvnwW: [0.14, 0.24],
    loot: [
        [item.alloys, 4, Mv.alloys],
        [item.shapedmetal, 12, Mv.shapedmetal]
    ],
    mMW: 1,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [20, 50],
    Nwv: 20,
    WmW: ((4 * 8) * 60) * 1000,
    mW: 5000
};
VVv[AIID.__PUMPKIN_GHOUL__] = {
    vmWVv: 700,
    WVVvW: 550,
    NNNMM: 0.5,
    Wnwvw: 32,
    mode: hostile.yes,
    vNWnv: ((2 * 8) * 60) * 1000,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul5-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul5-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-ghoul5.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/ghoul5-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-ghoul5-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 0,
    WnW: 0,
    wwW: 38,
    health: 160,
    speed: [0.04, 0.04],
    loot: [
        [item.pumpkin, 4, Mv.pumpkin]
    ],
    mMW: 0,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [20, 30],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 100
};
VVv[AIID.__LAPABOT_REPAIR__] = {
    vmWVv: 700,
    WVVvW: 550,
    NNNMM: 0.5,
    Wnwvw: 0,
    mode: hostile.no,
    vNWnv: 0,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-lapabot-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-lapabot-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-lapabot.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/lapabot-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-lapabot-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 0,
    WnW: 0,
    wwW: 38,
    health: 600,
    speed: [0.08, 0.08],
    loot: [
        [item.shapedmetal, 4, Mv.shapedmetal]
    ],
    mMW: 0,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [30, 30],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 100
};
VVv[AIID.__HAL_BOT__] = {
    vmWVv: 550,
    WVVvW: 400,
    NNNMM: 0.5,
    Wnwvw: 0,
    mode: hostile.yes,
    vNWnv: 0,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 8,
        y: -45,
        src: "img/day-hal-bot-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 8,
        y: 45,
        src: "img/day-hal-bot-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-hal-bot.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/hal-bot-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-hal-bot-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 0,
    WnW: 0,
    wwW: 38,
    health: 800,
    speed: [0.12, 0.12],
    loot: [
        [item.shapedmetal, 4, Mv.shapedmetal]
    ],
    mMW: 0,
    WnW: 0,
    mwM: 0,
    mMNNv: 0,
    WWv: 0,
    WNWwM: 40,
    NMWWm: 50,
    damage: [30, 30],
    Nwv: 20,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 500
};
VVv[AIID.__TESLA_BOT__] = {
    vmWVv: 700,
    WVVvW: 550,
    NNNMM: 0.5,
    Wnwvw: 0,
    mode: hostile.yes,
    vNWnv: 0,
    draw: Render.MNN,
    Vw: 0.05,
    NVwvN: 6,
    mMM: {
        angle: 0,
        x: 18,
        y: -60,
        src: "img/day-tesla-bot-left-arm.png",
        W: {
            m: 0
        }
    },
    Mmv: {
        angle: 0,
        x: 18,
        y: 60,
        src: "img/day-tesla-bot-right-arm.png",
        W: {
            m: 0
        }
    },
    head: {
        src: "img/day-tesla-bot.png",
        W: {
            m: 0
        }
    },
    Mmm: {
        src: "img/tesla-bot-hurt.png",
        W: {
            m: 0
        }
    },
    wmm: {
        src: "img/day-tesla-bot-death.png",
        W: {
            m: 0
        }
    },
    Wvm: 0,
    vWV: 0,
    WnW: 0,
    wwW: 38,
    health: 3000,
    speed: [0.1, 0.1],
    loot: [
        [item.shapeduranium, 4, Mv.shapeduranium],
        [item.alloys, 4, Mv.alloys]
    ],
    mMW: 0,
    WnW: 0,
    mwM: 1,
    mMNNv: 100,
    WWv: 100,
    WNWwM: 40,
    NMWWm: 50,
    damage: [80, 80],
    Nwv: 40,
    WmW: ((2 * 8) * 60) * 1000,
    mW: 3000
};
try {
    if (VwM !== window.undefined) {
        VwM.item = item;
        VwM.nW = nW;
        VwM.nWW = nWW;
        VwM.vMW = vMW;
        VwM.items = items;
        VwM.VNN = VNN;
        VwM.Mv = Mv;
        VwM.object = object;
        VwM.nnv = nnv;
        VwM.AREAS = AREAS;
        VwM.SKILLS = SKILLS;
        VwM.mvv = mvv;
        VwM.nNnVn = nNnVn;
        VwM.VVv = VVv;
        VwM.AIID = AIID;
        VwM.BEHAVIOR = BEHAVIOR;
        for (var nMm = 0; nMm < 3; nMm++) {
            for (var i = 1; i < items.length; i++) {
                var idd = items[i];
                var WVn = idd.detail.WVn;
                if (WVn === window.undefined) continue;
                for (var j = 0; j < WVn.length; j++) {
                    var wwM = items[WVn[j][0]];
                    if (j === 0) idd.mW = 0;
                    idd.mW += wwM.mW * WVn[j][1];
                    WVn[j][2] = wwM.loot;
                }
                idd.mW = window.Math.floor(idd.mW / 4);
            }
        }
        for (var i = 0; i < VV.length; i++) {
            var idd = VV[i];
            var WVn = idd.detail.WVn;
            if (WVn === window.undefined) continue;
            for (var j = 0; j < WVn.length; j++) {
                var wwM = items[WVn[j][0]];
                if (j === 0) idd.mW = 0;
                idd.mW += wwM.mW * WVn[j][1];
                WVn[j][2] = wwM.loot;
            }
            idd.mW = window.Math.floor(idd.mW / 4);
        }
    }
} catch (error) {
    for (var i = 0; i < karma.length; i++) karma[i].W = CanvasUtils.loadImage(karma[i].src, karma[i].W);
    NWVnn = window.JSON.parse(window.JSON.stringify(items));
    NWwVV = window.JSON.parse(window.JSON.stringify(VNw));
    mwwnn = window.JSON.parse(window.JSON.stringify(VNN));
    ENTITIES2 = window.JSON.parse(window.JSON.stringify(ENTITIES));
    MMNMn = window.JSON.parse(window.JSON.stringify(nnv));
    vNNVn = window.JSON.parse(window.JSON.stringify(NWWWW));
    VNVwN = window.JSON.parse(window.JSON.stringify(VVv));

    function MMNMN(vNWwm, wnvNw, NvV, nWnNV) {
        for (var WmVNW in wnvNw) {
            var MmmVN = wnvNw[WmVNW];
            var nVW = vNWwm[WmVNW];
            if (nVW === window.undefined) {
                vNWwm[WmVNW] = MmmVN;
                continue;
            }
            if (typeof nVW === "object") MMNMN(nVW, MmmVN, NvV, nWnNV);
            else if (typeof nVW === "string") vNWwm[WmVNW] = nVW.replace(NvV, nWnNV);
        }
    };
    MMNMN(MMNMn, nnv, "day", "night");
    MMNMN(NWVnn, items, "day", "night");
    MMNMN(NWwVV, VNw, "day", "night");
    MMNMN(mwwnn, VNN, "day", "night");
    MMNMN(ENTITIES2, ENTITIES, "day", "night");
    MMNMN(vNNVn, NWWWW, "day", "night");
    MMNMN(VNVwN, VVv, "day", "night");

    function VnwWm(vNWwm) {
        for (var WmVNW in vNWwm) {
            var nVW = vNWwm[WmVNW];
            if ((typeof nVW === "object") && (nVW !== null)) {
                if (nVW.MWw !== window.undefined) {
                    var wVn = ENTITIES[INSplayers].mVNvN[nVW.nwm];
                    wVn.MWw = nVW.MWw;
                    wVn.wNV = nVW.wNV;
                    wVn.NVw = nVW.NVw;
                    wVn = ENTITIES2[INSplayers].mVNvN[nVW.nwm];
                    wVn.MWw = nVW.MWw;
                    wVn.wNV = nVW.wNV;
                    wVn.NVw = nVW.NVw;
                } else VnwWm(nVW);
            }
        }
    };
    VnwWm(items);
}


var vWn = (function() {
    var wwwvv = [237225, 303931, 166687, 229213, 217292, 205860, 182041, 273065];
    var wMw = [];
    var WvwmM = window.Math.floor(window.Math.random() * wwwvv.length);
    var mvnmN = 0;
    var mWWVV = 0;
    var vmwnm = 0;
    var mvVWW = 0.45;
    var VNWVM = 0;
    var NNwwM = 0;
    audio.wMm.end = new audio.mmn("audio/end.mp3", 0, true);
    audio.wMm.title = new audio.mmn("audio/title.mp3", 0, true);
    audio.wMm.vwMNW = new audio.mmn("audio/geiger.mp3", 0, true);
    audio.wMm.NvWWW = new audio.mmn("audio/ambient1.mp3", 0, true);
    audio.wMm.mWNVV = new audio.mmn("audio/ambient2.mp3", 0, true);
    audio.wMm.MWvmM = new audio.mmn("audio/ambient3.mp3", 0, true);
    audio.wMm.VWmmW = new audio.mmn("audio/ambient4.mp3", 0, true);
    audio.wMm.wNWMw = new audio.mmn("audio/ambient5.mp3", 0, true);
    audio.wMm.Nmwnw = new audio.mmn("audio/ambient6.mp3", 0, true);
    audio.wMm.wnMvV = new audio.mmn("audio/ambient7.mp3", 0, true);
    audio.wMm.MmmnV = new audio.mmn("audio/ambient8.mp3", 0, true);
    wMw.push(audio.wMm.NvWWW);
    wMw.push(audio.wMm.mWNVV);
    wMw.push(audio.wMm.MWvmM);
    wMw.push(audio.wMm.VWmmW);
    wMw.push(audio.wMm.wNWMw);
    wMw.push(audio.wMm.Nmwnw);
    wMw.push(audio.wMm.wnMvV);
    wMw.push(audio.wMm.MmmnV);
    audio.ww.open = new audio.mmn("audio/open.mp3", 1, false, 1);
    audio.ww.holditem = new audio.mmn("audio/drag.mp3", 1, false, 1);
    audio.ww.play = new audio.mmn("audio/play.mp3", 1, false, 1);
    audio.ww.nwVvN = new audio.mmn("audio/skill.mp3", 1, false, 1);
    audio.ww.nvV = new audio.mmn("audio/craft.mp3", 1, false, 1);
    audio.ww.button = new audio.mmn("audio/button.mp3", 1, false, 1);
    audio.ww.wWwnM = new audio.mmn("audio/throwLoot.mp3", 1, false, 1);
    audio.ww.nNwmw = new audio.mmn("audio/levelup.mp3", 1, false, 1);
    audio.ww.mwM = new audio.mmn("audio/explosion.mp3", 1, false, 1);
    audio.ww.NwMWW = new audio.mmn("audio/zipper-on.mp3", 0.7, false, 1);
    audio.ww.NwmVN = new audio.mmn("audio/zipper-off.mp3", 0.7, false, 1);
    audio.ww.WmnwN = [new audio.mmn("audio/eat-1s-0.mp3", 1, false, 1), new audio.mmn("audio/eat-1s-1.mp3", 1, false, 1), new audio.mmn("audio/eat-1s-2.mp3", 1, false, 1)];
    audio.ww.damage = [];
    for (var i = 1; i < SOUND.length; i++) audio.ww.damage[i] = new audio.mmn(SOUND[i], 1, false, 1);
    audio.ww.Nnn = [];
    var mNMNW = ENTITIES[INSplayers].mNMNW;
    for (var i = 0; i < mNMNW.length; i++) {
        var nV = mNMNW[i];
        if (nV.Nww === window.undefined) audio.ww.Nnn[i] = 0;
        else if (typeof nV.Nww === "number") audio.ww.Nnn[i] = nV.Nww;
        else {
            audio.ww.Nnn[i] = [];
            for (var j = 0; j < nV.Nww.length; j++) audio.ww.Nnn[i][j] = new audio.mmn(nV.Nww[j], 1, false, 1);
        }
    }
    if (audio.options.nNmMV === 1) {
        audio.vmv(wMw[WvwmM]);
        audio.vmv(audio.wMm.title);
    }
    for (var i = 0; i < audio.ww.Nnn.length; i++) {
        var Nww = audio.ww.Nnn[i];
        if (Nww === 1) audio.ww.Nnn[i] = audio.ww.WmnwN;
    }
    if (audio.options.VWVWW === 1) {
        audio.vmv(audio.ww.open);
        audio.vmv(audio.ww.play);
        audio.vmv(audio.ww.holditem);
        audio.vmv(audio.ww.nwVvN);
        audio.vmv(audio.ww.nvV);
        audio.vmv(audio.ww.button);
        audio.vmv(audio.ww.nNwmw);
        audio.vmv(audio.ww.mwM);
        for (var i = 0; i < audio.ww.WmnwN.length; i++) audio.vmv(audio.ww.WmnwN[i]);
        for (var i = 1; i < audio.ww.damage.length; i++) audio.vmv(audio.ww.damage[i]);
        for (var i = 0; i < audio.ww.Nnn.length; i++) {
            var Nww = audio.ww.Nnn[i];
            if (Nww !== 0) {
                for (var j = 0; j < Nww.length; j++) audio.vmv(Nww[j]);
            }
        }
    }

    function nwwnv() {
        audio.MMwVn(audio.wMm.title);
        audio.MMwVn(audio.wMm.end);
        for (var i = 0; i < wMw.length; i++) audio.MMwVn(wMw[i]);
        if (audio.options.VWVWW === 1) {
            var wmNWn = audio.options.nNmMV;
            audio.options.nNmMV = 1;
            audio.MMwVn(audio.wMm.vwMNW);
            audio.options.nNmMV = wmNWn;
        }
        if ((NNwwM !== vWn.vwMNW) && (mWWVV === 1)) {
            if (VNWVM === 0) {
                VNWVM = 1000;
                var mappos = vWn.vwMNW - NNwwM;
                audio.MmwVw(audio.wMm.vwMNW, 250, mappos);
                NNwwM = vWn.vwMNW;
            }
            VNWVM = window.Math.max(0, VNWVM - delta);
        }
        if ((mvnmN === 0) && (mWWVV === 1)) {
            audio.MmwVw(wMw[WvwmM], 5000, -mvVWW);
            WvwmM = (WvwmM + 1) % wMw.length;
            mvnmN = wwwvv[WvwmM] - 5000;
            audio.MmwVw(wMw[WvwmM], 5000, mvVWW);
        }
        mvnmN = window.Math.max(0, mvnmN - delta);
    };

    function NvwNv() {
        mWWVV = 0;
        vmwnm = 1;
        audio.MmwVw(audio.wMm.vwMNW, 250, -NNwwM);
        NNwwM = 0;
        vWn.vwMNW = 0;
        audio.MmwVw(wMw[WvwmM], 500, -mvVWW);
        audio.MmwVw(audio.wMm.end, 1000, vWn.mvVWW);
    };

    function MWwnM() {
        if (vmwnm === 0) audio.MmwVw(audio.wMm.title, 500, -mvVWW);
        else audio.MmwVw(audio.wMm.end, 500, -mvVWW);
    };

    function nMvWM() {
        mWWVV = 1;
        MWwnM();
        if (mvnmN === 0) WvwmM = (WvwmM + 1) % wMw.length;
        mvnmN = wwwvv[WvwmM] - 5000;
        audio.MmwVw(wMw[WvwmM], 5000, mvVWW);
    };
    return {
        nMvWM: nMvWM,
        NvwNv: NvwNv,
        nwwnv: nwwnv,
        MWwnM: MWwnM,
        mvVWW: mvVWW,
        vwMNW: 0
    };
})();
try {
    debugMode;
} catch (error) {
    debugMode = window.undefined;
}
if (debugMode === window.undefined) {
    window.aiptag = window.aiptag || ({});
    window.aiptag["consented"] = true;
    window.aiptag["cmd"] = window.aiptag["cmd"] || ([]);
    window.aiptag["cmd"]["display"] = window.aiptag["cmd"]["display"] || ([]);
    window.aiptag["cmd"]["player"] = window.aiptag["cmd"]["player"] || ([]);
    /* var vNWmm = function() {        
        adplayer = new aipPlayer({
            AD_WIDTH: 960,
            AD_HEIGHT: 540,
            AD_FULLSCREEN: true,
            AD_CENTERPLAYER: true,
            LOADING_TEXT: 'loading advertisement',
            PREROLL_ELEM: function() {
                return window.document.getElementById('preroll');
            },
            AIP_COMPLETE: function(nMWWmvw) {
                Home.waitAds = 0;
                Home.ads = -1;
                Home.joinServer();
            },
            AIP_REMOVE: function() {}
        });
    };
    window.aiptag["cmd"]["player"].push(vNWmm); */
}

function reloadIframe() {
    try {
        if (window.self !== window.top) {
            loaded = localStorage.getItem("inIframe");
            if (loaded === "1") localStorage.setItem("inIframe", "0");
            else {
                localStorage.setItem("inIframe", "1");
                window.location.href = window.location.href + "";
            }
        }
    } catch (error) {}
};
reloadIframe();
var versionInf = [30, 1758];
try {
    debugMode;
} catch (error) {
    debugMode = window.undefined;
}
Entitie.init(600, 30000, 5000);
Client.init(30, 15000, 2000, 3, 60000, 10000, onMessageRaw, onMessageJSON, onFirstMessage);

function waitHTMLAndRun() {
    htmlLoaded = ((((((((true && (window.document.getElementById("nickname") !== null)) && (window.document.getElementById("terms") !== null)) && (window.document.getElementById("serverList") !== null)) && (window.document.getElementById("changelog") !== null)) && (window.document.getElementById("howtoplay") !== null)) && (window.document.getElementById("featuredVideo") !== null)) && (window.document.getElementById("trevda") !== null)) && (window.document.getElementById("preroll") !== null)) && (window.document.getElementById("chat") !== null);
    if (htmlLoaded === true) {
        Loader.init();
        Home.init();
        Game.init();
        Score.init();
        Rank.init();
        Editor.init();
        CanvasUtils.initAnimatedCanvas(Loader, __RESIZE_METHOD_SCALE__, "can", "bod", 1280, window.undefined, true);
        Loader.run();
    } else window.setTimeout(waitHTMLAndRun, 100);
};

window.onbeforeunload = function() {
    if (Client.state & Client.binary.b1) return "Are you sure you want quit?";
};
waitHTMLAndRun();

